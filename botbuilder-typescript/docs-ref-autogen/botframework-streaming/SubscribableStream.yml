### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.SubscribableStream
    name: SubscribableStream
    fullName: SubscribableStream
    children:
      - botframework-streaming.SubscribableStream.addListener
      - botframework-streaming.SubscribableStream.addListener_1
      - botframework-streaming.SubscribableStream.addListener_2
      - botframework-streaming.SubscribableStream.addListener_3
      - botframework-streaming.SubscribableStream.addListener_4
      - botframework-streaming.SubscribableStream.addListener_5
      - botframework-streaming.SubscribableStream.addListener_6
      - botframework-streaming.SubscribableStream.addListener_7
      - botframework-streaming.SubscribableStream.cork
      - botframework-streaming.SubscribableStream.destroy
      - botframework-streaming.SubscribableStream.destroyed
      - botframework-streaming.SubscribableStream.emit
      - botframework-streaming.SubscribableStream.emit_1
      - botframework-streaming.SubscribableStream.emit_2
      - botframework-streaming.SubscribableStream.emit_3
      - botframework-streaming.SubscribableStream.emit_4
      - botframework-streaming.SubscribableStream.emit_5
      - botframework-streaming.SubscribableStream.emit_6
      - botframework-streaming.SubscribableStream.emit_7
      - botframework-streaming.SubscribableStream.end
      - botframework-streaming.SubscribableStream.end_1
      - botframework-streaming.SubscribableStream.end_2
      - botframework-streaming.SubscribableStream.eventNames
      - botframework-streaming.SubscribableStream.from
      - botframework-streaming.SubscribableStream.getMaxListeners
      - botframework-streaming.SubscribableStream.isPaused
      - botframework-streaming.SubscribableStream.length
      - botframework-streaming.SubscribableStream.listenerCount
      - botframework-streaming.SubscribableStream.listeners
      - botframework-streaming.SubscribableStream.off
      - botframework-streaming.SubscribableStream.on
      - botframework-streaming.SubscribableStream.on_1
      - botframework-streaming.SubscribableStream.on_2
      - botframework-streaming.SubscribableStream.on_3
      - botframework-streaming.SubscribableStream.on_4
      - botframework-streaming.SubscribableStream.on_5
      - botframework-streaming.SubscribableStream.on_6
      - botframework-streaming.SubscribableStream.on_7
      - botframework-streaming.SubscribableStream.once
      - botframework-streaming.SubscribableStream.once_1
      - botframework-streaming.SubscribableStream.once_2
      - botframework-streaming.SubscribableStream.once_3
      - botframework-streaming.SubscribableStream.once_4
      - botframework-streaming.SubscribableStream.once_5
      - botframework-streaming.SubscribableStream.once_6
      - botframework-streaming.SubscribableStream.once_7
      - botframework-streaming.SubscribableStream.pause
      - botframework-streaming.SubscribableStream.pipe
      - botframework-streaming.SubscribableStream.prependListener
      - botframework-streaming.SubscribableStream.prependListener_1
      - botframework-streaming.SubscribableStream.prependListener_2
      - botframework-streaming.SubscribableStream.prependListener_3
      - botframework-streaming.SubscribableStream.prependListener_4
      - botframework-streaming.SubscribableStream.prependListener_5
      - botframework-streaming.SubscribableStream.prependListener_6
      - botframework-streaming.SubscribableStream.prependListener_7
      - botframework-streaming.SubscribableStream.prependOnceListener
      - botframework-streaming.SubscribableStream.prependOnceListener_1
      - botframework-streaming.SubscribableStream.prependOnceListener_2
      - botframework-streaming.SubscribableStream.prependOnceListener_3
      - botframework-streaming.SubscribableStream.prependOnceListener_4
      - botframework-streaming.SubscribableStream.prependOnceListener_5
      - botframework-streaming.SubscribableStream.prependOnceListener_6
      - botframework-streaming.SubscribableStream.prependOnceListener_7
      - botframework-streaming.SubscribableStream.push
      - botframework-streaming.SubscribableStream.rawListeners
      - botframework-streaming.SubscribableStream.read
      - botframework-streaming.SubscribableStream.readable
      - botframework-streaming.SubscribableStream.readableEncoding
      - botframework-streaming.SubscribableStream.readableEnded
      - botframework-streaming.SubscribableStream.readableFlowing
      - botframework-streaming.SubscribableStream.readableHighWaterMark
      - botframework-streaming.SubscribableStream.readableLength
      - botframework-streaming.SubscribableStream.readableObjectMode
      - botframework-streaming.SubscribableStream.removeAllListeners
      - botframework-streaming.SubscribableStream.removeListener
      - botframework-streaming.SubscribableStream.removeListener_1
      - botframework-streaming.SubscribableStream.removeListener_2
      - botframework-streaming.SubscribableStream.removeListener_3
      - botframework-streaming.SubscribableStream.removeListener_4
      - botframework-streaming.SubscribableStream.removeListener_5
      - botframework-streaming.SubscribableStream.removeListener_6
      - botframework-streaming.SubscribableStream.removeListener_7
      - botframework-streaming.SubscribableStream.resume
      - botframework-streaming.SubscribableStream.setDefaultEncoding
      - botframework-streaming.SubscribableStream.setEncoding
      - botframework-streaming.SubscribableStream.setMaxListeners
      - botframework-streaming.SubscribableStream.constructor
      - botframework-streaming.SubscribableStream.subscribe
      - botframework-streaming.SubscribableStream.uncork
      - botframework-streaming.SubscribableStream.unpipe
      - botframework-streaming.SubscribableStream.unshift
      - botframework-streaming.SubscribableStream.wrap
      - botframework-streaming.SubscribableStream.writable
      - botframework-streaming.SubscribableStream.writableCorked
      - botframework-streaming.SubscribableStream.writableEnded
      - botframework-streaming.SubscribableStream.writableFinished
      - botframework-streaming.SubscribableStream.writableHighWaterMark
      - botframework-streaming.SubscribableStream.writableLength
      - botframework-streaming.SubscribableStream.writableObjectMode
      - botframework-streaming.SubscribableStream.write_1
      - botframework-streaming.SubscribableStream.write
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: Duplex
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Event emitter
      The defined events on documents including:
      1. close
      2. data
      3. end
      4. error
      5. pause
      6. readable
      7. resume
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_1
    name: 'addListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_2
    name: 'addListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_3
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_4
    name: 'addListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_5
    name: 'addListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_6
    name: 'addListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.addListener_7
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.cork
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.destroy
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - Error
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.destroyed
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_1
    name: 'emit("data", any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "data", chunk: any)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: chunk
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_2
    name: emit("end")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_3
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_4
    name: emit("pause")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "pause")'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_5
    name: emit("readable")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "readable")'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_6
    name: emit("resume")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "resume")'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.emit_7
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.end
    name: end(() => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: () => void)'
      parameters:
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.end_1
    name: 'end(any, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, cb?: () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.end_2
    name: 'end(any, BufferEncoding, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, encoding?: BufferEncoding, cb?: () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - botframework-streaming.BufferEncoding
          description: ''
          optional: true
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.from
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - ReadableOptions
          description: ''
          optional: true
      return:
        type:
          - Readable
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.isPaused
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public length: number = 0'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_1
    name: 'on("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_2
    name: 'on("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_3
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_4
    name: 'on("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_5
    name: 'on("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_6
    name: 'on("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.on_7
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_1
    name: 'once("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_2
    name: 'once("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_3
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_4
    name: 'once("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_5
    name: 'once("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_6
    name: 'once("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.once_7
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.pause
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.pipe
    name: 'pipe(T, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_1
    name: 'prependListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_2
    name: 'prependListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_3
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_4
    name: 'prependListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_5
    name: 'prependListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_6
    name: 'prependListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependListener_7
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_1
    name: 'prependOnceListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: any) =>
        void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_2
    name: 'prependOnceListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_3
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_4
    name: 'prependOnceListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_5
    name: 'prependOnceListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_6
    name: 'prependOnceListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.prependOnceListener_7
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.push
    name: 'push(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - botframework-streaming.BufferEncoding
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.read
    name: read(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: number)'
      parameters:
        - id: size
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readable
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readableEncoding
    name: readableEncoding
    fullName: readableEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableEncoding: BufferEncoding | null'
      return:
        type:
          - botframework-streaming.BufferEncoding | null
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readableEnded
    name: readableEnded
    fullName: readableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readableFlowing
    name: readableFlowing
    fullName: readableFlowing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableFlowing: boolean | null'
      return:
        type:
          - boolean | null
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readableHighWaterMark
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readableLength
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.readableObjectMode
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_1
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_2
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_3
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_4
    name: 'removeListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_5
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_6
    name: 'removeListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.removeListener_7
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.resume
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.setDefaultEncoding
    name: setDefaultEncoding(BufferEncoding)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: BufferEncoding)'
      parameters:
        - id: encoding
          type:
            - botframework-streaming.BufferEncoding
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.setEncoding
    name: setEncoding(BufferEncoding)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding: BufferEncoding)'
      parameters:
        - id: encoding
          type:
            - botframework-streaming.BufferEncoding
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.constructor
    name: SubscribableStream(DuplexOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SubscribableStream(options?: DuplexOptions)'
      parameters:
        - id: options
          type:
            - DuplexOptions
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.subscribe
    name: 'subscribe((chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function subscribe(onData: (chunk: any) => void)'
      parameters:
        - id: onData
          type:
            - '(chunk: any) => void'
          description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.uncork
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.unpipe
    name: unpipe(WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: WritableStream)'
      parameters:
        - id: destination
          type:
            - WritableStream
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.unshift
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - botframework-streaming.BufferEncoding
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.wrap
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writable
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writableCorked
    name: writableCorked
    fullName: writableCorked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableCorked: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writableEnded
    name: writableEnded
    fullName: writableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writableFinished
    name: writableFinished
    fullName: writableFinished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableFinished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writableHighWaterMark
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writableLength
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.writableObjectMode
    name: writableObjectMode
    fullName: writableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.write_1
    name: 'write(any, (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, cb?: (error: Error | null | undefined) =>
        void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - '(error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.SubscribableStream.write
    name: 'write(any, BufferEncoding, (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, encoding?: BufferEncoding, cb?: (error: Error
        | null | undefined) => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - botframework-streaming.BufferEncoding
          description: ''
          optional: true
        - id: cb
          type:
            - '(error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
references:
  - uid: botframework-streaming.BufferEncoding | null
    name: BufferEncoding | null
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: botframework-streaming.BufferEncoding
      - name: ' | null'
        fullName: ' | null'
  - uid: botframework-streaming.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: botframework-streaming.BufferEncoding
