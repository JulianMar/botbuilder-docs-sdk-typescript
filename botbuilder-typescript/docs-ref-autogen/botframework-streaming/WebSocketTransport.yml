### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.WebSocketTransport
    name: WebSocketTransport
    fullName: WebSocketTransport
    children:
      - botframework-streaming.WebSocketTransport.close
      - botframework-streaming.WebSocketTransport.isConnected
      - botframework-streaming.WebSocketTransport.onReceive
      - botframework-streaming.WebSocketTransport.receive
      - botframework-streaming.WebSocketTransport.send
      - botframework-streaming.WebSocketTransport.constructor
    langs:
      - typeScript
    type: class
    summary: Web socket based transport.
    package: botframework-streaming
  - uid: botframework-streaming.WebSocketTransport.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Close the socket this transport is connected to.
    syntax:
      content: function close()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.WebSocketTransport.isConnected
    name: isConnected
    fullName: isConnected
    children: []
    langs:
      - typeScript
    type: property
    summary: Returns true if the transport is connected to a socket.
    syntax:
      content: boolean isConnected
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.WebSocketTransport.onReceive
    name: onReceive(INodeBuffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the transport to attempt to receive incoming data that has not yet
      arrived.
    syntax:
      content: 'function onReceive(data: INodeBuffer)'
      parameters:
        - id: data
          type:
            - botframework-streaming.INodeBuffer
          description: |
            A buffer to store incoming data in.
    package: botframework-streaming
  - uid: botframework-streaming.WebSocketTransport.receive
    name: receive(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Attempt to receive incoming data from the connected socket.
    syntax:
      content: 'function receive(count: number)'
      parameters:
        - id: count
          type:
            - number
          description: The number of bytes to attempt to receive.
      return:
        type:
          - Promise<botframework-streaming.INodeBuffer>
        description: A buffer populated with the received data.
    package: botframework-streaming
  - uid: botframework-streaming.WebSocketTransport.send
    name: send(INodeBuffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends the given buffer out over the socket's connection.
    syntax:
      content: 'function send(buffer: INodeBuffer)'
      parameters:
        - id: buffer
          type:
            - botframework-streaming.INodeBuffer
          description: |
            The buffered data to send out over the connection.
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.WebSocketTransport.constructor
    name: WebSocketTransport(ISocket)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Creates a new instance of the
      [WebSocketTransport](xref:botframework-streaming.WebSocketTransport)
      class.
    syntax:
      content: 'new WebSocketTransport(ws: ISocket)'
      parameters:
        - id: ws
          type:
            - botframework-streaming.ISocket
          description: |
            The ISocket to build this transport on top of.
    package: botframework-streaming
references:
  - uid: botframework-streaming.ISocket
    name: ISocket
    spec.typeScript:
      - name: ISocket
        fullName: ISocket
        uid: botframework-streaming.ISocket
  - uid: botframework-streaming.INodeBuffer
    name: INodeBuffer
    spec.typeScript:
      - name: INodeBuffer
        fullName: INodeBuffer
        uid: botframework-streaming.INodeBuffer
  - uid: Promise<botframework-streaming.INodeBuffer>
    name: INodeBuffer>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: INodeBuffer
        fullName: INodeBuffer
        uid: botframework-streaming.INodeBuffer
      - name: '>'
        fullName: '>'
