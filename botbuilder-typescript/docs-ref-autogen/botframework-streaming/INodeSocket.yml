### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.INodeSocket
    name: INodeSocket
    fullName: INodeSocket
    children:
      - botframework-streaming.INodeSocket.addListener
      - botframework-streaming.INodeSocket.addListener_1
      - botframework-streaming.INodeSocket.addListener_2
      - botframework-streaming.INodeSocket.addListener_4
      - botframework-streaming.INodeSocket.addListener_3
      - botframework-streaming.INodeSocket.addListener_5
      - botframework-streaming.INodeSocket.address
      - botframework-streaming.INodeSocket.bufferSize
      - botframework-streaming.INodeSocket.bytesRead
      - botframework-streaming.INodeSocket.bytesWritten
      - botframework-streaming.INodeSocket.connect
      - botframework-streaming.INodeSocket.connect_2
      - botframework-streaming.INodeSocket.connect_1
      - botframework-streaming.INodeSocket.connect_3
      - botframework-streaming.INodeSocket.connecting
      - botframework-streaming.INodeSocket.cork
      - botframework-streaming.INodeSocket.destroy
      - botframework-streaming.INodeSocket.destroyed
      - botframework-streaming.INodeSocket.emit
      - botframework-streaming.INodeSocket.emit_1
      - botframework-streaming.INodeSocket.emit_2
      - botframework-streaming.INodeSocket.emit_4
      - botframework-streaming.INodeSocket.emit_3
      - botframework-streaming.INodeSocket.emit_5
      - botframework-streaming.INodeSocket.end
      - botframework-streaming.INodeSocket.end_1
      - botframework-streaming.INodeSocket.end_2
      - botframework-streaming.INodeSocket.eventNames
      - botframework-streaming.INodeSocket.getMaxListeners
      - botframework-streaming.INodeSocket.isPaused
      - botframework-streaming.INodeSocket.listenerCount
      - botframework-streaming.INodeSocket.listeners
      - botframework-streaming.INodeSocket.localAddress
      - botframework-streaming.INodeSocket.localPort
      - botframework-streaming.INodeSocket.off
      - botframework-streaming.INodeSocket.on_1
      - botframework-streaming.INodeSocket.on_2
      - botframework-streaming.INodeSocket.on_3
      - botframework-streaming.INodeSocket.on_4
      - botframework-streaming.INodeSocket.on_5
      - botframework-streaming.INodeSocket.on
      - botframework-streaming.INodeSocket.once
      - botframework-streaming.INodeSocket.once_1
      - botframework-streaming.INodeSocket.once_2
      - botframework-streaming.INodeSocket.once_4
      - botframework-streaming.INodeSocket.once_3
      - botframework-streaming.INodeSocket.once_5
      - botframework-streaming.INodeSocket.pause
      - botframework-streaming.INodeSocket.pipe
      - botframework-streaming.INodeSocket.prependListener
      - botframework-streaming.INodeSocket.prependListener_1
      - botframework-streaming.INodeSocket.prependListener_2
      - botframework-streaming.INodeSocket.prependListener_4
      - botframework-streaming.INodeSocket.prependListener_3
      - botframework-streaming.INodeSocket.prependListener_5
      - botframework-streaming.INodeSocket.prependOnceListener
      - botframework-streaming.INodeSocket.prependOnceListener_1
      - botframework-streaming.INodeSocket.prependOnceListener_2
      - botframework-streaming.INodeSocket.prependOnceListener_4
      - botframework-streaming.INodeSocket.prependOnceListener_3
      - botframework-streaming.INodeSocket.prependOnceListener_5
      - botframework-streaming.INodeSocket.push
      - botframework-streaming.INodeSocket.rawListeners
      - botframework-streaming.INodeSocket.read
      - botframework-streaming.INodeSocket.readable
      - botframework-streaming.INodeSocket.readableFlowing
      - botframework-streaming.INodeSocket.readableHighWaterMark
      - botframework-streaming.INodeSocket.readableLength
      - botframework-streaming.INodeSocket.ref
      - botframework-streaming.INodeSocket.removeAllListeners
      - botframework-streaming.INodeSocket.removeListener
      - botframework-streaming.INodeSocket.resume
      - botframework-streaming.INodeSocket.setDefaultEncoding
      - botframework-streaming.INodeSocket.setEncoding
      - botframework-streaming.INodeSocket.setKeepAlive
      - botframework-streaming.INodeSocket.setMaxListeners
      - botframework-streaming.INodeSocket.setNoDelay
      - botframework-streaming.INodeSocket.setTimeout
      - botframework-streaming.INodeSocket.uncork
      - botframework-streaming.INodeSocket.unpipe
      - botframework-streaming.INodeSocket.unref
      - botframework-streaming.INodeSocket.unshift
      - botframework-streaming.INodeSocket.wrap
      - botframework-streaming.INodeSocket.writable
      - botframework-streaming.INodeSocket.writableHighWaterMark
      - botframework-streaming.INodeSocket.writableLength
      - botframework-streaming.INodeSocket.write_6
      - botframework-streaming.INodeSocket.write_7
      - botframework-streaming.INodeSocket.write_5
      - botframework-streaming.INodeSocket.write_3
      - botframework-streaming.INodeSocket.write_1
      - botframework-streaming.INodeSocket.write_4
      - botframework-streaming.INodeSocket.write_2
      - botframework-streaming.INodeSocket.write
    langs:
      - typeScript
    type: interface
    summary: >
      Represents a Socket from the `net` module in Node.js.

      This interface supports the framework and is not intended to be called
      directly for your code.
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.addListener
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.addListener_1
    name: 'addListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.addListener_2
    name: 'addListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.addListener_4
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.addListener_3
    name: 'addListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.addListener_5
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.address
    name: address()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function address()
      parameters: []
      return:
        type:
          - AddressInfo | string
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.bufferSize
    name: bufferSize
    fullName: bufferSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bufferSize: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.bytesRead
    name: bytesRead
    fullName: bytesRead
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesRead: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.bytesWritten
    name: bytesWritten
    fullName: bytesWritten
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesWritten: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.connect
    name: 'connect(any, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function connect(options: any, connectionListener?: () => void)'
      parameters:
        - id: options
          type:
            - any
          description: ''
        - id: connectionListener
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.connect_2
    name: 'connect(number, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function connect(port: number, connectionListener?: () => void)'
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: connectionListener
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.connect_1
    name: 'connect(number, string, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, host: string, connectionListener?: () =>
        void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.connect_3
    name: 'connect(string, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function connect(path: string, connectionListener?: () => void)'
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.connecting
    name: connecting
    fullName: connecting
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connecting: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.cork
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.destroy
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - Error
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.destroyed
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.emit
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.emit_1
    name: 'emit("data", any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "data", chunk: any)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: chunk
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.emit_2
    name: emit("end")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.emit_4
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.emit_3
    name: emit("readable")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "readable")'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.emit_5
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.end
    name: end(() => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: () => void)'
      parameters:
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.end_1
    name: 'end(any, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, cb?: () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.end_2
    name: 'end(any, string, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, encoding?: string, cb?: () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - string
          description: ''
          optional: true
        - id: cb
          type:
            - () => void
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.isPaused
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.localAddress
    name: localAddress
    fullName: localAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localAddress: string'
      return:
        type:
          - string
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.localPort
    name: localPort
    fullName: localPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localPort: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.on_1
    name: 'on("close", (had_error: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: (had_error: boolean) => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(had_error: boolean) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.on_2
    name: 'on("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.on_3
    name: 'on("data", (data: INodeBuffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "data", listener: (data: INodeBuffer) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(data: INodeBuffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.on_4
    name: 'on("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.on_5
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.on
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.once
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.once_1
    name: 'once("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.once_2
    name: 'once("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.once_4
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.once_3
    name: 'once("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.once_5
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.pause
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.pipe
    name: 'pipe(T, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependListener
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependListener_1
    name: 'prependListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependListener_2
    name: 'prependListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependListener_4
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependListener_3
    name: 'prependListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependListener_5
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependOnceListener
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependOnceListener_1
    name: 'prependOnceListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: any) =>
        void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependOnceListener_2
    name: 'prependOnceListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependOnceListener_4
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependOnceListener_3
    name: 'prependOnceListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.prependOnceListener_5
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.push
    name: 'push(any, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: string)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.read
    name: read(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: number)'
      parameters:
        - id: size
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.readable
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.readableFlowing
    name: readableFlowing
    fullName: readableFlowing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableFlowing: boolean | null'
      return:
        type:
          - boolean | null
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.readableHighWaterMark
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.readableLength
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.ref
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.resume
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.setDefaultEncoding
    name: setDefaultEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.setEncoding
    name: setEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.setKeepAlive
    name: 'setKeepAlive(boolean, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setKeepAlive(enable?: boolean, initialDelay?: number)'
      parameters:
        - id: enable
          type:
            - boolean
          description: ''
          optional: true
        - id: initialDelay
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.setNoDelay
    name: setNoDelay(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setNoDelay(noDelay?: boolean)'
      parameters:
        - id: noDelay
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.setTimeout
    name: 'setTimeout(number, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(timeout: number, callback?: () => void)'
      parameters:
        - id: timeout
          type:
            - number
          description: ''
        - id: callback
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.uncork
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.unpipe
    name: unpipe(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: any)'
      parameters:
        - id: destination
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.unref
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
      return:
        type:
          - any
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.unshift
    name: unshift(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.wrap
    name: wrap(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: any)'
      parameters:
        - id: oldStream
          type:
            - any
          description: ''
      return:
        type:
          - this
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.writable
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.writableHighWaterMark
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.writableLength
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_6
    name: 'write(any, (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, cb?: (error: Error | null | undefined) =>
        void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - '(error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_7
    name: 'write(any, string, (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, encoding?: string, cb?: (error: Error | null
        | undefined) => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - string
          description: ''
          optional: true
        - id: cb
          type:
            - '(error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_5
    name: 'write(any, string, Function)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(data: any, encoding?: string, callback?: Function)'
      parameters:
        - id: data
          type:
            - any
          description: ''
        - id: encoding
          type:
            - string
          description: ''
          optional: true
        - id: callback
          type:
            - Function
          description: ''
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_3
    name: 'write(string, Function)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(str: string, cb?: Function)'
      parameters:
        - id: str
          type:
            - string
          description: ''
        - id: cb
          type:
            - Function
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_1
    name: 'write(string, string, Function)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(str: string, encoding?: string, cb?: Function)'
      parameters:
        - id: str
          type:
            - string
          description: ''
        - id: encoding
          type:
            - string
          description: ''
          optional: true
        - id: cb
          type:
            - Function
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_4
    name: 'write(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(str: string, encoding?: string, fd?: string)'
      parameters:
        - id: str
          type:
            - string
          description: ''
        - id: encoding
          type:
            - string
          description: ''
          optional: true
        - id: fd
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write_2
    name: write(ValidBuffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(buffer: ValidBuffer)'
      parameters:
        - id: buffer
          type:
            - botframework-streaming.ValidBuffer
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.INodeSocket.write
    name: 'write(ValidBuffer, (err?: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function write(buffer: ValidBuffer, cb?: (err?: Error) => void)'
      parameters:
        - id: buffer
          type:
            - botframework-streaming.ValidBuffer
          description: ''
        - id: cb
          type:
            - '(err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
references:
  - uid: botframework-streaming.ValidBuffer
    name: ValidBuffer
    spec.typeScript:
      - name: ValidBuffer
        fullName: ValidBuffer
        uid: botframework-streaming.ValidBuffer
