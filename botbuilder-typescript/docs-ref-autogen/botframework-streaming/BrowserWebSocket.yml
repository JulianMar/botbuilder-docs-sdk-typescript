### YamlMime:UniversalReference
items:
  - uid: botframework-streaming.BrowserWebSocket
    name: BrowserWebSocket
    fullName: BrowserWebSocket
    children:
      - botframework-streaming.BrowserWebSocket.constructor
      - botframework-streaming.BrowserWebSocket.close
      - botframework-streaming.BrowserWebSocket.connect
      - botframework-streaming.BrowserWebSocket.isConnected
      - botframework-streaming.BrowserWebSocket.setOnCloseHandler
      - botframework-streaming.BrowserWebSocket.setOnErrorHandler
      - botframework-streaming.BrowserWebSocket.setOnMessageHandler
      - botframework-streaming.BrowserWebSocket.write
    langs:
      - typeScript
    type: class
    summary: ''
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.constructor
    name: BrowserWebSocket(IBrowserWebSocket)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: >-
      Creates a new instance of the
      [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.
    syntax:
      content: 'new BrowserWebSocket(socket?: IBrowserWebSocket)'
      parameters:
        - id: socket
          type:
            - botframework-streaming.IBrowserWebSocket
          description: |
            The socket object to build this connection on.
          optional: true
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Close the socket.
    syntax:
      content: function close()
      parameters: []
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.connect
    name: connect(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Connects to the supporting socket using WebSocket protocol.
    syntax:
      content: 'function connect(serverAddress: string)'
      parameters:
        - id: serverAddress
          type:
            - string
          description: |
            The address the server is listening on.
      return:
        type:
          - Promise<void>
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.isConnected
    name: isConnected
    fullName: isConnected
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the socket is currently connected.
    syntax:
      content: boolean isConnected
      return:
        type:
          - boolean
        description: ''
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.setOnCloseHandler
    name: 'setOnCloseHandler((x: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Set the callback to call when encountering socket closures.
    syntax:
      content: 'function setOnCloseHandler(handler: (x: any) => void)'
      parameters:
        - id: handler
          type:
            - '(x: any) => void'
          description: ''
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.setOnErrorHandler
    name: 'setOnErrorHandler((x: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Set the callback to call when encountering errors.
    syntax:
      content: 'function setOnErrorHandler(handler: (x: any) => void)'
      parameters:
        - id: handler
          type:
            - '(x: any) => void'
          description: ''
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.setOnMessageHandler
    name: 'setOnMessageHandler((x: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Set the handler for text and binary messages received on the socket.
    syntax:
      content: 'function setOnMessageHandler(handler: (x: any) => void)'
      parameters:
        - id: handler
          type:
            - '(x: any) => void'
          description: ''
    package: botframework-streaming
  - uid: botframework-streaming.BrowserWebSocket.write
    name: write(INodeBuffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: Writes a buffer to the socket and sends it.
    syntax:
      content: 'function write(buffer: INodeBuffer)'
      parameters:
        - id: buffer
          type:
            - botframework-streaming.INodeBuffer
          description: |
            The buffer of data to send across the connection.
    package: botframework-streaming
references:
  - uid: botframework-streaming.IBrowserWebSocket
    name: IBrowserWebSocket
    spec.typeScript:
      - name: IBrowserWebSocket
        fullName: IBrowserWebSocket
        uid: botframework-streaming.IBrowserWebSocket
  - uid: botframework-streaming.INodeBuffer
    name: INodeBuffer
    spec.typeScript:
      - name: INodeBuffer
        fullName: INodeBuffer
        uid: botframework-streaming.INodeBuffer
