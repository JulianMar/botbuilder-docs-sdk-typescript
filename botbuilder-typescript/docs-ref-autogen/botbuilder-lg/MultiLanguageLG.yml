### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.MultiLanguageLG
    name: MultiLanguageLG
    fullName: MultiLanguageLG
    children:
      - botbuilder-lg.MultiLanguageLG.generate
      - botbuilder-lg.MultiLanguageLG.languagePolicy
      - botbuilder-lg.MultiLanguageLG.lgPerLocale
      - botbuilder-lg.MultiLanguageLG.constructor
    langs:
      - typeScript
    type: class
    summary: >-
      Multi locale Template Manager for language generation. This template
      manager will enumerate multi-locale LG files and will select

      the appropriate template using the current culture to perform template
      evaluation.
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.generate
    name: 'generate(string, object, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Generate template evaluate result.
    syntax:
      content: 'function generate(template: string, data?: object, locale?: string)'
      parameters:
        - id: template
          type:
            - string
          description: Template name.
        - id: data
          type:
            - object
          description: Scope data.
          optional: true
        - id: locale
          type:
            - string
          description: |
            Locale info.
          optional: true
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.languagePolicy
    name: languagePolicy
    fullName: languagePolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public languagePolicy: Map<string, string[]>'
      return:
        type:
          - 'Map<string, string[]>'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.lgPerLocale
    name: lgPerLocale
    fullName: lgPerLocale
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public lgPerLocale: Map<string, Templates>'
      return:
        type:
          - 'Map<string, botbuilder-lg.Templates>'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.MultiLanguageLG.constructor
    name: >-
      MultiLanguageLG(Map<string, Templates> | undefined, Map<string, string> |
      undefined, string)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the MultiLanguageLG class.
    syntax:
      content: >-
        new MultiLanguageLG(templatesPerLocale: Map<string, Templates> |
        undefined, filePerLocale: Map<string, string> | undefined,
        defaultLanguage?: string)
      parameters:
        - id: templatesPerLocale
          type:
            - 'Map<string, botbuilder-lg.Templates> | undefined'
          description: A map of LG file templates per locale.
        - id: filePerLocale
          type:
            - 'Map<string, string> | undefined'
          description: A map of locale and LG file.
        - id: defaultLanguage
          type:
            - string
          description: |
            Default language.
          optional: true
    package: botbuilder-lg
references:
  - uid: 'Map<string, botbuilder-lg.Templates> | undefined'
    name: Templates> | undefined
    spec.typeScript:
      - name: 'Map<string, '
        fullName: 'Map<string, '
      - name: Templates
        fullName: Templates
        uid: botbuilder-lg.Templates
      - name: '> | undefined'
        fullName: '> | undefined'
  - uid: 'Map<string, botbuilder-lg.Templates>'
    name: Templates>
    spec.typeScript:
      - name: 'Map<string, '
        fullName: 'Map<string, '
      - name: Templates
        fullName: Templates
        uid: botbuilder-lg.Templates
      - name: '>'
        fullName: '>'
