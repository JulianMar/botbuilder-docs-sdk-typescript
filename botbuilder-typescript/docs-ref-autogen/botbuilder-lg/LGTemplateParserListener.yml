### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGTemplateParserListener
    name: LGTemplateParserListener
    fullName: LGTemplateParserListener
    children:
      - botbuilder-lg.LGTemplateParserListener.enterBody
      - botbuilder-lg.LGTemplateParserListener.enterErrorStructuredName
      - botbuilder-lg.LGTemplateParserListener.enterErrorStructureLine
      - botbuilder-lg.LGTemplateParserListener.enterErrorTemplateString
      - botbuilder-lg.LGTemplateParserListener.enterEveryRule
      - botbuilder-lg.LGTemplateParserListener.enterExpression
      - botbuilder-lg.LGTemplateParserListener.enterExpressionInStructure
      - botbuilder-lg.LGTemplateParserListener.enterIfCondition
      - botbuilder-lg.LGTemplateParserListener.enterIfConditionRule
      - botbuilder-lg.LGTemplateParserListener.enterIfElseBody
      - botbuilder-lg.LGTemplateParserListener.enterIfElseTemplateBody
      - botbuilder-lg.LGTemplateParserListener.enterKeyValueStructureLine
      - botbuilder-lg.LGTemplateParserListener.enterKeyValueStructureValue
      - botbuilder-lg.LGTemplateParserListener.enterNormalBody
      - botbuilder-lg.LGTemplateParserListener.enterNormalTemplateBody
      - botbuilder-lg.LGTemplateParserListener.enterNormalTemplateString
      - botbuilder-lg.LGTemplateParserListener.enterStructuredBody
      - botbuilder-lg.LGTemplateParserListener.enterStructuredBodyContentLine
      - botbuilder-lg.LGTemplateParserListener.enterStructuredBodyEndLine
      - botbuilder-lg.LGTemplateParserListener.enterStructuredBodyNameLine
      - botbuilder-lg.LGTemplateParserListener.enterStructuredTemplateBody
      - botbuilder-lg.LGTemplateParserListener.enterSwitchCaseBody
      - botbuilder-lg.LGTemplateParserListener.enterSwitchCaseRule
      - botbuilder-lg.LGTemplateParserListener.enterSwitchCaseStat
      - botbuilder-lg.LGTemplateParserListener.enterSwitchCaseTemplateBody
      - botbuilder-lg.LGTemplateParserListener.enterTemplate
      - botbuilder-lg.LGTemplateParserListener.enterTemplateString
      - botbuilder-lg.LGTemplateParserListener.exitBody
      - botbuilder-lg.LGTemplateParserListener.exitErrorStructuredName
      - botbuilder-lg.LGTemplateParserListener.exitErrorStructureLine
      - botbuilder-lg.LGTemplateParserListener.exitErrorTemplateString
      - botbuilder-lg.LGTemplateParserListener.exitEveryRule
      - botbuilder-lg.LGTemplateParserListener.exitExpression
      - botbuilder-lg.LGTemplateParserListener.exitExpressionInStructure
      - botbuilder-lg.LGTemplateParserListener.exitIfCondition
      - botbuilder-lg.LGTemplateParserListener.exitIfConditionRule
      - botbuilder-lg.LGTemplateParserListener.exitIfElseBody
      - botbuilder-lg.LGTemplateParserListener.exitIfElseTemplateBody
      - botbuilder-lg.LGTemplateParserListener.exitKeyValueStructureLine
      - botbuilder-lg.LGTemplateParserListener.exitKeyValueStructureValue
      - botbuilder-lg.LGTemplateParserListener.exitNormalBody
      - botbuilder-lg.LGTemplateParserListener.exitNormalTemplateBody
      - botbuilder-lg.LGTemplateParserListener.exitNormalTemplateString
      - botbuilder-lg.LGTemplateParserListener.exitStructuredBody
      - botbuilder-lg.LGTemplateParserListener.exitStructuredBodyContentLine
      - botbuilder-lg.LGTemplateParserListener.exitStructuredBodyEndLine
      - botbuilder-lg.LGTemplateParserListener.exitStructuredBodyNameLine
      - botbuilder-lg.LGTemplateParserListener.exitStructuredTemplateBody
      - botbuilder-lg.LGTemplateParserListener.exitSwitchCaseBody
      - botbuilder-lg.LGTemplateParserListener.exitSwitchCaseRule
      - botbuilder-lg.LGTemplateParserListener.exitSwitchCaseStat
      - botbuilder-lg.LGTemplateParserListener.exitSwitchCaseTemplateBody
      - botbuilder-lg.LGTemplateParserListener.exitTemplate
      - botbuilder-lg.LGTemplateParserListener.exitTemplateString
      - botbuilder-lg.LGTemplateParserListener.visitErrorNode
      - botbuilder-lg.LGTemplateParserListener.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: |-
      This interface defines a complete listener for a parse tree produced by
      `LGTemplateParser`.
    extends:
      name: ParseTreeListener
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterBody
    name: enterBody
    fullName: enterBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'enterBody?: (ctx: BodyContext) => void'
      return:
        type:
          - '(ctx: BodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterErrorStructuredName
    name: enterErrorStructuredName
    fullName: enterErrorStructuredName
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.errorStructuredName`.
    optional: true
    syntax:
      content: 'enterErrorStructuredName?: (ctx: ErrorStructuredNameContext) => void'
      return:
        type:
          - '(ctx: ErrorStructuredNameContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterErrorStructureLine
    name: enterErrorStructureLine
    fullName: enterErrorStructureLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.errorStructureLine`.
    optional: true
    syntax:
      content: 'enterErrorStructureLine?: (ctx: ErrorStructureLineContext) => void'
      return:
        type:
          - '(ctx: ErrorStructureLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterErrorTemplateString
    name: enterErrorTemplateString
    fullName: enterErrorTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.errorTemplateString`.
    optional: true
    syntax:
      content: 'enterErrorTemplateString?: (ctx: ErrorTemplateStringContext) => void'
      return:
        type:
          - '(ctx: ErrorTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterEveryRule
    name: enterEveryRule
    fullName: enterEveryRule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'enterEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type:
          - '(ctx: ParserRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterExpression
    name: enterExpression
    fullName: enterExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.expression`.
    optional: true
    syntax:
      content: 'enterExpression?: (ctx: ExpressionContext) => void'
      return:
        type:
          - '(ctx: ExpressionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterExpressionInStructure
    name: enterExpressionInStructure
    fullName: enterExpressionInStructure
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.expressionInStructure`.
    optional: true
    syntax:
      content: 'enterExpressionInStructure?: (ctx: ExpressionInStructureContext) => void'
      return:
        type:
          - '(ctx: ExpressionInStructureContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterIfCondition
    name: enterIfCondition
    fullName: enterIfCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.ifCondition`.
    optional: true
    syntax:
      content: 'enterIfCondition?: (ctx: IfConditionContext) => void'
      return:
        type:
          - '(ctx: IfConditionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterIfConditionRule
    name: enterIfConditionRule
    fullName: enterIfConditionRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.ifConditionRule`.
    optional: true
    syntax:
      content: 'enterIfConditionRule?: (ctx: IfConditionRuleContext) => void'
      return:
        type:
          - '(ctx: IfConditionRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterIfElseBody
    name: enterIfElseBody
    fullName: enterIfElseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `ifElseBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'enterIfElseBody?: (ctx: IfElseBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterIfElseTemplateBody
    name: enterIfElseTemplateBody
    fullName: enterIfElseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.ifElseTemplateBody`.
    optional: true
    syntax:
      content: 'enterIfElseTemplateBody?: (ctx: IfElseTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterKeyValueStructureLine
    name: enterKeyValueStructureLine
    fullName: enterKeyValueStructureLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.keyValueStructureLine`.
    optional: true
    syntax:
      content: 'enterKeyValueStructureLine?: (ctx: KeyValueStructureLineContext) => void'
      return:
        type:
          - '(ctx: KeyValueStructureLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterKeyValueStructureValue
    name: enterKeyValueStructureValue
    fullName: enterKeyValueStructureValue
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.keyValueStructureValue`.
    optional: true
    syntax:
      content: >-
        enterKeyValueStructureValue?: (ctx: KeyValueStructureValueContext) =>
        void
      return:
        type:
          - '(ctx: KeyValueStructureValueContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterNormalBody
    name: enterNormalBody
    fullName: enterNormalBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `normalBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'enterNormalBody?: (ctx: NormalBodyContext) => void'
      return:
        type:
          - '(ctx: NormalBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterNormalTemplateBody
    name: enterNormalTemplateBody
    fullName: enterNormalTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.normalTemplateBody`.
    optional: true
    syntax:
      content: 'enterNormalTemplateBody?: (ctx: NormalTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterNormalTemplateString
    name: enterNormalTemplateString
    fullName: enterNormalTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.normalTemplateString`.
    optional: true
    syntax:
      content: 'enterNormalTemplateString?: (ctx: NormalTemplateStringContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterStructuredBody
    name: enterStructuredBody
    fullName: enterStructuredBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `structuredBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'enterStructuredBody?: (ctx: StructuredBodyContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterStructuredBodyContentLine
    name: enterStructuredBodyContentLine
    fullName: enterStructuredBodyContentLine
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Enter a parse tree produced by
      `LGTemplateParser.structuredBodyContentLine`.
    optional: true
    syntax:
      content: >-
        enterStructuredBodyContentLine?: (ctx: StructuredBodyContentLineContext)
        => void
      return:
        type:
          - '(ctx: StructuredBodyContentLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterStructuredBodyEndLine
    name: enterStructuredBodyEndLine
    fullName: enterStructuredBodyEndLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.structuredBodyEndLine`.
    optional: true
    syntax:
      content: 'enterStructuredBodyEndLine?: (ctx: StructuredBodyEndLineContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyEndLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterStructuredBodyNameLine
    name: enterStructuredBodyNameLine
    fullName: enterStructuredBodyNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.structuredBodyNameLine`.
    optional: true
    syntax:
      content: >-
        enterStructuredBodyNameLine?: (ctx: StructuredBodyNameLineContext) =>
        void
      return:
        type:
          - '(ctx: StructuredBodyNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterStructuredTemplateBody
    name: enterStructuredTemplateBody
    fullName: enterStructuredTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.structuredTemplateBody`.
    optional: true
    syntax:
      content: >-
        enterStructuredTemplateBody?: (ctx: StructuredTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: StructuredTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterSwitchCaseBody
    name: enterSwitchCaseBody
    fullName: enterSwitchCaseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Enter a parse tree produced by the `switchCaseBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'enterSwitchCaseBody?: (ctx: SwitchCaseBodyContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterSwitchCaseRule
    name: enterSwitchCaseRule
    fullName: enterSwitchCaseRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.switchCaseRule`.
    optional: true
    syntax:
      content: 'enterSwitchCaseRule?: (ctx: SwitchCaseRuleContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterSwitchCaseStat
    name: enterSwitchCaseStat
    fullName: enterSwitchCaseStat
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.switchCaseStat`.
    optional: true
    syntax:
      content: 'enterSwitchCaseStat?: (ctx: SwitchCaseStatContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseStatContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterSwitchCaseTemplateBody
    name: enterSwitchCaseTemplateBody
    fullName: enterSwitchCaseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.switchCaseTemplateBody`.
    optional: true
    syntax:
      content: >-
        enterSwitchCaseTemplateBody?: (ctx: SwitchCaseTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: SwitchCaseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterTemplate
    name: enterTemplate
    fullName: enterTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.template`.
    optional: true
    syntax:
      content: 'enterTemplate?: (ctx: TemplateContext) => void'
      return:
        type:
          - '(ctx: TemplateContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.enterTemplateString
    name: enterTemplateString
    fullName: enterTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Enter a parse tree produced by `LGTemplateParser.templateString`.
    optional: true
    syntax:
      content: 'enterTemplateString?: (ctx: TemplateStringContext) => void'
      return:
        type:
          - '(ctx: TemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitBody
    name: exitBody
    fullName: exitBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'exitBody?: (ctx: BodyContext) => void'
      return:
        type:
          - '(ctx: BodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitErrorStructuredName
    name: exitErrorStructuredName
    fullName: exitErrorStructuredName
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.errorStructuredName`.
    optional: true
    syntax:
      content: 'exitErrorStructuredName?: (ctx: ErrorStructuredNameContext) => void'
      return:
        type:
          - '(ctx: ErrorStructuredNameContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitErrorStructureLine
    name: exitErrorStructureLine
    fullName: exitErrorStructureLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.errorStructureLine`.
    optional: true
    syntax:
      content: 'exitErrorStructureLine?: (ctx: ErrorStructureLineContext) => void'
      return:
        type:
          - '(ctx: ErrorStructureLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitErrorTemplateString
    name: exitErrorTemplateString
    fullName: exitErrorTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.errorTemplateString`.
    optional: true
    syntax:
      content: 'exitErrorTemplateString?: (ctx: ErrorTemplateStringContext) => void'
      return:
        type:
          - '(ctx: ErrorTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitEveryRule
    name: exitEveryRule
    fullName: exitEveryRule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'exitEveryRule?: (ctx: ParserRuleContext) => void'
      return:
        type:
          - '(ctx: ParserRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitExpression
    name: exitExpression
    fullName: exitExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.expression`.
    optional: true
    syntax:
      content: 'exitExpression?: (ctx: ExpressionContext) => void'
      return:
        type:
          - '(ctx: ExpressionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitExpressionInStructure
    name: exitExpressionInStructure
    fullName: exitExpressionInStructure
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.expressionInStructure`.
    optional: true
    syntax:
      content: 'exitExpressionInStructure?: (ctx: ExpressionInStructureContext) => void'
      return:
        type:
          - '(ctx: ExpressionInStructureContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitIfCondition
    name: exitIfCondition
    fullName: exitIfCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.ifCondition`.
    optional: true
    syntax:
      content: 'exitIfCondition?: (ctx: IfConditionContext) => void'
      return:
        type:
          - '(ctx: IfConditionContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitIfConditionRule
    name: exitIfConditionRule
    fullName: exitIfConditionRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.ifConditionRule`.
    optional: true
    syntax:
      content: 'exitIfConditionRule?: (ctx: IfConditionRuleContext) => void'
      return:
        type:
          - '(ctx: IfConditionRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitIfElseBody
    name: exitIfElseBody
    fullName: exitIfElseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `ifElseBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'exitIfElseBody?: (ctx: IfElseBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitIfElseTemplateBody
    name: exitIfElseTemplateBody
    fullName: exitIfElseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.ifElseTemplateBody`.
    optional: true
    syntax:
      content: 'exitIfElseTemplateBody?: (ctx: IfElseTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: IfElseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitKeyValueStructureLine
    name: exitKeyValueStructureLine
    fullName: exitKeyValueStructureLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.keyValueStructureLine`.
    optional: true
    syntax:
      content: 'exitKeyValueStructureLine?: (ctx: KeyValueStructureLineContext) => void'
      return:
        type:
          - '(ctx: KeyValueStructureLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitKeyValueStructureValue
    name: exitKeyValueStructureValue
    fullName: exitKeyValueStructureValue
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.keyValueStructureValue`.
    optional: true
    syntax:
      content: >-
        exitKeyValueStructureValue?: (ctx: KeyValueStructureValueContext) =>
        void
      return:
        type:
          - '(ctx: KeyValueStructureValueContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitNormalBody
    name: exitNormalBody
    fullName: exitNormalBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `normalBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'exitNormalBody?: (ctx: NormalBodyContext) => void'
      return:
        type:
          - '(ctx: NormalBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitNormalTemplateBody
    name: exitNormalTemplateBody
    fullName: exitNormalTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.normalTemplateBody`.
    optional: true
    syntax:
      content: 'exitNormalTemplateBody?: (ctx: NormalTemplateBodyContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitNormalTemplateString
    name: exitNormalTemplateString
    fullName: exitNormalTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.normalTemplateString`.
    optional: true
    syntax:
      content: 'exitNormalTemplateString?: (ctx: NormalTemplateStringContext) => void'
      return:
        type:
          - '(ctx: NormalTemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitStructuredBody
    name: exitStructuredBody
    fullName: exitStructuredBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `structuredBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'exitStructuredBody?: (ctx: StructuredBodyContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitStructuredBodyContentLine
    name: exitStructuredBodyContentLine
    fullName: exitStructuredBodyContentLine
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Exit a parse tree produced by
      `LGTemplateParser.structuredBodyContentLine`.
    optional: true
    syntax:
      content: >-
        exitStructuredBodyContentLine?: (ctx: StructuredBodyContentLineContext)
        => void
      return:
        type:
          - '(ctx: StructuredBodyContentLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitStructuredBodyEndLine
    name: exitStructuredBodyEndLine
    fullName: exitStructuredBodyEndLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.structuredBodyEndLine`.
    optional: true
    syntax:
      content: 'exitStructuredBodyEndLine?: (ctx: StructuredBodyEndLineContext) => void'
      return:
        type:
          - '(ctx: StructuredBodyEndLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitStructuredBodyNameLine
    name: exitStructuredBodyNameLine
    fullName: exitStructuredBodyNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.structuredBodyNameLine`.
    optional: true
    syntax:
      content: >-
        exitStructuredBodyNameLine?: (ctx: StructuredBodyNameLineContext) =>
        void
      return:
        type:
          - '(ctx: StructuredBodyNameLineContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitStructuredTemplateBody
    name: exitStructuredTemplateBody
    fullName: exitStructuredTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.structuredTemplateBody`.
    optional: true
    syntax:
      content: >-
        exitStructuredTemplateBody?: (ctx: StructuredTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: StructuredTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitSwitchCaseBody
    name: exitSwitchCaseBody
    fullName: exitSwitchCaseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Exit a parse tree produced by the `switchCaseBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'exitSwitchCaseBody?: (ctx: SwitchCaseBodyContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitSwitchCaseRule
    name: exitSwitchCaseRule
    fullName: exitSwitchCaseRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.switchCaseRule`.
    optional: true
    syntax:
      content: 'exitSwitchCaseRule?: (ctx: SwitchCaseRuleContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseRuleContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitSwitchCaseStat
    name: exitSwitchCaseStat
    fullName: exitSwitchCaseStat
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.switchCaseStat`.
    optional: true
    syntax:
      content: 'exitSwitchCaseStat?: (ctx: SwitchCaseStatContext) => void'
      return:
        type:
          - '(ctx: SwitchCaseStatContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitSwitchCaseTemplateBody
    name: exitSwitchCaseTemplateBody
    fullName: exitSwitchCaseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.switchCaseTemplateBody`.
    optional: true
    syntax:
      content: >-
        exitSwitchCaseTemplateBody?: (ctx: SwitchCaseTemplateBodyContext) =>
        void
      return:
        type:
          - '(ctx: SwitchCaseTemplateBodyContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitTemplate
    name: exitTemplate
    fullName: exitTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.template`.
    optional: true
    syntax:
      content: 'exitTemplate?: (ctx: TemplateContext) => void'
      return:
        type:
          - '(ctx: TemplateContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.exitTemplateString
    name: exitTemplateString
    fullName: exitTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Exit a parse tree produced by `LGTemplateParser.templateString`.
    optional: true
    syntax:
      content: 'exitTemplateString?: (ctx: TemplateStringContext) => void'
      return:
        type:
          - '(ctx: TemplateStringContext) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.visitErrorNode
    name: visitErrorNode
    fullName: visitErrorNode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'visitErrorNode?: (node: ErrorNode) => void'
      return:
        type:
          - '(node: ErrorNode) => void'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserListener.visitTerminal
    name: visitTerminal
    fullName: visitTerminal
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'visitTerminal?: (node: TerminalNode) => void'
      return:
        type:
          - '(node: TerminalNode) => void'
        description: ''
    package: botbuilder-lg
