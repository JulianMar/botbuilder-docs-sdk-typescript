### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.Evaluator
    name: Evaluator
    fullName: Evaluator
    children:
      - botbuilder-lg.Evaluator.activityAttachmentFunctionName
      - botbuilder-lg.Evaluator.checkExpressionResult
      - botbuilder-lg.Evaluator.concatErrorMsg
      - botbuilder-lg.Evaluator.constructScope
      - botbuilder-lg.Evaluator.evaluateTemplate
      - botbuilder-lg.Evaluator.constructor
      - botbuilder-lg.Evaluator.expandTextFunctionName
      - botbuilder-lg.Evaluator.expressionParser
      - botbuilder-lg.Evaluator.fromFileFunctionName
      - botbuilder-lg.Evaluator.isTemplateFunctionName
      - botbuilder-lg.Evaluator.LGType
      - botbuilder-lg.Evaluator.ReExecuteSuffix
      - botbuilder-lg.Evaluator.templateFunctionName
      - botbuilder-lg.Evaluator.templateMap
      - botbuilder-lg.Evaluator.templates
      - botbuilder-lg.Evaluator.visit
      - botbuilder-lg.Evaluator.visitChildren
      - botbuilder-lg.Evaluator.visitErrorNode
      - botbuilder-lg.Evaluator.visitIfElseBody
      - botbuilder-lg.Evaluator.visitNormalBody
      - botbuilder-lg.Evaluator.visitNormalTemplateBody
      - botbuilder-lg.Evaluator.visitNormalTemplateString
      - botbuilder-lg.Evaluator.visitStructuredTemplateBody
      - botbuilder-lg.Evaluator.visitSwitchCaseBody
      - botbuilder-lg.Evaluator.visitTerminal
      - botbuilder-lg.Evaluator.wrappedEvalTextContainsExpression
    langs:
      - typeScript
    type: class
    summary: Evaluation runtime engine
    extends:
      name: AbstractParseTreeVisitor<any>
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.activityAttachmentFunctionName
    name: activityAttachmentFunctionName
    fullName: activityAttachmentFunctionName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        public static activityAttachmentFunctionName: "ActivityAttachment" =
        "ActivityAttachment"
      return:
        type:
          - '"ActivityAttachment"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.checkExpressionResult
    name: 'checkExpressionResult(string, string, any, string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function checkExpressionResult(exp: string, error: string,
        result: any, templateName: string, inlineContent: string, errorPrefix:
        string)
      parameters:
        - id: exp
          type:
            - string
          description: ''
        - id: error
          type:
            - string
          description: ''
        - id: result
          type:
            - any
          description: ''
        - id: templateName
          type:
            - string
          description: ''
        - id: inlineContent
          type:
            - string
          description: ''
        - id: errorPrefix
          type:
            - string
          description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.concatErrorMsg
    name: 'concatErrorMsg(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function concatErrorMsg(firstError: string, secondError: string)'
      parameters:
        - id: firstError
          type:
            - string
          description: ''
        - id: secondError
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.constructScope
    name: 'constructScope(string, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function constructScope(inputTemplateName: string, args: any[])'
      parameters:
        - id: inputTemplateName
          type:
            - string
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.evaluateTemplate
    name: 'evaluateTemplate(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Evaluate a template with given name and scope.
    syntax:
      content: 'function evaluateTemplate(inputTemplateName: string, scope: any)'
      parameters:
        - id: inputTemplateName
          type:
            - string
          description: Template name.
        - id: scope
          type:
            - any
          description: Scope.
      return:
        type:
          - any
        description: Evaluate result.
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.constructor
    name: 'Evaluator(Template[], ExpressionParser, EvaluationOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new Evaluator(templates: Template[], expressionParser: ExpressionParser,
        opt: EvaluationOptions)
      parameters:
        - id: templates
          type:
            - 'botbuilder-lg.Template[]'
          description: ''
        - id: expressionParser
          type:
            - ExpressionParser
          description: ''
        - id: opt
          type:
            - botbuilder-lg.EvaluationOptions
          description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.expandTextFunctionName
    name: expandTextFunctionName
    fullName: expandTextFunctionName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static expandTextFunctionName: "expandText" = "expandText"'
      return:
        type:
          - '"expandText"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.expressionParser
    name: expressionParser
    fullName: expressionParser
    children: []
    langs:
      - typeScript
    type: property
    summary: Expression parser.
    syntax:
      content: 'public expressionParser: ExpressionParser'
      return:
        type:
          - ExpressionParser
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.fromFileFunctionName
    name: fromFileFunctionName
    fullName: fromFileFunctionName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static fromFileFunctionName: "fromFile" = "fromFile"'
      return:
        type:
          - '"fromFile"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.isTemplateFunctionName
    name: isTemplateFunctionName
    fullName: isTemplateFunctionName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static isTemplateFunctionName: "isTemplate" = "isTemplate"'
      return:
        type:
          - '"isTemplate"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.LGType
    name: LGType
    fullName: LGType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static LGType: "lgType" = "lgType"'
      return:
        type:
          - '"lgType"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.ReExecuteSuffix
    name: ReExecuteSuffix
    fullName: ReExecuteSuffix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static ReExecuteSuffix: "!" = "!"'
      return:
        type:
          - '"!"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.templateFunctionName
    name: templateFunctionName
    fullName: templateFunctionName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'public static templateFunctionName: "template" = "template"'
      return:
        type:
          - '"template"'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.templateMap
    name: templateMap
    fullName: templateMap
    children: []
    langs:
      - typeScript
    type: property
    summary: TemplateMap.
    syntax:
      content: 'public templateMap: [key: string]: Template'
      return:
        type:
          - '[key: string]: botbuilder-lg.Template'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.templates
    name: templates
    fullName: templates
    children: []
    langs:
      - typeScript
    type: property
    summary: Templates.
    syntax:
      content: 'public templates: Template[]'
      return:
        type:
          - 'botbuilder-lg.Template[]'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visit
    name: visit(ParseTree)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      {@inheritDoc}
      The default implementation calls <xref:ParseTree%23accept> on the
      specified tree.
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type:
            - ParseTree
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitChildren
    name: visitChildren(RuleNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      {@inheritDoc}
      The default implementation initializes the aggregate result to
      [defaultResult()](xref:%23defaultResult). Before visiting each child, it
      calls [shouldVisitNextChild](xref:%23shouldVisitNextChild); if the result
      is `false` no more children are visited and the current aggregate
      result is returned. After visiting a child, the aggregate result is
      updated by calling [aggregateResult](xref:%23aggregateResult) with the
      previous aggregate result and the result of visiting the child.

      The default implementation is not safe for use in visitors that modify
      the tree structure. Visitors that modify the tree should override this
      method to behave properly in respect to the specific algorithm in use.
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type:
            - RuleNode
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitErrorNode
    name: visitErrorNode(ErrorNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      {@inheritDoc}
      The default implementation returns the result of
      [defaultResult](xref:%23defaultResult).
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type:
            - ErrorNode
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitIfElseBody
    name: visitIfElseBody(IfElseBodyContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function visitIfElseBody(ctx: IfElseBodyContext)'
      parameters:
        - id: ctx
          type:
            - botbuilder-lg.IfElseBodyContext
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitNormalBody
    name: visitNormalBody(NormalBodyContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function visitNormalBody(ctx: NormalBodyContext)'
      parameters:
        - id: ctx
          type:
            - botbuilder-lg.NormalBodyContext
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitNormalTemplateBody
    name: visitNormalTemplateBody(NormalTemplateBodyContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function visitNormalTemplateBody(ctx: NormalTemplateBodyContext)'
      parameters:
        - id: ctx
          type:
            - botbuilder-lg.NormalTemplateBodyContext
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitNormalTemplateString
    name: visitNormalTemplateString(NormalTemplateStringContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function visitNormalTemplateString(ctx: NormalTemplateStringContext)'
      parameters:
        - id: ctx
          type:
            - botbuilder-lg.NormalTemplateStringContext
          description: ''
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitStructuredTemplateBody
    name: visitStructuredTemplateBody(StructuredTemplateBodyContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function visitStructuredTemplateBody(ctx: StructuredTemplateBodyContext)'
      parameters:
        - id: ctx
          type:
            - botbuilder-lg.StructuredTemplateBodyContext
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitSwitchCaseBody
    name: visitSwitchCaseBody(SwitchCaseBodyContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function visitSwitchCaseBody(ctx: SwitchCaseBodyContext)'
      parameters:
        - id: ctx
          type:
            - botbuilder-lg.SwitchCaseBodyContext
          description: ''
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.visitTerminal
    name: visitTerminal(TerminalNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      {@inheritDoc}
      The default implementation returns the result of
      [defaultResult](xref:%23defaultResult).
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type:
            - TerminalNode
          description: ''
      return:
        type:
          - any
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.Evaluator.wrappedEvalTextContainsExpression
    name: 'wrappedEvalTextContainsExpression(string, RegExp)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrappedEvalTextContainsExpression(exp: string, regex: RegExp)'
      parameters:
        - id: exp
          type:
            - string
          description: ''
        - id: regex
          type:
            - RegExp
          description: ''
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
references:
  - uid: 'botbuilder-lg.Template[]'
    name: 'Template[]'
    spec.typeScript:
      - name: Template
        fullName: Template
        uid: botbuilder-lg.Template
      - name: '[]'
        fullName: '[]'
  - uid: botbuilder-lg.EvaluationOptions
    name: EvaluationOptions
    spec.typeScript:
      - name: EvaluationOptions
        fullName: EvaluationOptions
        uid: botbuilder-lg.EvaluationOptions
  - uid: '[key: string]: botbuilder-lg.Template'
    name: Template
    spec.typeScript:
      - name: '[key: string]: '
        fullName: '[key: string]: '
      - name: Template
        fullName: Template
        uid: botbuilder-lg.Template
  - uid: botbuilder-lg.IfElseBodyContext
    name: IfElseBodyContext
    spec.typeScript:
      - name: IfElseBodyContext
        fullName: IfElseBodyContext
        uid: botbuilder-lg.IfElseBodyContext
  - uid: botbuilder-lg.NormalBodyContext
    name: NormalBodyContext
    spec.typeScript:
      - name: NormalBodyContext
        fullName: NormalBodyContext
        uid: botbuilder-lg.NormalBodyContext
  - uid: botbuilder-lg.NormalTemplateBodyContext
    name: NormalTemplateBodyContext
    spec.typeScript:
      - name: NormalTemplateBodyContext
        fullName: NormalTemplateBodyContext
        uid: botbuilder-lg.NormalTemplateBodyContext
  - uid: botbuilder-lg.NormalTemplateStringContext
    name: NormalTemplateStringContext
    spec.typeScript:
      - name: NormalTemplateStringContext
        fullName: NormalTemplateStringContext
        uid: botbuilder-lg.NormalTemplateStringContext
  - uid: botbuilder-lg.StructuredTemplateBodyContext
    name: StructuredTemplateBodyContext
    spec.typeScript:
      - name: StructuredTemplateBodyContext
        fullName: StructuredTemplateBodyContext
        uid: botbuilder-lg.StructuredTemplateBodyContext
  - uid: botbuilder-lg.SwitchCaseBodyContext
    name: SwitchCaseBodyContext
    spec.typeScript:
      - name: SwitchCaseBodyContext
        fullName: SwitchCaseBodyContext
        uid: botbuilder-lg.SwitchCaseBodyContext
