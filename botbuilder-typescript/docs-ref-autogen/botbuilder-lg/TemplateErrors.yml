### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.TemplateErrors
    name: TemplateErrors
    fullName: TemplateErrors
    children:
      - botbuilder-lg.TemplateErrors.argumentMismatch
      - botbuilder-lg.TemplateErrors.duplicatedTemplateInDiffTemplate
      - botbuilder-lg.TemplateErrors.duplicatedTemplateInSameTemplate
      - botbuilder-lg.TemplateErrors.emptyStrucContent
      - botbuilder-lg.TemplateErrors.errorExpression
      - botbuilder-lg.TemplateErrors.expressionParseError
      - botbuilder-lg.TemplateErrors.extraExpressionInCondition
      - botbuilder-lg.TemplateErrors.extraExpressionInSwitchCase
      - botbuilder-lg.TemplateErrors.invalidExpressionInCondition
      - botbuilder-lg.TemplateErrors.invalidExpressionInSwiathCase
      - botbuilder-lg.TemplateErrors.invalidMemory
      - botbuilder-lg.TemplateErrors.invalidMiddleInCondition
      - botbuilder-lg.TemplateErrors.invalidParameter
      - botbuilder-lg.TemplateErrors.invalidStatementInMiddlerOfSwitchCase
      - botbuilder-lg.TemplateErrors.invalidStrucBody
      - botbuilder-lg.TemplateErrors.invalidStrucName
      - botbuilder-lg.TemplateErrors.invalidTemplateBody
      - botbuilder-lg.TemplateErrors.invalidTemplateName
      - botbuilder-lg.TemplateErrors.invalidTemplateNameType
      - botbuilder-lg.TemplateErrors.invalidWhitespaceInCondition
      - botbuilder-lg.TemplateErrors.invalidWhitespaceInSwitchCase
      - botbuilder-lg.TemplateErrors.loopDetected
      - botbuilder-lg.TemplateErrors.missingCaseInSwitchCase
      - botbuilder-lg.TemplateErrors.missingStrucEnd
      - botbuilder-lg.TemplateErrors.missingTemplateBodyInCondition
      - botbuilder-lg.TemplateErrors.missingTemplateBodyInSwitchCase
      - botbuilder-lg.TemplateErrors.multipleIfInCondition
      - botbuilder-lg.TemplateErrors.multipleSwithStatementInSwitchCase
      - botbuilder-lg.TemplateErrors.noCloseBracket
      - botbuilder-lg.TemplateErrors.noEndingInMultiline
      - botbuilder-lg.TemplateErrors.noTemplate
      - botbuilder-lg.TemplateErrors.noTemplateBody
      - botbuilder-lg.TemplateErrors.notEndWithDefaultInSwitchCase
      - botbuilder-lg.TemplateErrors.notEndWithElseInCondition
      - botbuilder-lg.TemplateErrors.notStartWithIfInCondition
      - botbuilder-lg.TemplateErrors.notStartWithSwitchInSwitchCase
      - botbuilder-lg.TemplateErrors.nullExpression
      - botbuilder-lg.TemplateErrors.staticFailure
      - botbuilder-lg.TemplateErrors.syntaxError
      - botbuilder-lg.TemplateErrors.templateExist
      - botbuilder-lg.TemplateErrors.templateNotExist
    langs:
      - typeScript
    type: class
    summary: Centralized LG errors.
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.argumentMismatch
    name: argumentMismatch
    fullName: argumentMismatch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        static argumentMismatch: (templateName: string, expectedCount: number,
        actualCount: number) => string
      return:
        type:
          - >-
            (templateName: string, expectedCount: number, actualCount: number)
            => string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.duplicatedTemplateInDiffTemplate
    name: duplicatedTemplateInDiffTemplate
    fullName: duplicatedTemplateInDiffTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        static duplicatedTemplateInDiffTemplate: (templateName: string, source:
        string) => string
      return:
        type:
          - '(templateName: string, source: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.duplicatedTemplateInSameTemplate
    name: duplicatedTemplateInSameTemplate
    fullName: duplicatedTemplateInSameTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        static duplicatedTemplateInSameTemplate: (templateName: string) =>
        string
      return:
        type:
          - '(templateName: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.emptyStrucContent
    name: emptyStrucContent
    fullName: emptyStrucContent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static emptyStrucContent: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.errorExpression
    name: errorExpression
    fullName: errorExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        static errorExpression: (refFullText: string, templateName: string,
        prefixText: string) => string
      return:
        type:
          - >-
            (refFullText: string, templateName: string, prefixText: string) =>
            string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.expressionParseError
    name: expressionParseError
    fullName: expressionParseError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static expressionParseError: (exp: string) => string'
      return:
        type:
          - '(exp: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.extraExpressionInCondition
    name: extraExpressionInCondition
    fullName: extraExpressionInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static extraExpressionInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.extraExpressionInSwitchCase
    name: extraExpressionInSwitchCase
    fullName: extraExpressionInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static extraExpressionInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidExpressionInCondition
    name: invalidExpressionInCondition
    fullName: invalidExpressionInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidExpressionInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidExpressionInSwiathCase
    name: invalidExpressionInSwiathCase
    fullName: invalidExpressionInSwiathCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidExpressionInSwiathCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidMemory
    name: invalidMemory
    fullName: invalidMemory
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidMemory: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidMiddleInCondition
    name: invalidMiddleInCondition
    fullName: invalidMiddleInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidMiddleInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidParameter
    name: invalidParameter
    fullName: invalidParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidParameter: (invalidParameter: string) => string'
      return:
        type:
          - '(invalidParameter: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidStatementInMiddlerOfSwitchCase
    name: invalidStatementInMiddlerOfSwitchCase
    fullName: invalidStatementInMiddlerOfSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidStatementInMiddlerOfSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidStrucBody
    name: invalidStrucBody
    fullName: invalidStrucBody
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidStrucBody: (invalidBody: string) => string'
      return:
        type:
          - '(invalidBody: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidStrucName
    name: invalidStrucName
    fullName: invalidStrucName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidStrucName: (invalidName: string) => string'
      return:
        type:
          - '(invalidName: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidTemplateBody
    name: invalidTemplateBody
    fullName: invalidTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidTemplateBody: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidTemplateName
    name: invalidTemplateName
    fullName: invalidTemplateName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidTemplateName: (invalidTemplateName: string) => string'
      return:
        type:
          - '(invalidTemplateName: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidTemplateNameType
    name: invalidTemplateNameType
    fullName: invalidTemplateNameType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidTemplateNameType: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidWhitespaceInCondition
    name: invalidWhitespaceInCondition
    fullName: invalidWhitespaceInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidWhitespaceInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.invalidWhitespaceInSwitchCase
    name: invalidWhitespaceInSwitchCase
    fullName: invalidWhitespaceInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static invalidWhitespaceInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.loopDetected
    name: loopDetected
    fullName: loopDetected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static loopDetected: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.missingCaseInSwitchCase
    name: missingCaseInSwitchCase
    fullName: missingCaseInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static missingCaseInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.missingStrucEnd
    name: missingStrucEnd
    fullName: missingStrucEnd
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static missingStrucEnd: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.missingTemplateBodyInCondition
    name: missingTemplateBodyInCondition
    fullName: missingTemplateBodyInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static missingTemplateBodyInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.missingTemplateBodyInSwitchCase
    name: missingTemplateBodyInSwitchCase
    fullName: missingTemplateBodyInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static missingTemplateBodyInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.multipleIfInCondition
    name: multipleIfInCondition
    fullName: multipleIfInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static multipleIfInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.multipleSwithStatementInSwitchCase
    name: multipleSwithStatementInSwitchCase
    fullName: multipleSwithStatementInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static multipleSwithStatementInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.noCloseBracket
    name: noCloseBracket
    fullName: noCloseBracket
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static noCloseBracket: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.noEndingInMultiline
    name: noEndingInMultiline
    fullName: noEndingInMultiline
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static noEndingInMultiline: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.noTemplate
    name: noTemplate
    fullName: noTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static noTemplate: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.noTemplateBody
    name: noTemplateBody
    fullName: noTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static noTemplateBody: (templateName: string) => string'
      return:
        type:
          - '(templateName: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.notEndWithDefaultInSwitchCase
    name: notEndWithDefaultInSwitchCase
    fullName: notEndWithDefaultInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static notEndWithDefaultInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.notEndWithElseInCondition
    name: notEndWithElseInCondition
    fullName: notEndWithElseInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static notEndWithElseInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.notStartWithIfInCondition
    name: notStartWithIfInCondition
    fullName: notStartWithIfInCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static notStartWithIfInCondition: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.notStartWithSwitchInSwitchCase
    name: notStartWithSwitchInSwitchCase
    fullName: notStartWithSwitchInSwitchCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static notStartWithSwitchInSwitchCase: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.nullExpression
    name: nullExpression
    fullName: nullExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static nullExpression: (expression: string) => string'
      return:
        type:
          - '(expression: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.staticFailure
    name: staticFailure
    fullName: staticFailure
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static staticFailure: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.syntaxError
    name: syntaxError
    fullName: syntaxError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static syntaxError: (unexpectedContent: string) => string'
      return:
        type:
          - '(unexpectedContent: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.templateExist
    name: templateExist
    fullName: templateExist
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static templateExist: (templateName: string) => string'
      return:
        type:
          - '(templateName: string) => string'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.TemplateErrors.templateNotExist
    name: templateNotExist
    fullName: templateNotExist
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static templateNotExist: (templateName: string) => string'
      return:
        type:
          - '(templateName: string) => string'
        description: ''
    package: botbuilder-lg
