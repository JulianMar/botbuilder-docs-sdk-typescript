### YamlMime:UniversalReference
items:
  - uid: botbuilder-lg.LGTemplateParserVisitor
    name: LGTemplateParserVisitor
    fullName: LGTemplateParserVisitor<Result>
    children:
      - botbuilder-lg.LGTemplateParserVisitor.visit
      - botbuilder-lg.LGTemplateParserVisitor.visitBody
      - botbuilder-lg.LGTemplateParserVisitor.visitChildren
      - botbuilder-lg.LGTemplateParserVisitor.visitErrorNode
      - botbuilder-lg.LGTemplateParserVisitor.visitErrorStructuredName
      - botbuilder-lg.LGTemplateParserVisitor.visitErrorStructureLine
      - botbuilder-lg.LGTemplateParserVisitor.visitErrorTemplateString
      - botbuilder-lg.LGTemplateParserVisitor.visitExpression
      - botbuilder-lg.LGTemplateParserVisitor.visitExpressionInStructure
      - botbuilder-lg.LGTemplateParserVisitor.visitIfCondition
      - botbuilder-lg.LGTemplateParserVisitor.visitIfConditionRule
      - botbuilder-lg.LGTemplateParserVisitor.visitIfElseBody
      - botbuilder-lg.LGTemplateParserVisitor.visitIfElseTemplateBody
      - botbuilder-lg.LGTemplateParserVisitor.visitKeyValueStructureLine
      - botbuilder-lg.LGTemplateParserVisitor.visitKeyValueStructureValue
      - botbuilder-lg.LGTemplateParserVisitor.visitNormalBody
      - botbuilder-lg.LGTemplateParserVisitor.visitNormalTemplateBody
      - botbuilder-lg.LGTemplateParserVisitor.visitNormalTemplateString
      - botbuilder-lg.LGTemplateParserVisitor.visitStructuredBody
      - botbuilder-lg.LGTemplateParserVisitor.visitStructuredBodyContentLine
      - botbuilder-lg.LGTemplateParserVisitor.visitStructuredBodyEndLine
      - botbuilder-lg.LGTemplateParserVisitor.visitStructuredBodyNameLine
      - botbuilder-lg.LGTemplateParserVisitor.visitStructuredTemplateBody
      - botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseBody
      - botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseRule
      - botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseStat
      - botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseTemplateBody
      - botbuilder-lg.LGTemplateParserVisitor.visitTemplate
      - botbuilder-lg.LGTemplateParserVisitor.visitTemplateString
      - botbuilder-lg.LGTemplateParserVisitor.visitTerminal
    langs:
      - typeScript
    type: interface
    summary: >-
      This interface defines a complete generic visitor for a parse tree
      produced

      by `LGTemplateParser`.
    extends:
      name: ParseTreeVisitor<Result>
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visit
    name: visit(ParseTree)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a parse tree, and return a user-defined result of the operation.'
    syntax:
      content: 'function visit(tree: ParseTree)'
      parameters:
        - id: tree
          type:
            - ParseTree
          description: 'The <xref:ParseTree> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the parse tree.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitBody
    name: visitBody
    fullName: visitBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'visitBody?: (ctx: BodyContext) => Result'
      return:
        type:
          - '(ctx: BodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitChildren
    name: visitChildren(RuleNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Visit the children of a node, and return a user-defined result
      of the operation.
    syntax:
      content: 'function visitChildren(node: RuleNode)'
      parameters:
        - id: node
          type:
            - RuleNode
          description: 'The <xref:RuleNode> whose children should be visited.'
      return:
        type:
          - Result
        description: The result of visiting the children of the node.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitErrorNode
    name: visitErrorNode(ErrorNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit an error node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitErrorNode(node: ErrorNode)'
      parameters:
        - id: node
          type:
            - ErrorNode
          description: 'The <xref:ErrorNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitErrorStructuredName
    name: visitErrorStructuredName
    fullName: visitErrorStructuredName
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.errorStructuredName`.
    optional: true
    syntax:
      content: 'visitErrorStructuredName?: (ctx: ErrorStructuredNameContext) => Result'
      return:
        type:
          - '(ctx: ErrorStructuredNameContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitErrorStructureLine
    name: visitErrorStructureLine
    fullName: visitErrorStructureLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.errorStructureLine`.
    optional: true
    syntax:
      content: 'visitErrorStructureLine?: (ctx: ErrorStructureLineContext) => Result'
      return:
        type:
          - '(ctx: ErrorStructureLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitErrorTemplateString
    name: visitErrorTemplateString
    fullName: visitErrorTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.errorTemplateString`.
    optional: true
    syntax:
      content: 'visitErrorTemplateString?: (ctx: ErrorTemplateStringContext) => Result'
      return:
        type:
          - '(ctx: ErrorTemplateStringContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitExpression
    name: visitExpression
    fullName: visitExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.expression`.
    optional: true
    syntax:
      content: 'visitExpression?: (ctx: ExpressionContext) => Result'
      return:
        type:
          - '(ctx: ExpressionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitExpressionInStructure
    name: visitExpressionInStructure
    fullName: visitExpressionInStructure
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.expressionInStructure`.
    optional: true
    syntax:
      content: >-
        visitExpressionInStructure?: (ctx: ExpressionInStructureContext) =>
        Result
      return:
        type:
          - '(ctx: ExpressionInStructureContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitIfCondition
    name: visitIfCondition
    fullName: visitIfCondition
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.ifCondition`.
    optional: true
    syntax:
      content: 'visitIfCondition?: (ctx: IfConditionContext) => Result'
      return:
        type:
          - '(ctx: IfConditionContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitIfConditionRule
    name: visitIfConditionRule
    fullName: visitIfConditionRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.ifConditionRule`.
    optional: true
    syntax:
      content: 'visitIfConditionRule?: (ctx: IfConditionRuleContext) => Result'
      return:
        type:
          - '(ctx: IfConditionRuleContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitIfElseBody
    name: visitIfElseBody
    fullName: visitIfElseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `ifElseBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'visitIfElseBody?: (ctx: IfElseBodyContext) => Result'
      return:
        type:
          - '(ctx: IfElseBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitIfElseTemplateBody
    name: visitIfElseTemplateBody
    fullName: visitIfElseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.ifElseTemplateBody`.
    optional: true
    syntax:
      content: 'visitIfElseTemplateBody?: (ctx: IfElseTemplateBodyContext) => Result'
      return:
        type:
          - '(ctx: IfElseTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitKeyValueStructureLine
    name: visitKeyValueStructureLine
    fullName: visitKeyValueStructureLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.keyValueStructureLine`.
    optional: true
    syntax:
      content: >-
        visitKeyValueStructureLine?: (ctx: KeyValueStructureLineContext) =>
        Result
      return:
        type:
          - '(ctx: KeyValueStructureLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitKeyValueStructureValue
    name: visitKeyValueStructureValue
    fullName: visitKeyValueStructureValue
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.keyValueStructureValue`.
    optional: true
    syntax:
      content: >-
        visitKeyValueStructureValue?: (ctx: KeyValueStructureValueContext) =>
        Result
      return:
        type:
          - '(ctx: KeyValueStructureValueContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitNormalBody
    name: visitNormalBody
    fullName: visitNormalBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `normalBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'visitNormalBody?: (ctx: NormalBodyContext) => Result'
      return:
        type:
          - '(ctx: NormalBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitNormalTemplateBody
    name: visitNormalTemplateBody
    fullName: visitNormalTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.normalTemplateBody`.
    optional: true
    syntax:
      content: 'visitNormalTemplateBody?: (ctx: NormalTemplateBodyContext) => Result'
      return:
        type:
          - '(ctx: NormalTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitNormalTemplateString
    name: visitNormalTemplateString
    fullName: visitNormalTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.normalTemplateString`.
    optional: true
    syntax:
      content: 'visitNormalTemplateString?: (ctx: NormalTemplateStringContext) => Result'
      return:
        type:
          - '(ctx: NormalTemplateStringContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitStructuredBody
    name: visitStructuredBody
    fullName: visitStructuredBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `structuredBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'visitStructuredBody?: (ctx: StructuredBodyContext) => Result'
      return:
        type:
          - '(ctx: StructuredBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitStructuredBodyContentLine
    name: visitStructuredBodyContentLine
    fullName: visitStructuredBodyContentLine
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Visit a parse tree produced by
      `LGTemplateParser.structuredBodyContentLine`.
    optional: true
    syntax:
      content: >-
        visitStructuredBodyContentLine?: (ctx: StructuredBodyContentLineContext)
        => Result
      return:
        type:
          - '(ctx: StructuredBodyContentLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitStructuredBodyEndLine
    name: visitStructuredBodyEndLine
    fullName: visitStructuredBodyEndLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.structuredBodyEndLine`.
    optional: true
    syntax:
      content: >-
        visitStructuredBodyEndLine?: (ctx: StructuredBodyEndLineContext) =>
        Result
      return:
        type:
          - '(ctx: StructuredBodyEndLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitStructuredBodyNameLine
    name: visitStructuredBodyNameLine
    fullName: visitStructuredBodyNameLine
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.structuredBodyNameLine`.
    optional: true
    syntax:
      content: >-
        visitStructuredBodyNameLine?: (ctx: StructuredBodyNameLineContext) =>
        Result
      return:
        type:
          - '(ctx: StructuredBodyNameLineContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitStructuredTemplateBody
    name: visitStructuredTemplateBody
    fullName: visitStructuredTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.structuredTemplateBody`.
    optional: true
    syntax:
      content: >-
        visitStructuredTemplateBody?: (ctx: StructuredTemplateBodyContext) =>
        Result
      return:
        type:
          - '(ctx: StructuredTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseBody
    name: visitSwitchCaseBody
    fullName: visitSwitchCaseBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Visit a parse tree produced by the `switchCaseBody`
      labeled alternative in `LGTemplateParser.body`.
    optional: true
    syntax:
      content: 'visitSwitchCaseBody?: (ctx: SwitchCaseBodyContext) => Result'
      return:
        type:
          - '(ctx: SwitchCaseBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseRule
    name: visitSwitchCaseRule
    fullName: visitSwitchCaseRule
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.switchCaseRule`.
    optional: true
    syntax:
      content: 'visitSwitchCaseRule?: (ctx: SwitchCaseRuleContext) => Result'
      return:
        type:
          - '(ctx: SwitchCaseRuleContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseStat
    name: visitSwitchCaseStat
    fullName: visitSwitchCaseStat
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.switchCaseStat`.
    optional: true
    syntax:
      content: 'visitSwitchCaseStat?: (ctx: SwitchCaseStatContext) => Result'
      return:
        type:
          - '(ctx: SwitchCaseStatContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitSwitchCaseTemplateBody
    name: visitSwitchCaseTemplateBody
    fullName: visitSwitchCaseTemplateBody
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.switchCaseTemplateBody`.
    optional: true
    syntax:
      content: >-
        visitSwitchCaseTemplateBody?: (ctx: SwitchCaseTemplateBodyContext) =>
        Result
      return:
        type:
          - '(ctx: SwitchCaseTemplateBodyContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitTemplate
    name: visitTemplate
    fullName: visitTemplate
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.template`.
    optional: true
    syntax:
      content: 'visitTemplate?: (ctx: TemplateContext) => Result'
      return:
        type:
          - '(ctx: TemplateContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitTemplateString
    name: visitTemplateString
    fullName: visitTemplateString
    children: []
    langs:
      - typeScript
    type: property
    summary: Visit a parse tree produced by `LGTemplateParser.templateString`.
    optional: true
    syntax:
      content: 'visitTemplateString?: (ctx: TemplateStringContext) => Result'
      return:
        type:
          - '(ctx: TemplateStringContext) => Result'
        description: ''
    package: botbuilder-lg
  - uid: botbuilder-lg.LGTemplateParserVisitor.visitTerminal
    name: visitTerminal(TerminalNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Visit a terminal node, and return a user-defined result of the operation.'
    syntax:
      content: 'function visitTerminal(node: TerminalNode)'
      parameters:
        - id: node
          type:
            - TerminalNode
          description: 'The <xref:TerminalNode> to visit.'
      return:
        type:
          - Result
        description: The result of visiting the node.
    package: botbuilder-lg
