### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.ChoicePrompt
    name: ChoicePrompt
    fullName: ChoicePrompt<O>
    children:
      - botbuilder-dialogs.ChoicePrompt.beginDialog
      - botbuilder-dialogs.ChoicePrompt.choiceOptions
      - botbuilder-dialogs.ChoicePrompt.constructor
      - botbuilder-dialogs.ChoicePrompt.configure
      - botbuilder-dialogs.ChoicePrompt.continueDialog
      - botbuilder-dialogs.ChoicePrompt.defaultLocale
      - botbuilder-dialogs.ChoicePrompt.endDialog
      - botbuilder-dialogs.ChoicePrompt.getVersion
      - botbuilder-dialogs.ChoicePrompt.id
      - botbuilder-dialogs.ChoicePrompt.onDialogEvent
      - botbuilder-dialogs.ChoicePrompt.recognizerOptions
      - botbuilder-dialogs.ChoicePrompt.repromptDialog
      - botbuilder-dialogs.ChoicePrompt.resumeDialog
      - botbuilder-dialogs.ChoicePrompt.style
      - botbuilder-dialogs.ChoicePrompt.telemetryClient
    langs:
      - typeScript
    type: class
    summary: Prompts a user to select from a list of choices.
    extends:
      name: botbuilder-dialogs.Prompt<botbuilder-dialogs.FoundChoice>
    package: botbuilder-dialogs
    remarks: >-
      By default the prompt will return to the calling dialog a `FoundChoice`
      object containing the

      choice that was selected.
  - uid: botbuilder-dialogs.ChoicePrompt.beginDialog
    name: 'beginDialog(DialogContext, PromptOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function beginDialog(dc: DialogContext, options: PromptOptions)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
        - id: options
          type:
            - botbuilder-dialogs.PromptOptions
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.choiceOptions
    name: choiceOptions
    fullName: choiceOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Additional options passed to the `ChoiceFactory` and used to tweak the
      style of choices

      rendered to the user.
    syntax:
      content: 'public choiceOptions: ChoiceFactoryOptions | undefined'
      return:
        type:
          - botbuilder-dialogs.ChoiceFactoryOptions | undefined
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.constructor
    name: >-
      ChoicePrompt(string, PromptValidator<FoundChoice>, string,
      ChoiceDefaultsChoicePrompt)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new `ChoicePrompt` instance.
    syntax:
      content: >-
        new ChoicePrompt(dialogId: string, validator?:
        PromptValidator<FoundChoice>, defaultLocale?: string, choiceDefaults?:
        ChoiceDefaultsChoicePrompt)
      parameters:
        - id: dialogId
          type:
            - string
          description: Unique ID of the dialog within its parent `DialogSet`.
        - id: validator
          type:
            - botbuilder-dialogs.PromptValidator<botbuilder-dialogs.FoundChoice>
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt. If the validator replies with a message no additional
            retry prompt will be sent.
          optional: true
        - id: defaultLocale
          type:
            - string
          description: >-
            (Optional) locale to use if `dc.context.activity.locale` not
            specified. Defaults to a value of `en-us`.
          optional: true
        - id: choiceDefaults
          type:
            - ChoiceDefaultsChoicePrompt
          description: >
            (Optional) Overrides the dictionary of Bot Framework SDK-supported
            _choiceDefaults (for prompt localization).
             Must be passed in to each ConfirmPrompt that needs the custom choice defaults.
          optional: true
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.configure
    name: configure(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Fluent method for configuring the object.
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type:
            - object
          description: |
            Configuration settings to apply.
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.continueDialog
    name: continueDialog(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.defaultLocale
    name: defaultLocale
    fullName: defaultLocale
    children: []
    langs:
      - typeScript
    type: property
    summary: The prompts default locale that should be recognized.
    syntax:
      content: 'public defaultLocale: string | undefined'
      return:
        type:
          - string | undefined
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.endDialog
    name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: The context object for the turn.
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
  - uid: botbuilder-dialogs.ChoicePrompt.getVersion
    name: getVersion()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    syntax:
      content: function getVersion()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
  - uid: botbuilder-dialogs.ChoicePrompt.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique ID of the dialog.
    syntax:
      content: string id
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
    remarks: This will be automatically generated if not specified.
  - uid: botbuilder-dialogs.ChoicePrompt.onDialogEvent
    name: 'onDialogEvent(DialogContext, DialogEvent)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type:
            - botbuilder-dialogs.DialogEvent
          description: The event being raised.
      return:
        type:
          - Promise<boolean>
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.recognizerOptions
    name: recognizerOptions
    fullName: recognizerOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional options passed to the underlying `recognizeChoices()` function.
    syntax:
      content: 'public recognizerOptions: FindChoicesOptions | undefined'
      return:
        type:
          - botbuilder-dialogs.FindChoicesOptions | undefined
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.repromptDialog
    name: 'repromptDialog(TurnContext, DialogInstance)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.resumeDialog
    name: 'resumeDialog(DialogContext, DialogReason, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: ''
        - id: result
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ChoicePrompt.style
    name: style
    fullName: style
    children: []
    langs:
      - typeScript
    type: property
    summary: Style of the "yes" and "no" choices rendered to the user when prompting.
    syntax:
      content: 'public style: ListStyle'
      return:
        type:
          - botbuilder-dialogs.ListStyle
        description: ''
    package: botbuilder-dialogs
    remarks: Defaults to `ListStyle.auto`.
  - uid: botbuilder-dialogs.ChoicePrompt.telemetryClient
    name: telemetryClient
    fullName: telemetryClient
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Gets the telemetry client for this dialog.
      Sets the telemetry client for this dialog.
    syntax:
      content: BotTelemetryClient telemetryClient
      return:
        type:
          - BotTelemetryClient
        description: ''
    package: botbuilder-dialogs
references:
  - uid: botbuilder-dialogs.Prompt<botbuilder-dialogs.FoundChoice>
    name: FoundChoice>
    spec.typeScript:
      - name: Prompt
        fullName: Prompt
        uid: botbuilder-dialogs.Prompt
      - name: <
        fullName: <
      - name: FoundChoice
        fullName: FoundChoice
        uid: botbuilder-dialogs.FoundChoice
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs.PromptValidator<botbuilder-dialogs.FoundChoice>
    name: FoundChoice>
    spec.typeScript:
      - name: PromptValidator
        fullName: PromptValidator
        uid: botbuilder-dialogs.PromptValidator
      - name: <
        fullName: <
      - name: FoundChoice
        fullName: FoundChoice
        uid: botbuilder-dialogs.FoundChoice
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs.ChoiceFactoryOptions | undefined
    name: ChoiceFactoryOptions | undefined
    spec.typeScript:
      - name: ChoiceFactoryOptions
        fullName: ChoiceFactoryOptions
        uid: botbuilder-dialogs.ChoiceFactoryOptions
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: botbuilder-dialogs.FindChoicesOptions | undefined
    name: FindChoicesOptions | undefined
    spec.typeScript:
      - name: FindChoicesOptions
        fullName: FindChoicesOptions
        uid: botbuilder-dialogs.FindChoicesOptions
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: botbuilder-dialogs.ListStyle
    name: ListStyle
    spec.typeScript:
      - name: ListStyle
        fullName: ListStyle
        uid: botbuilder-dialogs.ListStyle
  - uid: botbuilder-dialogs.DialogContext
    name: DialogContext
    spec.typeScript:
      - name: DialogContext
        fullName: DialogContext
        uid: botbuilder-dialogs.DialogContext
  - uid: botbuilder-dialogs.PromptOptions
    name: PromptOptions
    spec.typeScript:
      - name: PromptOptions
        fullName: PromptOptions
        uid: botbuilder-dialogs.PromptOptions
  - uid: Promise<botbuilder-dialogs.DialogTurnResult>
    name: DialogTurnResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DialogTurnResult
        fullName: DialogTurnResult
        uid: botbuilder-dialogs.DialogTurnResult
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs.DialogInstance
    name: DialogInstance
    spec.typeScript:
      - name: DialogInstance
        fullName: DialogInstance
        uid: botbuilder-dialogs.DialogInstance
  - uid: botbuilder-dialogs.DialogReason
    name: DialogReason
    spec.typeScript:
      - name: DialogReason
        fullName: DialogReason
        uid: botbuilder-dialogs.DialogReason
  - uid: botbuilder-dialogs.DialogEvent
    name: DialogEvent
    spec.typeScript:
      - name: DialogEvent
        fullName: DialogEvent
        uid: botbuilder-dialogs.DialogEvent
