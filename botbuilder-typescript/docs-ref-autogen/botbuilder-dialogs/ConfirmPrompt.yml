### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.ConfirmPrompt
    name: ConfirmPrompt
    fullName: ConfirmPrompt<O>
    children:
      - botbuilder-dialogs.ConfirmPrompt.beginDialog
      - botbuilder-dialogs.ConfirmPrompt.choiceOptions
      - botbuilder-dialogs.ConfirmPrompt.configure
      - botbuilder-dialogs.ConfirmPrompt.confirmChoices
      - botbuilder-dialogs.ConfirmPrompt.constructor
      - botbuilder-dialogs.ConfirmPrompt.continueDialog
      - botbuilder-dialogs.ConfirmPrompt.defaultLocale
      - botbuilder-dialogs.ConfirmPrompt.endDialog
      - botbuilder-dialogs.ConfirmPrompt.EndOfTurn
      - botbuilder-dialogs.ConfirmPrompt.getVersion
      - botbuilder-dialogs.ConfirmPrompt.id
      - botbuilder-dialogs.ConfirmPrompt.onDialogEvent
      - botbuilder-dialogs.ConfirmPrompt.repromptDialog
      - botbuilder-dialogs.ConfirmPrompt.resumeDialog
      - botbuilder-dialogs.ConfirmPrompt.style
      - botbuilder-dialogs.ConfirmPrompt.telemetryClient
    langs:
      - typeScript
    type: class
    summary: Prompts a user to confirm something with a "yes" or "no" response.
    extends:
      name: botbuilder-dialogs.Prompt<boolean>
    package: botbuilder-dialogs
    remarks: >-
      By default the prompt will return to the calling dialog a `boolean`
      representing the users

      selection.
  - uid: botbuilder-dialogs.ConfirmPrompt.beginDialog
    name: 'beginDialog(DialogContext, PromptOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function beginDialog(dc: DialogContext, options: PromptOptions)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
        - id: options
          type:
            - botbuilder-dialogs.PromptOptions
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.choiceOptions
    name: choiceOptions
    fullName: choiceOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Additional options passed to the `ChoiceFactory` and used to tweak the
      style of choices

      rendered to the user.
    syntax:
      content: 'choiceOptions: ChoiceFactoryOptions | undefined'
      return:
        type:
          - botbuilder-dialogs.ChoiceFactoryOptions | undefined
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.configure
    name: configure(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Fluent method for configuring the object.
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type:
            - object
          description: |
            Configuration settings to apply.
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.confirmChoices
    name: confirmChoices
    fullName: confirmChoices
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom list of choices to send for the prompt.
    syntax:
      content: 'confirmChoices: string | Choice[] | undefined'
      return:
        type:
          - 'string | botbuilder-dialogs.Choice[] | undefined'
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.constructor
    name: >-
      ConfirmPrompt(string, PromptValidator<boolean>, string,
      ChoiceDefaultsConfirmPrompt)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates a new ConfirmPrompt instance.
    syntax:
      content: >-
        new ConfirmPrompt(dialogId: string, validator?:
        PromptValidator<boolean>, defaultLocale?: string, choiceDefaults?:
        ChoiceDefaultsConfirmPrompt)
      parameters:
        - id: dialogId
          type:
            - string
          description: >-
            Unique ID of the dialog within its parent `DialogSet` or
            `ComponentDialog`.
        - id: validator
          type:
            - botbuilder-dialogs.PromptValidator<boolean>
          description: >-
            (Optional) validator that will be called each time the user responds
            to the prompt.
          optional: true
        - id: defaultLocale
          type:
            - string
          description: >
            (Optional) locale to use if `TurnContext.activity.locale` is not
            specified. Defaults to a value of `en-us`.
          optional: true
        - id: choiceDefaults
          type:
            - botbuilder-dialogs.ChoiceDefaultsConfirmPrompt
          description: ''
          optional: true
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.continueDialog
    name: continueDialog(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.defaultLocale
    name: defaultLocale
    fullName: defaultLocale
    children: []
    langs:
      - typeScript
    type: property
    summary: The prompts default locale that should be recognized.
    syntax:
      content: 'defaultLocale: string | undefined'
      return:
        type:
          - string | undefined
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.endDialog
    name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: The context object for the turn.
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
  - uid: botbuilder-dialogs.ConfirmPrompt.EndOfTurn
    name: EndOfTurn
    fullName: EndOfTurn
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets a default end-of-turn result.
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type:
          - botbuilder-dialogs.DialogTurnResult
        description: ''
    package: botbuilder-dialogs
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
  - uid: botbuilder-dialogs.ConfirmPrompt.getVersion
    name: getVersion()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      An encoded string used to aid in the detection of bot changes on
      re-deployment.
    syntax:
      content: function getVersion()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
    remarks: >-
      This defaults to returning the dialogs [id](#id) but can be overridden to
      provide more

      precise change detection logic. Any dialog on the stack that has its
      version change will

      result in a `versionChanged` event will be raised. If this event is not
      handled by the bot,

      an error will be thrown resulting in the bots error handler logic being
      run.


      Returning an empty string will disable version tracking for the component
      all together.
  - uid: botbuilder-dialogs.ConfirmPrompt.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique ID of the dialog.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs
    remarks: This will be automatically generated if not specified.
  - uid: botbuilder-dialogs.ConfirmPrompt.onDialogEvent
    name: 'onDialogEvent(DialogContext, DialogEvent)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type:
            - botbuilder-dialogs.DialogEvent
          description: The event being raised.
      return:
        type:
          - Promise<boolean>
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.repromptDialog
    name: 'repromptDialog(TurnContext, DialogInstance)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
        - id: instance
          type:
            - botbuilder-dialogs.DialogInstance
          description: ''
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.resumeDialog
    name: 'resumeDialog(DialogContext, DialogReason, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - botbuilder-dialogs.DialogContext
          description: ''
        - id: reason
          type:
            - botbuilder-dialogs.DialogReason
          description: ''
        - id: result
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<botbuilder-dialogs.DialogTurnResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.ConfirmPrompt.style
    name: style
    fullName: style
    children: []
    langs:
      - typeScript
    type: property
    summary: Style of the "yes" and "no" choices rendered to the user when prompting.
    syntax:
      content: 'style: ListStyle'
      return:
        type:
          - botbuilder-dialogs.ListStyle
        description: ''
    package: botbuilder-dialogs
    remarks: Defaults to `ListStyle.auto`.
  - uid: botbuilder-dialogs.ConfirmPrompt.telemetryClient
    name: telemetryClient
    fullName: telemetryClient
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the telemetry client for this dialog.
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type:
          - BotTelemetryClient
        description: ''
    package: botbuilder-dialogs
references:
  - uid: botbuilder-dialogs.Prompt<boolean>
    name: Prompt<boolean>
    spec.typeScript:
      - name: Prompt
        fullName: Prompt
        uid: botbuilder-dialogs.Prompt
      - name: <boolean>
        fullName: <boolean>
  - uid: botbuilder-dialogs.PromptValidator<boolean>
    name: PromptValidator<boolean>
    spec.typeScript:
      - name: PromptValidator
        fullName: PromptValidator
        uid: botbuilder-dialogs.PromptValidator
      - name: <boolean>
        fullName: <boolean>
  - uid: botbuilder-dialogs.ChoiceDefaultsConfirmPrompt
    name: ChoiceDefaultsConfirmPrompt
    spec.typeScript:
      - name: ChoiceDefaultsConfirmPrompt
        fullName: ChoiceDefaultsConfirmPrompt
        uid: botbuilder-dialogs.ChoiceDefaultsConfirmPrompt
  - uid: botbuilder-dialogs.ChoiceFactoryOptions | undefined
    name: ChoiceFactoryOptions | undefined
    spec.typeScript:
      - name: ChoiceFactoryOptions
        fullName: ChoiceFactoryOptions
        uid: botbuilder-dialogs.ChoiceFactoryOptions
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'string | botbuilder-dialogs.Choice[] | undefined'
    name: 'Choice[] | undefined'
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Choice
        fullName: Choice
        uid: botbuilder-dialogs.Choice
      - name: '[] | undefined'
        fullName: '[] | undefined'
  - uid: botbuilder-dialogs.ListStyle
    name: ListStyle
    spec.typeScript:
      - name: ListStyle
        fullName: ListStyle
        uid: botbuilder-dialogs.ListStyle
  - uid: botbuilder-dialogs.DialogTurnResult
    name: DialogTurnResult
    spec.typeScript:
      - name: DialogTurnResult
        fullName: DialogTurnResult
        uid: botbuilder-dialogs.DialogTurnResult
  - uid: botbuilder-dialogs.DialogContext
    name: DialogContext
    spec.typeScript:
      - name: DialogContext
        fullName: DialogContext
        uid: botbuilder-dialogs.DialogContext
  - uid: botbuilder-dialogs.PromptOptions
    name: PromptOptions
    spec.typeScript:
      - name: PromptOptions
        fullName: PromptOptions
        uid: botbuilder-dialogs.PromptOptions
  - uid: Promise<botbuilder-dialogs.DialogTurnResult>
    name: DialogTurnResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DialogTurnResult
        fullName: DialogTurnResult
        uid: botbuilder-dialogs.DialogTurnResult
      - name: '>'
        fullName: '>'
  - uid: botbuilder-dialogs.DialogInstance
    name: DialogInstance
    spec.typeScript:
      - name: DialogInstance
        fullName: DialogInstance
        uid: botbuilder-dialogs.DialogInstance
  - uid: botbuilder-dialogs.DialogReason
    name: DialogReason
    spec.typeScript:
      - name: DialogReason
        fullName: DialogReason
        uid: botbuilder-dialogs.DialogReason
  - uid: botbuilder-dialogs.DialogEvent
    name: DialogEvent
    spec.typeScript:
      - name: DialogEvent
        fullName: DialogEvent
        uid: botbuilder-dialogs.DialogEvent
