### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs.DialogManager
    name: DialogManager
    fullName: DialogManager
    children:
      - botbuilder-dialogs.DialogManager.configure
      - botbuilder-dialogs.DialogManager.conversationState
      - botbuilder-dialogs.DialogManager.constructor
      - botbuilder-dialogs.DialogManager.dialogs
      - botbuilder-dialogs.DialogManager.expireAfter
      - botbuilder-dialogs.DialogManager.initialTurnState
      - botbuilder-dialogs.DialogManager.onTurn
      - botbuilder-dialogs.DialogManager.rootDialog
      - botbuilder-dialogs.DialogManager.stateConfiguration
      - botbuilder-dialogs.DialogManager.userState
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: botbuilder-dialogs.Configurable
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.configure
    name: configure(Partial<DialogManagerConfiguration>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function configure(config: Partial<DialogManagerConfiguration>)'
      parameters:
        - id: config
          type:
            - Partial<botbuilder-dialogs.DialogManagerConfiguration>
          description: ''
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.conversationState
    name: conversationState
    fullName: conversationState
    children: []
    langs:
      - typeScript
    type: property
    summary: Bots persisted conversation state.
    syntax:
      content: 'conversationState: ConversationState'
      return:
        type:
          - ConversationState
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.constructor
    name: 'DialogManager(Dialog, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new DialogManager(rootDialog?: Dialog, dialogStateProperty?: string)'
      parameters:
        - id: rootDialog
          type:
            - botbuilder-dialogs.Dialog
          description: ''
          optional: true
        - id: dialogStateProperty
          type:
            - string
          description: ''
          optional: true
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.dialogs
    name: dialogs
    fullName: dialogs
    children: []
    langs:
      - typeScript
    type: property
    summary: Global dialogs that you want to have be callable.
    syntax:
      content: 'dialogs: DialogSet'
      return:
        type:
          - botbuilder-dialogs.DialogSet
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.expireAfter
    name: expireAfter
    fullName: expireAfter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Number of milliseconds to expire the bots conversation state
      after.
    optional: true
    syntax:
      content: 'expireAfter?: number'
      return:
        type:
          - number
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.initialTurnState
    name: initialTurnState
    fullName: initialTurnState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Values that will be copied to the `TurnContext.turnState` at the beginning
      of each turn.
    syntax:
      content: 'initialTurnState: TurnContextStateCollection'
      return:
        type:
          - TurnContextStateCollection
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.onTurn
    name: onTurn(TurnContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onTurn(context: TurnContext)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: ''
      return:
        type:
          - Promise<botbuilder-dialogs.DialogManagerResult>
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.rootDialog
    name: rootDialog
    fullName: rootDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Root dialog to start from [onTurn()](#onturn) method.'
    syntax:
      content: 'rootDialog: Dialog'
      return:
        type:
          - botbuilder-dialogs.Dialog
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.stateConfiguration
    name: stateConfiguration
    fullName: stateConfiguration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Path resolvers and memory scopes used for conversations with the
      bot.
    optional: true
    syntax:
      content: 'stateConfiguration?: DialogStateManagerConfiguration'
      return:
        type:
          - botbuilder-dialogs.DialogStateManagerConfiguration
        description: ''
    package: botbuilder-dialogs
  - uid: botbuilder-dialogs.DialogManager.userState
    name: userState
    fullName: userState
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional. Bots persisted user state.
    optional: true
    syntax:
      content: 'userState?: UserState'
      return:
        type:
          - UserState
        description: ''
    package: botbuilder-dialogs
references:
  - uid: botbuilder-dialogs.Configurable
    name: Configurable
    spec.typeScript:
      - name: Configurable
        fullName: Configurable
        uid: botbuilder-dialogs.Configurable
  - uid: botbuilder-dialogs.Dialog
    name: Dialog
    spec.typeScript:
      - name: Dialog
        fullName: Dialog
        uid: botbuilder-dialogs.Dialog
  - uid: botbuilder-dialogs.DialogSet
    name: DialogSet
    spec.typeScript:
      - name: DialogSet
        fullName: DialogSet
        uid: botbuilder-dialogs.DialogSet
  - uid: botbuilder-dialogs.DialogStateManagerConfiguration
    name: DialogStateManagerConfiguration
    spec.typeScript:
      - name: DialogStateManagerConfiguration
        fullName: DialogStateManagerConfiguration
        uid: botbuilder-dialogs.DialogStateManagerConfiguration
  - uid: Partial<botbuilder-dialogs.DialogManagerConfiguration>
    name: DialogManagerConfiguration>
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: DialogManagerConfiguration
        fullName: DialogManagerConfiguration
        uid: botbuilder-dialogs.DialogManagerConfiguration
      - name: '>'
        fullName: '>'
  - uid: Promise<botbuilder-dialogs.DialogManagerResult>
    name: DialogManagerResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DialogManagerResult
        fullName: DialogManagerResult
        uid: botbuilder-dialogs.DialogManagerResult
      - name: '>'
        fullName: '>'
