### YamlMime:TSType
name: BotStatePropertyAccessor
uid: botbuilder-core.BotStatePropertyAccessor
package: botbuilder-core
summary: A `BotState` specific implementation of the `StatePropertyAccessor` interface.
fullName: BotStatePropertyAccessor<T>
remarks: >-
  Properties can be defined for a given `BotState` instance using
  `createProperty()`.


  ```JavaScript

  const dialogStateProperty = ConversationState.createProperty('dialogState');

  const dialogs = new DialogSet(dialogStateProperty);

  ```
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'BotStatePropertyAccessor(BotState, string)'
    uid: botbuilder-core.BotStatePropertyAccessor.constructor
    package: botbuilder-core
    summary: Creates a new BotStatePropertyAccessor instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new BotStatePropertyAccessor(state: BotState, name: string)'
      parameters:
        - id: state
          type: <xref uid="botbuilder-core.BotState" />
          description: Parent BotState instance.
        - id: name
          type: string
          description: |
            Unique name of the property for the parent BotState.
properties:
  - name: name
    uid: botbuilder-core.BotStatePropertyAccessor.name
    package: botbuilder-core
    summary: Unique name of the property for the parent BotState.
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public name: string'
      return:
        type: string
        description: ''
methods:
  - name: delete(TurnContext)
    uid: botbuilder-core.BotStatePropertyAccessor.delete
    package: botbuilder-core
    summary: Deletes the persisted property from its backing storage object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(context: TurnContext)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-core.TurnContext" />
          description: |
            (xref:botbuilder-core.TurnContext) object for this turn.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: get(TurnContext)
    uid: botbuilder-core.BotStatePropertyAccessor.get
    package: botbuilder-core
    summary: Reads a persisted property from its backing storage object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(context: TurnContext)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-core.TurnContext" />
          description: '(xref:botbuilder-core.TurnContext) object for this turn.'
      return:
        type: Promise&lt;T | undefined&gt;
        description: A JSON representation of the cached state.
  - name: 'get(TurnContext, T)'
    uid: botbuilder-core.BotStatePropertyAccessor.get_1
    package: botbuilder-core
    summary: Reads a persisted property from its backing storage object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(context: TurnContext, defaultValue: T)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-core.TurnContext" />
          description: '(xref:botbuilder-core.TurnContext) object for this turn.'
        - id: defaultValue
          type: T
          description: Optional. Default value for the property.
      return:
        type: Promise&lt;T&gt;
        description: A JSON representation of the cached state.
  - name: 'set(TurnContext, T)'
    uid: botbuilder-core.BotStatePropertyAccessor.set
    package: botbuilder-core
    summary: Assigns a new value to the properties backing storage object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function set(context: TurnContext, value: T)'
      parameters:
        - id: context
          type: <xref uid="botbuilder-core.TurnContext" />
          description: '(xref:botbuilder-core.TurnContext) object for this turn.'
        - id: value
          type: T
          description: |
            Value to set on the property.
      return:
        type: Promise&lt;void&gt;
        description: ''
