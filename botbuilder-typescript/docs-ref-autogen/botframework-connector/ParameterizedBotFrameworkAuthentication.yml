### YamlMime:TSType
name: ParameterizedBotFrameworkAuthentication
uid: botframework-connector.ParameterizedBotFrameworkAuthentication
package: botframework-connector
summary: ''
fullName: ParameterizedBotFrameworkAuthentication
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ParameterizedBotFrameworkAuthentication(boolean, string, string, string,
      string, string, string, string, ServiceClientCredentialsFactory,
      AuthenticationConfiguration, (input: RequestInfo, init?: RequestInit) =>
      Promise<Response>, ConnectorClientOptions)
    uid: botframework-connector.ParameterizedBotFrameworkAuthentication.constructor
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ParameterizedBotFrameworkAuthentication(validateAuthority: boolean,
        toChannelFromBotLoginUrl: string, toChannelFromBotOAuthScope: string,
        toBotFromChannelTokenIssuer: string, oAuthUrl: string,
        toBotFromChannelOpenIdMetadataUrl: string,
        toBotFromEmulatorOpenIdMetadataUrl: string, callerId: string,
        credentialsFactory: ServiceClientCredentialsFactory, authConfiguration:
        AuthenticationConfiguration, botFrameworkClientFetch?: (input:
        RequestInfo, init?: RequestInit) => Promise<Response>,
        connectorClientOptions?: ConnectorClientOptions)
      parameters:
        - id: validateAuthority
          type: boolean
          description: ''
        - id: toChannelFromBotLoginUrl
          type: string
          description: ''
        - id: toChannelFromBotOAuthScope
          type: string
          description: ''
        - id: toBotFromChannelTokenIssuer
          type: string
          description: ''
        - id: oAuthUrl
          type: string
          description: ''
        - id: toBotFromChannelOpenIdMetadataUrl
          type: string
          description: ''
        - id: toBotFromEmulatorOpenIdMetadataUrl
          type: string
          description: ''
        - id: callerId
          type: string
          description: ''
        - id: credentialsFactory
          type: >-
            <xref uid="botframework-connector.ServiceClientCredentialsFactory"
            />
          description: ''
        - id: authConfiguration
          type: <xref uid="botframework-connector.AuthenticationConfiguration" />
          description: ''
        - id: botFrameworkClientFetch
          type: >-
            (input: RequestInfo, init?: RequestInit) =&gt;
            Promise&lt;Response&gt;
          description: ''
        - id: connectorClientOptions
          type: <xref uid="botframework-connector.ConnectorClientOptions" />
          description: ''
methods:
  - name: authenticateChannelRequest(string)
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.authenticateChannelRequest
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function authenticateChannelRequest(authHeader: string)'
      parameters:
        - id: authHeader
          type: string
          description: ''
      return:
        type: Promise&lt;<xref uid="botframework-connector.ClaimsIdentity" />&gt;
        description: ''
  - name: 'authenticateRequest(Activity, string)'
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.authenticateRequest
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function authenticateRequest(activity: Activity, authHeader: string)'
      parameters:
        - id: activity
          type: Activity
          description: ''
        - id: authHeader
          type: string
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="botframework-connector.AuthenticateRequestResult" />&gt;
        description: ''
  - name: 'authenticateStreamingRequest(string, string)'
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.authenticateStreamingRequest
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function authenticateStreamingRequest(authHeader: string,
        channelIdHeader: string)
      parameters:
        - id: authHeader
          type: string
          description: ''
        - id: channelIdHeader
          type: string
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="botframework-connector.AuthenticateRequestResult" />&gt;
        description: ''
  - name: createBotFrameworkClient()
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.createBotFrameworkClient
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function createBotFrameworkClient()
      return:
        type: <xref uid="botframework-connector.BotFrameworkClient" />
        description: ''
  - name: createConnectorFactory(ClaimsIdentity)
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.createConnectorFactory
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createConnectorFactory(claimsIdentity: ClaimsIdentity)'
      parameters:
        - id: claimsIdentity
          type: <xref uid="botframework-connector.ClaimsIdentity" />
          description: ''
      return:
        type: <xref uid="botframework-connector.ConnectorFactory" />
        description: ''
  - name: createUserTokenClient(ClaimsIdentity)
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.createUserTokenClient
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createUserTokenClient(claimsIdentity: ClaimsIdentity)'
      parameters:
        - id: claimsIdentity
          type: <xref uid="botframework-connector.ClaimsIdentity" />
          description: ''
      return:
        type: Promise&lt;<xref uid="botframework-connector.UserTokenClient" />&gt;
        description: ''
  - name: getOriginatingAudience()
    uid: >-
      botframework-connector.ParameterizedBotFrameworkAuthentication.getOriginatingAudience
    package: botframework-connector
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getOriginatingAudience()
      return:
        type: string
        description: ''
extends: <xref uid="botframework-connector.BotFrameworkAuthentication" />
