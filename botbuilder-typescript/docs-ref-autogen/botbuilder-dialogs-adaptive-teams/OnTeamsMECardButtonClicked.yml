### YamlMime:TSType
name: OnTeamsMECardButtonClicked
uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked
package: botbuilder-dialogs-adaptive-teams
summary: >-
  Actions triggered when a Teams InvokeActivity is received with
  activity.name='composeExtension/onCardButtonClicked'.
fullName: OnTeamsMECardButtonClicked
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'OnTeamsMECardButtonClicked(Dialog[], string)'
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.constructor
    package: botbuilder-dialogs-adaptive-teams
    summary: >-
      Initializes a new instance of the
      [OnInvokeActivity](xref:botbuilder-dialogs-adaptive.OnInvokeActivity)
      class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new OnTeamsMECardButtonClicked(actions?: Dialog[], condition?: string)'
      parameters:
        - id: actions
          type: 'Dialog[]'
          description: >-
            Optional. A [Dialog](xref:botbuilder-dialogs.Dialog) list containing
            the actions to add to the plan when the rule constraints are met.
        - id: condition
          type: string
          description: >
            Optional. Condition which needs to be met for the actions to be
            executed.
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.$kind
    package: botbuilder-dialogs-adaptive-teams
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static $kind: "Teams.OnMECardButtonClicked" =
        "Teams.OnMECardButtonClicked"
      return:
        type: '"<xref uid="Teams.OnMECardButtonClicked" />"'
        description: ''
  - name: actions
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.actions
    package: botbuilder-dialogs-adaptive-teams
    summary: >-
      Gets or sets the actions to add to the plan when the rule constraints are
      met.
    fullName: actions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'actions: Dialog[]'
      return:
        type: 'Dialog[]'
        description: ''
  - name: condition
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.condition
    package: botbuilder-dialogs-adaptive-teams
    summary: >-
      Gets or sets the condition which needs to be met for the actions to be
      executed (OPTIONAL).
    fullName: condition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'condition: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: event
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.event
    package: botbuilder-dialogs-adaptive-teams
    summary: Gets or sets the event to fire on.
    fullName: event
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'event: string'
      return:
        type: string
        description: ''
  - name: id
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.id
    package: botbuilder-dialogs-adaptive-teams
    summary: Id for condition.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: priority
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.priority
    package: botbuilder-dialogs-adaptive-teams
    summary: >-
      Get or sets the rule priority expression where 0 is the highest and less
      than 0 is ignored.
    fullName: priority
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'priority: IntExpression'
      return:
        type: IntExpression
        description: ''
  - name: runOnce
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.runOnce
    package: botbuilder-dialogs-adaptive-teams
    summary: >-
      A value indicating whether rule should only run once per unique set of
      memory paths.
    fullName: runOnce
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'runOnce: boolean'
      return:
        type: boolean
        description: ''
  - name: type
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.type
    package: botbuilder-dialogs-adaptive-teams
    summary: Gets or sets the ActivityType which must be matched for this to trigger.
    fullName: type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'type: string'
      return:
        type: string
        description: ''
methods:
  - name: addExternalCondition(string)
    uid: >-
      botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.addExternalCondition
    package: botbuilder-dialogs-adaptive-teams
    summary: Add external condition to the OnCondition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addExternalCondition(condition: string)'
      parameters:
        - id: condition
          type: string
          description: >
            External constraint to add, it will be AND'ed to all other
            constraints.
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.configure
    package: botbuilder-dialogs-adaptive-teams
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>)'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: currentPriority(ActionContext)
    uid: >-
      botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.currentPriority
    package: botbuilder-dialogs-adaptive-teams
    summary: Compute the current value of the priority expression and return it.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function currentPriority(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type: ActionContext
          description: Context to use for evaluation.
      return:
        type: number
        description: Computed priority.
  - name: execute(ActionContext)
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.execute
    package: botbuilder-dialogs-adaptive-teams
    summary: Method called to execute the condition's actions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function execute(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type: ActionContext
          description: Context.
      return:
        type: 'Promise&lt;ActionChangeList[]&gt;'
        description: A promise with plan change list.
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.getConverter
    package: botbuilder-dialogs-adaptive-teams
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object)'
      parameters:
        - id: property
          type: Object
          description: ''
      return:
        type: Converter | ConverterFactory
        description: ''
  - name: getDependencies()
    uid: >-
      botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.getDependencies
    package: botbuilder-dialogs-adaptive-teams
    summary: >-
      Get child dialog dependencies so they can be added to the containers
      dialogset.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDependencies()
      return:
        type: 'Dialog[]'
        description: ''
  - name: getExpression(ExpressionParserInterface)
    uid: botbuilder-dialogs-adaptive-teams.OnTeamsMECardButtonClicked.getExpression
    package: botbuilder-dialogs-adaptive-teams
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getExpression(parser: ExpressionParserInterface)'
      parameters:
        - id: parser
          type: ExpressionParserInterface
          description: ''
      return:
        type: Expression
        description: ''
extends: OnInvokeActivity
