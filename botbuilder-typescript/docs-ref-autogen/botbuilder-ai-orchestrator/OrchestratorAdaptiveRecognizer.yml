### YamlMime:TSType
name: OrchestratorAdaptiveRecognizer
uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer
package: botbuilder-ai-orchestrator
summary: Class that represents an adaptive Orchestrator recognizer.
fullName: OrchestratorAdaptiveRecognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'OrchestratorAdaptiveRecognizer(string, string, any)'
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.constructor
    package: botbuilder-ai-orchestrator
    summary: Returns an OrchestratorAdaptiveRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new OrchestratorAdaptiveRecognizer(modelPath?: string, snapshoPath?:
        string, resolver?: any)
      parameters:
        - id: modelPath
          type: string
          description: Path to NLR model.
        - id: snapshoPath
          type: string
          description: Path to snapshot.
        - id: resolver
          type: any
          description: |
            Orchestrator resolver to use.
properties:
  - name: $kind
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.$kind
    package: botbuilder-ai-orchestrator
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static $kind: string = "Microsoft.OrchestratorRecognizer"'
      return:
        type: string
        description: ''
  - name: candidatesCollection
    uid: >-
      botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.candidatesCollection
    package: botbuilder-ai-orchestrator
    summary: Property under which ambiguous intents are returned.
    fullName: candidatesCollection
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public candidatesCollection: string = "candidates"'
      return:
        type: string
        description: ''
  - name: chooseIntent
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.chooseIntent
    package: botbuilder-ai-orchestrator
    summary: Intent name if ambiguous intents are detected.
    fullName: chooseIntent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public chooseIntent: string = "ChooseIntent"'
      return:
        type: string
        description: ''
  - name: detectAmbiguousIntents
    uid: >-
      botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.detectAmbiguousIntents
    package: botbuilder-ai-orchestrator
    summary: Enable ambiguous intent detection.
    fullName: detectAmbiguousIntents
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public detectAmbiguousIntents: BoolExpression = new
        BoolExpression(false)
      return:
        type: BoolExpression
        description: ''
  - name: disambiguationScoreThreshold
    uid: >-
      botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.disambiguationScoreThreshold
    package: botbuilder-ai-orchestrator
    summary: >-
      Threshold value to use for ambiguous intent detection.

      Any intents that are classified with a score that is within this value
      from the top scoring intent is determined to be ambiguous.
    fullName: disambiguationScoreThreshold
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public disambiguationScoreThreshold: NumberExpression = new
        NumberExpression(0.05)
      return:
        type: NumberExpression
        description: ''
  - name: entityRecognizers
    uid: >-
      botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.entityRecognizers
    package: botbuilder-ai-orchestrator
    summary: The entity recognizers.
    fullName: entityRecognizers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public entityRecognizers: EntityRecognizer[] = []'
      return:
        type: 'EntityRecognizer[]'
        description: ''
  - name: id
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.id
    package: botbuilder-ai-orchestrator
    summary: Recognizers unique ID.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: modelPath
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.modelPath
    package: botbuilder-ai-orchestrator
    summary: Path to the model to load.
    fullName: modelPath
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public modelPath: StringExpression = new StringExpression('''')'
      return:
        type: StringExpression
        description: ''
  - name: noneIntent
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.noneIntent
    package: botbuilder-ai-orchestrator
    summary: Intent name when no intent matches.
    fullName: noneIntent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public noneIntent: string = "None"'
      return:
        type: string
        description: ''
  - name: resultProperty
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.resultProperty
    package: botbuilder-ai-orchestrator
    summary: Full recognition results are available under this property
    fullName: resultProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public resultProperty: string = "result"'
      return:
        type: string
        description: ''
  - name: snapshotPath
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.snapshotPath
    package: botbuilder-ai-orchestrator
    summary: Path to the snapshot (.blu file) to load.
    fullName: snapshotPath
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public snapshotPath: StringExpression = new StringExpression('''')'
      return:
        type: StringExpression
        description: ''
  - name: telemetryClient
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.telemetryClient
    package: botbuilder-ai-orchestrator
    summary: Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.configure
    package: botbuilder-ai-orchestrator
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>)'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: getConverter(Object)
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.getConverter
    package: botbuilder-ai-orchestrator
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object)'
      parameters:
        - id: property
          type: Object
          description: ''
      return:
        type: Converter | ConverterFactory
        description: ''
  - name: 'recognize(DialogContext, Activity)'
    uid: botbuilder-ai-orchestrator.OrchestratorAdaptiveRecognizer.recognize
    package: botbuilder-ai-orchestrator
    summary: Returns a new OrchestratorAdaptiveRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function recognize(dialogContext: DialogContext, activity: Activity)'
      parameters:
        - id: dialogContext
          type: DialogContext
          description: Context for the current dialog.
        - id: activity
          type: Activity
          description: |
            Current activity sent from user.
      return:
        type: Promise&lt;RecognizerResult&gt;
        description: ''
extends: Recognizer
