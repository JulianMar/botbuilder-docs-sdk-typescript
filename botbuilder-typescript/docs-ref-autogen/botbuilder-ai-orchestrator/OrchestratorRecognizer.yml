### YamlMime:TSType
name: OrchestratorRecognizer
uid: botbuilder-ai-orchestrator.OrchestratorRecognizer
package: botbuilder-ai-orchestrator
summary: Class that represents an adaptive Orchestrator recognizer.
fullName: OrchestratorRecognizer
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'OrchestratorRecognizer(string, string, LabelResolver)'
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.constructor
    package: botbuilder-ai-orchestrator
    summary: Returns an OrchestratorRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new OrchestratorRecognizer(modelFolder?: string, snapshotFile?: string,
        resolver?: LabelResolver)
      parameters:
        - id: modelFolder
          type: string
          description: Path to NLR model.
        - id: snapshotFile
          type: string
          description: Path to snapshot.
        - id: resolver
          type: <xref uid="botbuilder-ai-orchestrator.LabelResolver" />
          description: |
            Orchestrator resolver to use.
properties:
  - name: $kind
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.$kind
    package: botbuilder-ai-orchestrator
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static $kind: string'
      return:
        type: string
        description: ''
  - name: chooseIntent
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.chooseIntent
    package: botbuilder-ai-orchestrator
    summary: Intent name if ambiguous intents are detected.
    fullName: chooseIntent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'chooseIntent: "ChooseIntent" = "ChooseIntent"'
      return:
        type: '"ChooseIntent"'
        description: ''
  - name: detectAmbiguousIntents
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.detectAmbiguousIntents
    package: botbuilder-ai-orchestrator
    summary: Enable ambiguous intent detection. Defaults to false.
    fullName: detectAmbiguousIntents
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'detectAmbiguousIntents: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: disambiguationScoreThreshold
    uid: >-
      botbuilder-ai-orchestrator.OrchestratorRecognizer.disambiguationScoreThreshold
    package: botbuilder-ai-orchestrator
    summary: >-
      Threshold value to use for ambiguous intent detection. Defaults to 0.05.

      Recognizer returns ChooseIntent (disambiguation) if other intents are
      classified within this threshold of the top scoring intent.
    fullName: disambiguationScoreThreshold
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disambiguationScoreThreshold: NumberExpression'
      return:
        type: NumberExpression
        description: ''
  - name: entityProperty
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.entityProperty
    package: botbuilder-ai-orchestrator
    summary: Full entity recognition results are available under this property
    fullName: entityProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'entityProperty: "entityResult" = "entityResult"'
      return:
        type: '"entityResult"'
        description: ''
  - name: externalEntityRecognizer
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.externalEntityRecognizer
    package: botbuilder-ai-orchestrator
    summary: The external entity recognizer.
    fullName: externalEntityRecognizer
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'externalEntityRecognizer: Recognizer'
      return:
        type: Recognizer
        description: ''
  - name: id
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.id
    package: botbuilder-ai-orchestrator
    summary: Recognizers unique ID.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: logPersonalInformation
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.logPersonalInformation
    package: botbuilder-ai-orchestrator
    summary: >-
      (Optional) Flag that designates whether personally identifiable
      information (PII) should log to telemetry.
    fullName: logPersonalInformation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'logPersonalInformation: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: modelFolder
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.modelFolder
    package: botbuilder-ai-orchestrator
    summary: Path to Orchestrator base model folder.
    fullName: modelFolder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'modelFolder: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: resultProperty
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.resultProperty
    package: botbuilder-ai-orchestrator
    summary: Full intent recognition results are available under this property
    fullName: resultProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resultProperty: "result" = "result"'
      return:
        type: '"result"'
        description: ''
  - name: scoreEntities
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.scoreEntities
    package: botbuilder-ai-orchestrator
    summary: >-
      Enable entity detection if entity model exists inside modelFolder.
      Defaults to false.
    fullName: scoreEntities
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scoreEntities: boolean'
      return:
        type: boolean
        description: ''
  - name: snapshotFile
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.snapshotFile
    package: botbuilder-ai-orchestrator
    summary: Path to the snapshot (.blu file) to load.
    fullName: snapshotFile
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'snapshotFile: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: telemetryClient
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.telemetryClient
    package: botbuilder-ai-orchestrator
    summary: |-
      The telemetry client for logging events.
      Default this to the NullTelemetryClient, which does nothing.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.configure
    package: botbuilder-ai-orchestrator
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>)'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: getConverter(Object)
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.getConverter
    package: botbuilder-ai-orchestrator
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object)'
      parameters:
        - id: property
          type: Object
          description: ''
      return:
        type: Converter | ConverterFactory
        description: ''
  - name: >-
      recognize(DialogContext, Partial<Activity>, Record<string, string>,
      Record<string, number>)
    uid: botbuilder-ai-orchestrator.OrchestratorRecognizer.recognize
    package: botbuilder-ai-orchestrator
    summary: Returns a new OrchestratorRecognizer instance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function recognize(dc: DialogContext, activity: Partial<Activity>,
        telemetryProperties?: Record<string, string>, telemetryMetrics?:
        Record<string, number>)
      parameters:
        - id: dc
          type: DialogContext
          description: Context for the current dialog.
        - id: activity
          type: Partial&lt;Activity&gt;
          description: Current activity sent from user.
        - id: telemetryProperties
          type: 'Record&lt;string, string&gt;'
          description: Additional properties to be logged to telemetry with event.
        - id: telemetryMetrics
          type: 'Record&lt;string, number&gt;'
          description: Additional metrics to be logged to telemetry with event.
      return:
        type: Promise&lt;RecognizerResult&gt;
        description: Recognized result.
extends: AdaptiveRecognizer
