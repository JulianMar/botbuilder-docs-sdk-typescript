### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.ForEach
    name: ForEach
    fullName: ForEach<O>
    children:
      - botbuilder-dialogs-adaptive.ForEach.actions
      - botbuilder-dialogs-adaptive.ForEach.beginDialog
      - botbuilder-dialogs-adaptive.ForEach.configure
      - botbuilder-dialogs-adaptive.ForEach.continueDialog
      - botbuilder-dialogs-adaptive.ForEach.disabled
      - botbuilder-dialogs-adaptive.ForEach.endDialog
      - botbuilder-dialogs-adaptive.ForEach.EndOfTurn
      - botbuilder-dialogs-adaptive.ForEach.constructor
      - botbuilder-dialogs-adaptive.ForEach.constructor_1
      - botbuilder-dialogs-adaptive.ForEach.getDependencies
      - botbuilder-dialogs-adaptive.ForEach.getVersion
      - botbuilder-dialogs-adaptive.ForEach.id
      - botbuilder-dialogs-adaptive.ForEach.index
      - botbuilder-dialogs-adaptive.ForEach.itemsProperty
      - botbuilder-dialogs-adaptive.ForEach.onDialogEvent
      - botbuilder-dialogs-adaptive.ForEach.repromptDialog
      - botbuilder-dialogs-adaptive.ForEach.resumeDialog
      - botbuilder-dialogs-adaptive.ForEach.telemetryClient
      - botbuilder-dialogs-adaptive.ForEach.value
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: botbuilder-dialogs-adaptive.ActionScope<O>
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.actions
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: The actions to execute.
    syntax:
      content: 'actions: Dialog[]'
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.beginDialog
    name: 'beginDialog(DialogContext, O)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
        - id: options
          type:
            - O
          description: ''
          optional: true
      return:
        type:
          - Promise<DialogTurnResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.configure
    name: configure(object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Fluent method for configuring the object.
    syntax:
      content: 'function configure(config: object)'
      parameters:
        - id: config
          type:
            - object
          description: |
            Configuration settings to apply.
      return:
        type:
          - this
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.continueDialog
    name: continueDialog(DialogContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
      return:
        type:
          - Promise<DialogTurnResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional expression which if is true will disable this action.
    optional: true
    syntax:
      content: 'disabled?: BoolExpression'
      return:
        type:
          - BoolExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.endDialog
    name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type:
            - TurnContext
          description: The context object for the turn.
        - id: instance
          type:
            - DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type:
            - DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
  - uid: botbuilder-dialogs-adaptive.ForEach.EndOfTurn
    name: EndOfTurn
    fullName: EndOfTurn
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets a default end-of-turn result.
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type:
          - DialogTurnResult
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
  - uid: botbuilder-dialogs-adaptive.ForEach.constructor
    name: ForEach()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new ForEach()
      parameters: []
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.constructor_1
    name: 'ForEach(string, Dialog[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ForEach(itemsProperty: string, actions: Dialog[])'
      parameters:
        - id: itemsProperty
          type:
            - string
          description: ''
        - id: actions
          type:
            - 'Dialog[]'
          description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.getDependencies
    name: getDependencies()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDependencies()
      parameters: []
      return:
        type:
          - 'Dialog[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.getVersion
    name: getVersion()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getVersion()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique ID of the dialog.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: This will be automatically generated if not specified.
  - uid: botbuilder-dialogs-adaptive.ForEach.index
    name: index
    fullName: index
    children: []
    langs:
      - typeScript
    type: property
    summary: Property path expression to the item index.
    syntax:
      content: 'index: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.itemsProperty
    name: itemsProperty
    fullName: itemsProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: Property path expression to the collection of items.
    syntax:
      content: 'itemsProperty: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.onDialogEvent
    name: 'onDialogEvent(DialogContext, DialogEvent)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type:
            - DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type:
            - DialogEvent
          description: The event being raised.
      return:
        type:
          - Promise<boolean>
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.repromptDialog
    name: 'repromptDialog(TurnContext, DialogInstance)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'When overridden in a derived class, reprompts the user for input.'
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type:
            - TurnContext
          description: The context object for the turn.
        - id: instance
          type:
            - DialogInstance
          description: |
            Current state information for this dialog.
      return:
        type:
          - Promise<void>
        description: ''
    package: botbuilder-dialogs-adaptive
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
  - uid: botbuilder-dialogs-adaptive.ForEach.resumeDialog
    name: 'resumeDialog(DialogContext, DialogReason, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type:
            - DialogContext
          description: ''
        - id: _reason
          type:
            - DialogReason
          description: ''
        - id: result
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - Promise<DialogTurnResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.telemetryClient
    name: telemetryClient
    fullName: telemetryClient
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the telemetry client for this dialog.
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type:
          - BotTelemetryClient
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.ForEach.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: Property path expression to the item value.
    syntax:
      content: 'value: StringExpression'
      return:
        type:
          - StringExpression
        description: ''
    package: botbuilder-dialogs-adaptive
references:
  - uid: botbuilder-dialogs-adaptive.ActionScope<O>
    name: ActionScope<O>
    spec.typeScript:
      - name: ActionScope
        fullName: ActionScope
        uid: botbuilder-dialogs-adaptive.ActionScope
      - name: <O>
        fullName: <O>
