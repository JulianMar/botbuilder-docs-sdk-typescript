### YamlMime:TSType
name: ForEachPage
uid: botbuilder-dialogs-adaptive.ForEachPage
package: botbuilder-dialogs-adaptive
summary: >-
  Executes a set of actions once for each page of results in an in-memory list
  or collection.
fullName: ForEachPage<O>
remarks: >-
  The list or collection at [property](#property) will be broken up into pages
  and stored in

  `dialog.page` for each iteration of the loop. The size of each page is
  determined by [maxSize](#maxsize)

  and defaults to a size of 10. The loop can be exited early by including either
  a `EndDialog` or

  `GotoDialog` action.
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ForEachPage()
    uid: botbuilder-dialogs-adaptive.ForEachPage.constructor
    package: botbuilder-dialogs-adaptive
    summary: >-
      Initializes a new instance of the
      [ForeachPage](xref:botbuilder-dialogs-adaptive.ForeachPage) class.

      Initializes a new instance of the
      [ForeachPage](xref:botbuilder-dialogs-adaptive.ForeachPage) class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new ForEachPage()
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.ForEachPage.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static $kind: string = "Microsoft.ForeachPage"'
      return:
        type: string
        description: ''
  - name: actions
    uid: botbuilder-dialogs-adaptive.ForEachPage.actions
    package: botbuilder-dialogs-adaptive
    summary: The actions to execute.
    fullName: actions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public actions: Dialog[] = []'
      return:
        type: 'Dialog[]'
        description: ''
  - name: disabled
    uid: botbuilder-dialogs-adaptive.ForEachPage.disabled
    package: botbuilder-dialogs-adaptive
    summary: An optional expression which if is true will disable this action.
    fullName: disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public disabled?: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: EndOfTurn
    uid: botbuilder-dialogs-adaptive.ForEachPage.EndOfTurn
    package: botbuilder-dialogs-adaptive
    summary: Gets a default end-of-turn result.
    fullName: EndOfTurn
    remarks: >-
      This result indicates that a dialog (or a logical step within a dialog)
      has completed

      processing for the current turn, is still active, and is waiting for more
      input.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfTurn: DialogTurnResult'
      return:
        type: DialogTurnResult
        description: ''
  - name: id
    uid: botbuilder-dialogs-adaptive.ForEachPage.id
    package: botbuilder-dialogs-adaptive
    summary: Sets the unique ID of the dialog.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: itemsProperty
    uid: botbuilder-dialogs-adaptive.ForEachPage.itemsProperty
    package: botbuilder-dialogs-adaptive
    summary: Expression used to compute the list that should be enumerated.
    fullName: itemsProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public itemsProperty: StringExpression'
      return:
        type: StringExpression
        description: ''
  - name: page
    uid: botbuilder-dialogs-adaptive.ForEachPage.page
    package: botbuilder-dialogs-adaptive
    summary: Expression used to compute the list that should be enumerated.
    fullName: page
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public page: StringExpression = new StringExpression(FOREACHPAGE)'
      return:
        type: StringExpression
        description: ''
  - name: pageIndex
    uid: botbuilder-dialogs-adaptive.ForEachPage.pageIndex
    package: botbuilder-dialogs-adaptive
    summary: Expression used to compute the list that should be enumerated.
    fullName: pageIndex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public pageIndex: StringExpression = new
        StringExpression(FOREACHPAGEINDEX)
      return:
        type: StringExpression
        description: ''
  - name: pageSize
    uid: botbuilder-dialogs-adaptive.ForEachPage.pageSize
    package: botbuilder-dialogs-adaptive
    summary: 'Page size, default to 10.'
    fullName: pageSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public pageSize: IntExpression = new IntExpression(10)'
      return:
        type: IntExpression
        description: ''
  - name: telemetryClient
    uid: botbuilder-dialogs-adaptive.ForEachPage.telemetryClient
    package: botbuilder-dialogs-adaptive
    summary: Sets the telemetry client for this dialog.
    fullName: telemetryClient
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type: BotTelemetryClient
        description: ''
methods:
  - name: 'beginDialog(DialogContext, O)'
    uid: botbuilder-dialogs-adaptive.ForEachPage.beginDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Starts a new [Dialog](xref:botbuilder-dialogs.Dialog) and pushes it onto
      the dialog stack.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function beginDialog(dc: DialogContext, options?: O)'
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: options
          type: O
          description: Optional. Initial information to pass to the dialog.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: A `Promise` representing the asynchronous operation.
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive.ForEachPage.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>)'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: continueDialog(DialogContext)
    uid: botbuilder-dialogs-adaptive.ForEachPage.continueDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when the [Dialog](xref:botbuilder-dialogs.Dialog) is _continued_,
      where it is the active dialog and the

      user replies with a new activity.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function continueDialog(dc: DialogContext)'
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: A `Promise` representing the asynchronous operation.
  - name: 'endDialog(TurnContext, DialogInstance, DialogReason)'
    uid: botbuilder-dialogs-adaptive.ForEachPage.endDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      When overridden in a derived class, performs clean up for the dialog
      before it ends.
    remarks: >-
      Derived dialogs that need to perform logging or cleanup before ending
      should override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog is ending.


      **See also**

      -
      [DialogContext.cancelAllDialogs](xref:botbuilder-dialogs.DialogContext.cancelAllDialogs)

      -
      [DialogContext.endDialog](xref:botbuilder-dialogs.DialogContext.endDialog)

      -
      [DialogContext.replaceDialog](xref:botbuilder-dialogs.DialogContext.replaceDialog)
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function endDialog(context: TurnContext, instance: DialogInstance,
        reason: DialogReason)
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: Current state information for this dialog.
        - id: reason
          type: DialogReason
          description: |
            The reason the dialog is ending.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive.ForEachPage.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object)'
      parameters:
        - id: property
          type: Object
          description: ''
      return:
        type: Converter | ConverterFactory
        description: ''
  - name: getDependencies()
    uid: botbuilder-dialogs-adaptive.ForEachPage.getDependencies
    package: botbuilder-dialogs-adaptive
    summary: >-
      Gets the child [Dialog](xref:botbuilder-dialogs.Dialog) dependencies so
      they can be added to the containers
      [Dialog](xref:botbuilder-dialogs.Dialog) set.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDependencies()
      return:
        type: 'Dialog[]'
        description: 'The child [Dialog](xref:botbuilder-dialogs.Dialog) dependencies.'
  - name: getVersion()
    uid: botbuilder-dialogs-adaptive.ForEachPage.getVersion
    package: botbuilder-dialogs-adaptive
    summary: >-
      Gets a unique `string` which represents the version of this dialog. If the
      version

      changes between turns the dialog system will emit a DialogChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getVersion()
      return:
        type: string
        description: |-
          Unique `string` which should only change when dialog has changed in a
          way that should restart the dialog.
  - name: 'onDialogEvent(DialogContext, DialogEvent)'
    uid: botbuilder-dialogs-adaptive.ForEachPage.onDialogEvent
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when an event has been raised, using `DialogContext.emitEvent()`,
      by either the current dialog or a dialog that the current dialog started.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onDialogEvent(dc: DialogContext, e: DialogEvent)'
      parameters:
        - id: dc
          type: DialogContext
          description: The dialog context for the current turn of conversation.
        - id: e
          type: DialogEvent
          description: The event being raised.
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the event is handled by the current dialog and bubbling should
          stop.
  - name: 'repromptDialog(TurnContext, DialogInstance)'
    uid: botbuilder-dialogs-adaptive.ForEachPage.repromptDialog
    package: botbuilder-dialogs-adaptive
    summary: 'When overridden in a derived class, reprompts the user for input.'
    remarks: >-
      Derived dialogs that support validation and re-prompt logic should
      override this method.

      By default, this method has no effect.


      The [DialogContext](xref:botbuilder-dialogs.DialogContext) calls this
      method when the current

      dialog should re-request input from the user. This method is implemented
      for prompt dialogs.


      **See also**

      -
      [DialogContext.repromptDialog](xref:botbuilder-dialogs.DialogContext.repromptDialog)

      - [Prompt](xref:botbuilder-dialogs.Prompt)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function repromptDialog(context: TurnContext, instance: DialogInstance)'
      parameters:
        - id: context
          type: TurnContext
          description: The context object for the turn.
        - id: instance
          type: DialogInstance
          description: |
            Current state information for this dialog.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'resumeDialog(DialogContext, DialogReason, any)'
    uid: botbuilder-dialogs-adaptive.ForEachPage.resumeDialog
    package: botbuilder-dialogs-adaptive
    summary: >-
      Called when a child [Dialog](xref:botbuilder-dialogs.Dialog) completed its
      turn, returning control to this dialog.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resumeDialog(dc: DialogContext, _reason: DialogReason, result?:
        any)
      parameters:
        - id: dc
          type: DialogContext
          description: >-
            The [DialogContext](xref:botbuilder-dialogs.DialogContext) for the
            current turn of conversation.
        - id: _reason
          type: DialogReason
          description: >-
            (xref:botbuilder-dialogs.DialogReason), reason why the dialog
            resumed.
        - id: result
          type: any
          description: |-
            Optional. Value returned from the dialog that was called. The type
            of the value returned is dependent on the child dialog.
      return:
        type: Promise&lt;DialogTurnResult&gt;
        description: A `Promise` representing the asynchronous operation.
extends: <xref uid="botbuilder-dialogs-adaptive.ActionScope" />&lt;O&gt;
