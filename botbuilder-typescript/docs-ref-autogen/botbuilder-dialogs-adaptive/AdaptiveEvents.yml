### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents
    name: AdaptiveEvents
    fullName: AdaptiveEvents
    children:
      - botbuilder-dialogs-adaptive.AdaptiveEvents.activityReceived
      - botbuilder-dialogs-adaptive.AdaptiveEvents.assignEntity
      - botbuilder-dialogs-adaptive.AdaptiveEvents.beginDialog
      - botbuilder-dialogs-adaptive.AdaptiveEvents.cancelDialog
      - botbuilder-dialogs-adaptive.AdaptiveEvents.chooseEntity
      - botbuilder-dialogs-adaptive.AdaptiveEvents.chooseProperty
      - botbuilder-dialogs-adaptive.AdaptiveEvents.endOfActions
      - botbuilder-dialogs-adaptive.AdaptiveEvents.error
      - botbuilder-dialogs-adaptive.AdaptiveEvents.recognizedIntent
      - botbuilder-dialogs-adaptive.AdaptiveEvents.recognizeUtterance
      - botbuilder-dialogs-adaptive.AdaptiveEvents.repromptDialog
      - botbuilder-dialogs-adaptive.AdaptiveEvents.unknownIntent
      - botbuilder-dialogs-adaptive.AdaptiveEvents.versionChanged
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: DialogEvents
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.activityReceived
    name: activityReceived
    fullName: activityReceived
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event fired when an activity is received from the adapter (or a request to
      reprocess an activity.)
    syntax:
      content: 'static activityReceived: "activityReceived" = "activityReceived"'
      return:
        type:
          - '"activityReceived"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.assignEntity
    name: assignEntity
    fullName: assignEntity
    children: []
    langs:
      - typeScript
    type: property
    summary: Raised when an entity should be assigned to a property.
    syntax:
      content: 'static assignEntity: "assignEntity" = "assignEntity"'
      return:
        type:
          - '"assignEntity"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.beginDialog
    name: beginDialog
    fullName: beginDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event fired by a dialog to indicate that its `beginDialog()` method has
      been called.
    syntax:
      content: 'static beginDialog: "beginDialog" = "beginDialog"'
      return:
        type:
          - '"beginDialog"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.cancelDialog
    name: cancelDialog
    fullName: cancelDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: Event fired when a dialog is being canceled.
    syntax:
      content: 'static cancelDialog: "cancelDialog" = "cancelDialog"'
      return:
        type:
          - '"cancelDialog"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.chooseEntity
    name: chooseEntity
    fullName: chooseEntity
    children: []
    langs:
      - typeScript
    type: property
    summary: Raised when there are multiple possible resolutions of an entity.
    syntax:
      content: 'static chooseEntity: "chooseEntity" = "chooseEntity"'
      return:
        type:
          - '"chooseEntity"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.chooseProperty
    name: chooseProperty
    fullName: chooseProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: aised when there are multiple possible entity to property mappings.
    syntax:
      content: 'static chooseProperty: "chooseProperty" = "chooseProperty"'
      return:
        type:
          - '"chooseProperty"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.endOfActions
    name: endOfActions
    fullName: endOfActions
    children: []
    langs:
      - typeScript
    type: property
    summary: Raised when all actions and ambiguity events have been finished.
    syntax:
      content: 'static endOfActions: "endOfActions" = "endOfActions"'
      return:
        type:
          - '"endOfActions"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.error
    name: error
    fullName: error
    children: []
    langs:
      - typeScript
    type: property
    summary: Event fired when there was an exception thrown in the system.
    syntax:
      content: 'static error: "error" = "error"'
      return:
        type:
          - '"error"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.recognizedIntent
    name: recognizedIntent
    fullName: recognizedIntent
    children: []
    langs:
      - typeScript
    type: property
    summary: Raised when intent is recognized from utterance.
    syntax:
      content: 'static recognizedIntent: "recognizedIntent" = "recognizedIntent"'
      return:
        type:
          - '"recognizedIntent"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.recognizeUtterance
    name: recognizeUtterance
    fullName: recognizeUtterance
    children: []
    langs:
      - typeScript
    type: property
    summary: Raised when utterance is received.
    syntax:
      content: 'static recognizeUtterance: "recognizeUtterance" = "recognizeUtterance"'
      return:
        type:
          - '"recognizeUtterance"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.repromptDialog
    name: repromptDialog
    fullName: repromptDialog
    children: []
    langs:
      - typeScript
    type: property
    summary: Event fired when `DialogContext.repromptDialog()` is called.
    syntax:
      content: 'static repromptDialog: "repromptDialog" = "repromptDialog"'
      return:
        type:
          - '"repromptDialog"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.unknownIntent
    name: unknownIntent
    fullName: unknownIntent
    children: []
    langs:
      - typeScript
    type: property
    summary: Raised when no intent can be recognized from utterance.
    syntax:
      content: 'static unknownIntent: "unknownIntent" = "unknownIntent"'
      return:
        type:
          - '"unknownIntent"'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.AdaptiveEvents.versionChanged
    name: versionChanged
    fullName: versionChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event fired when the system has detected that deployed code has changed
      the execution of dialogs between turns.
    syntax:
      content: 'static versionChanged: "versionChanged" = "versionChanged"'
      return:
        type:
          - '"versionChanged"'
        description: ''
    package: botbuilder-dialogs-adaptive
