### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.RegexRecognizer
    name: RegexRecognizer
    fullName: RegexRecognizer
    children:
      - botbuilder-dialogs-adaptive.RegexRecognizer.entities
      - botbuilder-dialogs-adaptive.RegexRecognizer.id
      - botbuilder-dialogs-adaptive.RegexRecognizer.intents
      - botbuilder-dialogs-adaptive.RegexRecognizer.recognize
      - botbuilder-dialogs-adaptive.RegexRecognizer.telemetryClient
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: botbuilder-dialogs-adaptive.Recognizer
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.RegexRecognizer.entities
    name: entities
    fullName: entities
    children: []
    langs:
      - typeScript
    type: property
    summary: The entity recognizers.
    syntax:
      content: 'entities: EntityRecognizer[]'
      return:
        type:
          - 'botbuilder-dialogs-adaptive.EntityRecognizer[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.RegexRecognizer.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Recognizers unique ID.
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.RegexRecognizer.intents
    name: intents
    fullName: intents
    children: []
    langs:
      - typeScript
    type: property
    summary: Dictionary of patterns -> intent names.
    syntax:
      content: 'intents: IntentPattern[]'
      return:
        type:
          - 'botbuilder-dialogs-adaptive.IntentPattern[]'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.RegexRecognizer.recognize
    name: >-
      recognize(DialogContext, Activity, [key: string]: string, [key: string]:
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recognize(dialogContext: DialogContext, activity: Activity,
        telemetryProperties?: [key: string]: string, telemetryMetrics?: [key:
        string]: number)
      parameters:
        - id: dialogContext
          type:
            - DialogContext
          description: ''
        - id: activity
          type:
            - Activity
          description: ''
        - id: telemetryProperties
          type:
            - '[key: string]: string'
          description: ''
          optional: true
        - id: telemetryMetrics
          type:
            - '[key: string]: number'
          description: ''
          optional: true
      return:
        type:
          - Promise<RecognizerResult>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.RegexRecognizer.telemetryClient
    name: telemetryClient
    fullName: telemetryClient
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the telemetry client for this dialog.
    syntax:
      content: 'telemetryClient: BotTelemetryClient'
      return:
        type:
          - BotTelemetryClient
        description: ''
    package: botbuilder-dialogs-adaptive
references:
  - uid: botbuilder-dialogs-adaptive.Recognizer
    name: Recognizer
    spec.typeScript:
      - name: Recognizer
        fullName: Recognizer
        uid: botbuilder-dialogs-adaptive.Recognizer
  - uid: 'botbuilder-dialogs-adaptive.EntityRecognizer[]'
    name: 'EntityRecognizer[]'
    spec.typeScript:
      - name: EntityRecognizer
        fullName: EntityRecognizer
        uid: botbuilder-dialogs-adaptive.EntityRecognizer
      - name: '[]'
        fullName: '[]'
  - uid: 'botbuilder-dialogs-adaptive.IntentPattern[]'
    name: 'IntentPattern[]'
    spec.typeScript:
      - name: IntentPattern
        fullName: IntentPattern
        uid: botbuilder-dialogs-adaptive.IntentPattern
      - name: '[]'
        fullName: '[]'
