### YamlMime:TSType
name: ConditionalSelector
uid: botbuilder-dialogs-adaptive.ConditionalSelector
package: botbuilder-dialogs-adaptive
summary: Select between two rule selectors based on a condition.
fullName: ConditionalSelector
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: $kind
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.$kind
    package: botbuilder-dialogs-adaptive
    summary: ''
    fullName: $kind
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static $kind: string = "Microsoft.ConditionalSelector"'
      return:
        type: string
        description: ''
  - name: condition
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.condition
    package: botbuilder-dialogs-adaptive
    summary: Expression that determines which selector to use.
    fullName: condition
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public condition: BoolExpression'
      return:
        type: BoolExpression
        description: ''
  - name: ifFalse
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.ifFalse
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets selector if condition is false.
    fullName: ifFalse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public ifFalse: TriggerSelector'
      return:
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
        description: ''
  - name: ifTrue
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.ifTrue
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets selector if condition is true.
    fullName: ifTrue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public ifTrue: TriggerSelector'
      return:
        type: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
        description: ''
  - name: parser
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.parser
    package: botbuilder-dialogs-adaptive
    summary: Gets or sets the expression parser to use.
    fullName: parser
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public parser: ExpressionParserInterface = new ExpressionParser()'
      return:
        type: ExpressionParserInterface
        description: ''
methods:
  - name: 'configure(Record<string, unknown>)'
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.configure
    package: botbuilder-dialogs-adaptive
    summary: Fluent method for configuring the object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function configure(config: Record<string, unknown>)'
      parameters:
        - id: config
          type: 'Record&lt;string, unknown&gt;'
          description: |
            Configuration settings to apply.
      return:
        type: this
        description: ''
  - name: getConverter(Object)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.getConverter
    package: botbuilder-dialogs-adaptive
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getConverter(property: Object)'
      parameters:
        - id: property
          type: Object
          description: ''
      return:
        type: Converter | ConverterFactory
        description: ''
  - name: 'initialize(OnCondition[], boolean)'
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.initialize
    package: botbuilder-dialogs-adaptive
    summary: Initialize the selector with the set of rules.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function initialize(conditionals: OnCondition[], evaluate: boolean)'
      parameters:
        - id: conditionals
          type: '<xref uid="botbuilder-dialogs-adaptive.OnCondition" />[]'
          description: Possible rules to match.
        - id: evaluate
          type: boolean
          description: |
            True if rules should be evaluated on select.
  - name: select(ActionContext)
    uid: botbuilder-dialogs-adaptive.ConditionalSelector.select
    package: botbuilder-dialogs-adaptive
    summary: Select the best rule to execute.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function select(actionContext: ActionContext)'
      parameters:
        - id: actionContext
          type: <xref uid="botbuilder-dialogs-adaptive.ActionContext" />
          description: Dialog context for evaluation.
      return:
        type: >-
          Promise&lt;<xref uid="botbuilder-dialogs-adaptive.OnCondition"
          />[]&gt;
        description: A Promise with a number array.
extends: <xref uid="botbuilder-dialogs-adaptive.TriggerSelector" />
