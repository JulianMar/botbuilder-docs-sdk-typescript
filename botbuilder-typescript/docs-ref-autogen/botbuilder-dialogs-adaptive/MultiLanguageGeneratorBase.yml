### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase
    name: MultiLanguageGeneratorBase
    fullName: MultiLanguageGeneratorBase
    children:
      - botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.generate
      - botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.languagePolicy
      - botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.tryGetGenerator
    langs:
      - typeScript
    type: class
    summary: Base class which applies language policy to tryGetGenerator.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.generate
    name: 'generate(DialogContext, string, object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Find a language generator that matches the current context locale.
    syntax:
      content: >-
        function generate(dialogContext: DialogContext, template: string, data:
        object)
      parameters:
        - id: dialogContext
          type:
            - DialogContext
          description: Context for the current turn of conversation.
        - id: template
          type:
            - string
          description: Template to use.
        - id: data
          type:
            - object
          description: |
            Data to bind to.
      return:
        type:
          - Promise<string>
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.languagePolicy
    name: languagePolicy
    fullName: languagePolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: Language policy required by language generator.
    syntax:
      content: 'languagePolicy: LanguagePolicy'
      return:
        type:
          - botbuilder-dialogs-adaptive.LanguagePolicy
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.MultiLanguageGeneratorBase.tryGetGenerator
    name: 'tryGetGenerator(DialogContext, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Abstract method to get a language generator by locale.
    syntax:
      content: 'function tryGetGenerator(dialogContext: DialogContext, locale: string)'
      parameters:
        - id: dialogContext
          type:
            - DialogContext
          description: DialogContext.
        - id: locale
          type:
            - string
          description: |
            Locale to lookup.
      return:
        type:
          - Object
        description: ''
    package: botbuilder-dialogs-adaptive
references:
  - uid: botbuilder-dialogs-adaptive.LanguagePolicy
    name: LanguagePolicy
    spec.typeScript:
      - name: LanguagePolicy
        fullName: LanguagePolicy
        uid: botbuilder-dialogs-adaptive.LanguagePolicy
