### YamlMime:UniversalReference
items:
  - uid: botbuilder-dialogs-adaptive.LanguageGeneratorManager
    name: LanguageGeneratorManager
    fullName: LanguageGeneratorManager
    children:
      - botbuilder-dialogs-adaptive.LanguageGeneratorManager.constructor
      - botbuilder-dialogs-adaptive.LanguageGeneratorManager.languageGenerators
      - >-
        botbuilder-dialogs-adaptive.LanguageGeneratorManager.resourceExplorerResolver
    langs:
      - typeScript
    type: class
    summary: Class which manages cache of all LG resources from a ResourceExplorer.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.LanguageGeneratorManager.constructor
    name: LanguageGeneratorManager(ResourceExplorer)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initialize a new instance of LanguageResourceManager class.
    syntax:
      content: 'new LanguageGeneratorManager(resourceManager: ResourceExplorer)'
      parameters:
        - id: resourceManager
          type:
            - ResourceExplorer
          description: |
            Resource explorer to manager LG files.
    package: botbuilder-dialogs-adaptive
  - uid: botbuilder-dialogs-adaptive.LanguageGeneratorManager.languageGenerators
    name: languageGenerators
    fullName: languageGenerators
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets language generators.
    syntax:
      content: 'languageGenerators: Map<string, LanguageGenerator>'
      return:
        type:
          - 'Map<string, botbuilder-dialogs-adaptive.LanguageGenerator>'
        description: ''
    package: botbuilder-dialogs-adaptive
  - uid: >-
      botbuilder-dialogs-adaptive.LanguageGeneratorManager.resourceExplorerResolver
    name: 'resourceExplorerResolver(string, Map<string, Resource[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function resourceExplorerResolver(locale: string,
        resourceMapping: Map<string, Resource[]>)
      parameters:
        - id: locale
          type:
            - string
          description: ''
        - id: resourceMapping
          type:
            - 'Map<string, Resource[]>'
          description: ''
      return:
        type:
          - ImportResolverDelegate
        description: ''
    package: botbuilder-dialogs-adaptive
references:
  - uid: 'Map<string, botbuilder-dialogs-adaptive.LanguageGenerator>'
    name: LanguageGenerator>
    spec.typeScript:
      - name: 'Map<string, '
        fullName: 'Map<string, '
      - name: LanguageGenerator
        fullName: LanguageGenerator
        uid: botbuilder-dialogs-adaptive.LanguageGenerator
      - name: '>'
        fullName: '>'
