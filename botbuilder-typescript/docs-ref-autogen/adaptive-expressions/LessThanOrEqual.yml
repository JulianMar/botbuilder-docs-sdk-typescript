### YamlMime:UniversalReference
items:
  - uid: adaptive-expressions.LessThanOrEqual
    name: LessThanOrEqual
    fullName: LessThanOrEqual
    children:
      - adaptive-expressions.LessThanOrEqual.constructor
      - adaptive-expressions.LessThanOrEqual.returnType
      - adaptive-expressions.LessThanOrEqual.tryEvaluate
      - adaptive-expressions.LessThanOrEqual.type
      - adaptive-expressions.LessThanOrEqual.validateExpression
    langs:
      - typeScript
    type: class
    summary: >-
      Check whether the first value is less than or equal to the second value.

      Return true if the first value is less than or equal, or return false if
      the first value is more.
    extends:
      name: adaptive-expressions.ComparisonEvaluator
    package: adaptive-expressions
  - uid: adaptive-expressions.LessThanOrEqual.constructor
    name: LessThanOrEqual()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new LessThanOrEqual()
      parameters: []
    package: adaptive-expressions
  - uid: adaptive-expressions.LessThanOrEqual.returnType
    name: returnType
    fullName: returnType
    children: []
    langs:
      - typeScript
    type: property
    summary: Type expected by evaluating the expression.
    syntax:
      content: 'public returnType: ReturnType'
      return:
        type:
          - adaptive-expressions.ReturnType
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.LessThanOrEqual.tryEvaluate
    name: 'tryEvaluate(Expression, MemoryInterface, Options)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Evaluate an expression.
    syntax:
      content: >-
        function tryEvaluate(expression: Expression, state: MemoryInterface,
        options: Options)
      parameters:
        - id: expression
          type:
            - adaptive-expressions.Expression
          description: Expression to evaluate.
        - id: state
          type:
            - adaptive-expressions.MemoryInterface
          description: |
            Global state information.
        - id: options
          type:
            - adaptive-expressions.Options
          description: ''
      return:
        type:
          - adaptive-expressions.ValueWithError
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.LessThanOrEqual.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the expression type for evaluator.
    syntax:
      content: 'public type: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.LessThanOrEqual.validateExpression
    name: validateExpression(Expression)
    children: []
    type: method
    langs:
      - typeScript
    summary: Validate an expression.
    syntax:
      content: 'function validateExpression(expression: Expression)'
      parameters:
        - id: expression
          type:
            - adaptive-expressions.Expression
          description: |
            Expression to validate.
    package: adaptive-expressions
references:
  - uid: adaptive-expressions.ComparisonEvaluator
    name: ComparisonEvaluator
    spec.typeScript:
      - name: ComparisonEvaluator
        fullName: ComparisonEvaluator
        uid: adaptive-expressions.ComparisonEvaluator
  - uid: adaptive-expressions.ReturnType
    name: ReturnType
    spec.typeScript:
      - name: ReturnType
        fullName: ReturnType
        uid: adaptive-expressions.ReturnType
  - uid: adaptive-expressions.Expression
    name: Expression
    spec.typeScript:
      - name: Expression
        fullName: Expression
        uid: adaptive-expressions.Expression
  - uid: adaptive-expressions.MemoryInterface
    name: MemoryInterface
    spec.typeScript:
      - name: MemoryInterface
        fullName: MemoryInterface
        uid: adaptive-expressions.MemoryInterface
  - uid: adaptive-expressions.Options
    name: Options
    spec.typeScript:
      - name: Options
        fullName: Options
        uid: adaptive-expressions.Options
  - uid: adaptive-expressions.ValueWithError
    name: ValueWithError
    spec.typeScript:
      - name: ValueWithError
        fullName: ValueWithError
        uid: adaptive-expressions.ValueWithError
