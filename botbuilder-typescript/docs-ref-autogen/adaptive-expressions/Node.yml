### YamlMime:TSType
name: Node
uid: adaptive-expressions.Node
package: adaptive-expressions
summary: Node in a trigger tree.
fullName: Node
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Node(Clause, TriggerTree, Trigger)'
    uid: adaptive-expressions.Node.constructor
    package: adaptive-expressions
    summary: Intializes a new instance of the `Node` class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Node(clause: Clause, tree: TriggerTree, trigger?: Trigger)'
      parameters:
        - id: clause
          type: <xref uid="adaptive-expressions.Clause" />
          description: The logical conjunction this node represents.
        - id: tree
          type: <xref uid="adaptive-expressions.TriggerTree" />
          description: The trigger tree this node is found in.
        - id: trigger
          type: <xref uid="adaptive-expressions.Trigger" />
          description: |
            The trigger to initialize this node.
properties:
  - name: allTriggers
    uid: adaptive-expressions.Node.allTriggers
    package: adaptive-expressions
    summary: Gets all triggers that contain the `Clause` in this node.
    fullName: allTriggers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Trigger[] allTriggers'
      return:
        type: '<xref uid="adaptive-expressions.Trigger" />[]'
        description: ''
  - name: clause
    uid: adaptive-expressions.Node.clause
    package: adaptive-expressions
    summary: Gets the logical conjunction this node represents.
    fullName: clause
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public clause: Clause'
      return:
        type: <xref uid="adaptive-expressions.Clause" />
        description: ''
  - name: specializations
    uid: adaptive-expressions.Node.specializations
    package: adaptive-expressions
    summary: Gets specialized children of this node.
    fullName: specializations
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Node[] specializations'
      return:
        type: '<xref uid="adaptive-expressions.Node" />[]'
        description: ''
  - name: tree
    uid: adaptive-expressions.Node.tree
    package: adaptive-expressions
    summary: Gets the tree this node is found in.
    fullName: tree
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public tree: TriggerTree'
      return:
        type: <xref uid="adaptive-expressions.TriggerTree" />
        description: ''
  - name: triggers
    uid: adaptive-expressions.Node.triggers
    package: adaptive-expressions
    summary: >-
      Gets all of the most specific triggers that contains the `Clause` in this
      node.
    fullName: triggers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'Trigger[] triggers'
      return:
        type: '<xref uid="adaptive-expressions.Trigger" />[]'
        description: ''
methods:
  - name: addNode(Node)
    uid: adaptive-expressions.Node.addNode
    package: adaptive-expressions
    summary: Adds a child node.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addNode(triggerNode: Node)'
      parameters:
        - id: triggerNode
          type: <xref uid="adaptive-expressions.Node" />
          description: The node to be added.
      return:
        type: boolean
        description: Whether adding node operation is successful.
  - name: matches(MemoryInterface | any)
    uid: adaptive-expressions.Node.matches
    package: adaptive-expressions
    summary: Gets the most specific matches below this node.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function matches(state: MemoryInterface | any)'
      parameters:
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" /> | any
          description: Frame to evaluate against.
      return:
        type: '<xref uid="adaptive-expressions.Trigger" />[]'
        description: List of the most specific matches found.
  - name: relationship(Node)
    uid: adaptive-expressions.Node.relationship
    package: adaptive-expressions
    summary: Identify the relationship between two nodes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function relationship(other: Node)'
      parameters:
        - id: other
          type: <xref uid="adaptive-expressions.Node" />
          description: Node to compare against.
      return:
        type: <xref uid="adaptive-expressions.RelationshipType" />
        description: Relationship between this node an the other.
  - name: removeTrigger(Trigger)
    uid: adaptive-expressions.Node.removeTrigger
    package: adaptive-expressions
    summary: Removes a trigger from node.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeTrigger(trigger: Trigger)'
      parameters:
        - id: trigger
          type: <xref uid="adaptive-expressions.Trigger" />
          description: The trigger to be removed.
      return:
        type: boolean
        description: Whether removing trigger operation is successful.
  - name: 'toString(string[], number)'
    uid: adaptive-expressions.Node.toString
    package: adaptive-expressions
    summary: Gets a string that represents the current node.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(builder: string[], indent: number)'
      parameters:
        - id: builder
          type: 'string[]'
          description: An array of string to build the string of node.
        - id: indent
          type: number
          description: |
            An integer representing the number of spaces at the start of a line.
      return:
        type: string
        description: ''
