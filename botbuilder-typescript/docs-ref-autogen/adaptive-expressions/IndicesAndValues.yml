### YamlMime:UniversalReference
items:
  - uid: adaptive-expressions.IndicesAndValues
    name: IndicesAndValues
    fullName: IndicesAndValues
    children:
      - adaptive-expressions.IndicesAndValues.constructor
      - adaptive-expressions.IndicesAndValues.returnType
      - adaptive-expressions.IndicesAndValues.tryEvaluate
      - adaptive-expressions.IndicesAndValues.type
      - adaptive-expressions.IndicesAndValues.validateExpression
    langs:
      - typeScript
    type: class
    summary: >-
      Turn an array or object into an array of objects with index and value
      properties.

      For arrays, the index is the position in the array.

      For objects, it is the key for the value.
    extends:
      name: adaptive-expressions.ExpressionEvaluator
    package: adaptive-expressions
  - uid: adaptive-expressions.IndicesAndValues.constructor
    name: IndicesAndValues()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new IndicesAndValues()
      parameters: []
    package: adaptive-expressions
  - uid: adaptive-expressions.IndicesAndValues.returnType
    name: returnType
    fullName: returnType
    children: []
    langs:
      - typeScript
    type: property
    summary: Type expected by evaluating the expression.
    syntax:
      content: 'returnType: ReturnType'
      return:
        type:
          - adaptive-expressions.ReturnType
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.IndicesAndValues.tryEvaluate
    name: tryEvaluate
    fullName: tryEvaluate
    children: []
    langs:
      - typeScript
    type: property
    summary: Evaluate an expression.
    syntax:
      content: >-
        tryEvaluate: (expression: Expression, state: MemoryInterface, options:
        Options) => ValueWithError
      return:
        type:
          - >-
            (expression: Expression, state: MemoryInterface, options: Options)
            => ValueWithError
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.IndicesAndValues.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the expression type for evaluator.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.IndicesAndValues.validateExpression
    name: validateExpression
    fullName: validateExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: Validate an expression.
    syntax:
      content: 'validateExpression: (expression: Expression) => void'
      return:
        type:
          - '(expression: Expression) => void'
        description: ''
    package: adaptive-expressions
references:
  - uid: adaptive-expressions.ExpressionEvaluator
    name: ExpressionEvaluator
    spec.typeScript:
      - name: ExpressionEvaluator
        fullName: ExpressionEvaluator
        uid: adaptive-expressions.ExpressionEvaluator
  - uid: adaptive-expressions.ReturnType
    name: ReturnType
    spec.typeScript:
      - name: ReturnType
        fullName: ReturnType
        uid: adaptive-expressions.ReturnType
