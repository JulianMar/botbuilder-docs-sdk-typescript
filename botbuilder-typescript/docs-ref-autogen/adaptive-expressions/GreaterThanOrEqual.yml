### YamlMime:UniversalReference
items:
  - uid: adaptive-expressions.GreaterThanOrEqual
    name: GreaterThanOrEqual
    fullName: GreaterThanOrEqual
    children:
      - adaptive-expressions.GreaterThanOrEqual.constructor
      - adaptive-expressions.GreaterThanOrEqual.returnType
      - adaptive-expressions.GreaterThanOrEqual.tryEvaluate
      - adaptive-expressions.GreaterThanOrEqual.type
      - adaptive-expressions.GreaterThanOrEqual.validateExpression
    langs:
      - typeScript
    type: class
    summary: >-
      Check whether the first value is greater than or equal to the second
      value. Return true when the first value is greater or equal,

      or return false if the first value is less.
    extends:
      name: adaptive-expressions.ComparisonEvaluator
    package: adaptive-expressions
  - uid: adaptive-expressions.GreaterThanOrEqual.constructor
    name: GreaterThanOrEqual()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new GreaterThanOrEqual()
      parameters: []
    package: adaptive-expressions
  - uid: adaptive-expressions.GreaterThanOrEqual.returnType
    name: returnType
    fullName: returnType
    children: []
    langs:
      - typeScript
    type: property
    summary: Type expected by evaluating the expression.
    syntax:
      content: 'returnType: ReturnType'
      return:
        type:
          - adaptive-expressions.ReturnType
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.GreaterThanOrEqual.tryEvaluate
    name: tryEvaluate
    fullName: tryEvaluate
    children: []
    langs:
      - typeScript
    type: property
    summary: Evaluate an expression.
    syntax:
      content: >-
        tryEvaluate: (expression: Expression, state: MemoryInterface, options:
        Options) => ValueWithError
      return:
        type:
          - >-
            (expression: Expression, state: MemoryInterface, options: Options)
            => ValueWithError
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.GreaterThanOrEqual.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the expression type for evaluator.
    syntax:
      content: 'type: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.GreaterThanOrEqual.validateExpression
    name: validateExpression
    fullName: validateExpression
    children: []
    langs:
      - typeScript
    type: property
    summary: Validate an expression.
    syntax:
      content: 'validateExpression: (expression: Expression) => void'
      return:
        type:
          - '(expression: Expression) => void'
        description: ''
    package: adaptive-expressions
references:
  - uid: adaptive-expressions.ComparisonEvaluator
    name: ComparisonEvaluator
    spec.typeScript:
      - name: ComparisonEvaluator
        fullName: ComparisonEvaluator
        uid: adaptive-expressions.ComparisonEvaluator
  - uid: adaptive-expressions.ReturnType
    name: ReturnType
    spec.typeScript:
      - name: ReturnType
        fullName: ReturnType
        uid: adaptive-expressions.ReturnType
