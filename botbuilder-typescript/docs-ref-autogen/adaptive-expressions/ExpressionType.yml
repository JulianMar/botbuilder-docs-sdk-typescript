### YamlMime:UniversalReference
items:
  - uid: adaptive-expressions.ExpressionType
    name: ExpressionType
    fullName: ExpressionType
    children:
      - adaptive-expressions.ExpressionType.Accessor
      - adaptive-expressions.ExpressionType.Add
      - adaptive-expressions.ExpressionType.AddDays
      - adaptive-expressions.ExpressionType.AddHours
      - adaptive-expressions.ExpressionType.AddMinutes
      - adaptive-expressions.ExpressionType.AddOrdinal
      - adaptive-expressions.ExpressionType.AddProperty
      - adaptive-expressions.ExpressionType.AddSeconds
      - adaptive-expressions.ExpressionType.AddToTime
      - adaptive-expressions.ExpressionType.And
      - adaptive-expressions.ExpressionType.Average
      - adaptive-expressions.ExpressionType.Base64
      - adaptive-expressions.ExpressionType.Base64ToBinary
      - adaptive-expressions.ExpressionType.Base64ToString
      - adaptive-expressions.ExpressionType.Binary
      - adaptive-expressions.ExpressionType.Bool
      - adaptive-expressions.ExpressionType.Ceiling
      - adaptive-expressions.ExpressionType.Coalesce
      - adaptive-expressions.ExpressionType.Concat
      - adaptive-expressions.ExpressionType.Constant
      - adaptive-expressions.ExpressionType.Contains
      - adaptive-expressions.ExpressionType.ConvertFromUTC
      - adaptive-expressions.ExpressionType.ConvertToUTC
      - adaptive-expressions.ExpressionType.Count
      - adaptive-expressions.ExpressionType.CountWord
      - adaptive-expressions.ExpressionType.CreateArray
      - adaptive-expressions.ExpressionType.DataUri
      - adaptive-expressions.ExpressionType.DataUriToBinary
      - adaptive-expressions.ExpressionType.DataUriToString
      - adaptive-expressions.ExpressionType.Date
      - adaptive-expressions.ExpressionType.DateReadBack
      - adaptive-expressions.ExpressionType.DateTimeDiff
      - adaptive-expressions.ExpressionType.DayOfMonth
      - adaptive-expressions.ExpressionType.DayOfWeek
      - adaptive-expressions.ExpressionType.DayOfYear
      - adaptive-expressions.ExpressionType.Divide
      - adaptive-expressions.ExpressionType.Element
      - adaptive-expressions.ExpressionType.Empty
      - adaptive-expressions.ExpressionType.EndsWith
      - adaptive-expressions.ExpressionType.Equal
      - adaptive-expressions.ExpressionType.Exists
      - adaptive-expressions.ExpressionType.FilterNotEqual
      - adaptive-expressions.ExpressionType.First
      - adaptive-expressions.ExpressionType.Flatten
      - adaptive-expressions.ExpressionType.Float
      - adaptive-expressions.ExpressionType.Floor
      - adaptive-expressions.ExpressionType.Foreach
      - adaptive-expressions.ExpressionType.FormatDateTime
      - adaptive-expressions.ExpressionType.FormatEpoch
      - adaptive-expressions.ExpressionType.FormatNumber
      - adaptive-expressions.ExpressionType.FormatTicks
      - adaptive-expressions.ExpressionType.GetFutureTime
      - adaptive-expressions.ExpressionType.GetNextViableDate
      - adaptive-expressions.ExpressionType.GetNextViableTime
      - adaptive-expressions.ExpressionType.GetPastTime
      - adaptive-expressions.ExpressionType.GetPreviousViableDate
      - adaptive-expressions.ExpressionType.GetPreviousViableTime
      - adaptive-expressions.ExpressionType.GetProperty
      - adaptive-expressions.ExpressionType.GetTimeOfDay
      - adaptive-expressions.ExpressionType.GreaterThan
      - adaptive-expressions.ExpressionType.GreaterThanOrEqual
      - adaptive-expressions.ExpressionType.If
      - adaptive-expressions.ExpressionType.Ignore
      - adaptive-expressions.ExpressionType.IndexOf
      - adaptive-expressions.ExpressionType.IndicesAndValues
      - adaptive-expressions.ExpressionType.Int
      - adaptive-expressions.ExpressionType.Intersection
      - adaptive-expressions.ExpressionType.IsArray
      - adaptive-expressions.ExpressionType.IsBoolean
      - adaptive-expressions.ExpressionType.IsDate
      - adaptive-expressions.ExpressionType.IsDateRange
      - adaptive-expressions.ExpressionType.IsDateTime
      - adaptive-expressions.ExpressionType.IsDefinite
      - adaptive-expressions.ExpressionType.IsDuration
      - adaptive-expressions.ExpressionType.IsFloat
      - adaptive-expressions.ExpressionType.IsInteger
      - adaptive-expressions.ExpressionType.IsMatch
      - adaptive-expressions.ExpressionType.IsObject
      - adaptive-expressions.ExpressionType.IsPresent
      - adaptive-expressions.ExpressionType.IsString
      - adaptive-expressions.ExpressionType.IsTime
      - adaptive-expressions.ExpressionType.IsTimeRange
      - adaptive-expressions.ExpressionType.Join
      - adaptive-expressions.ExpressionType.JPath
      - adaptive-expressions.ExpressionType.Json
      - adaptive-expressions.ExpressionType.Lambda
      - adaptive-expressions.ExpressionType.Last
      - adaptive-expressions.ExpressionType.LastIndexOf
      - adaptive-expressions.ExpressionType.Length
      - adaptive-expressions.ExpressionType.LessThan
      - adaptive-expressions.ExpressionType.LessThanOrEqual
      - adaptive-expressions.ExpressionType.Max
      - adaptive-expressions.ExpressionType.Merge
      - adaptive-expressions.ExpressionType.Min
      - adaptive-expressions.ExpressionType.Mod
      - adaptive-expressions.ExpressionType.Month
      - adaptive-expressions.ExpressionType.Multiply
      - adaptive-expressions.ExpressionType.NewGuid
      - adaptive-expressions.ExpressionType.Not
      - adaptive-expressions.ExpressionType.NotEqual
      - adaptive-expressions.ExpressionType.Optional
      - adaptive-expressions.ExpressionType.Or
      - adaptive-expressions.ExpressionType.Power
      - adaptive-expressions.ExpressionType.Rand
      - adaptive-expressions.ExpressionType.Range
      - adaptive-expressions.ExpressionType.RemoveProperty
      - adaptive-expressions.ExpressionType.Replace
      - adaptive-expressions.ExpressionType.ReplaceIgnoreCase
      - adaptive-expressions.ExpressionType.Round
      - adaptive-expressions.ExpressionType.Select
      - adaptive-expressions.ExpressionType.SentenceCase
      - adaptive-expressions.ExpressionType.SetPathToValue
      - adaptive-expressions.ExpressionType.SetProperty
      - adaptive-expressions.ExpressionType.Skip
      - adaptive-expressions.ExpressionType.SortBy
      - adaptive-expressions.ExpressionType.SortByDescending
      - adaptive-expressions.ExpressionType.Split
      - adaptive-expressions.ExpressionType.StartOfDay
      - adaptive-expressions.ExpressionType.StartOfHour
      - adaptive-expressions.ExpressionType.StartOfMonth
      - adaptive-expressions.ExpressionType.StartsWith
      - adaptive-expressions.ExpressionType.String
      - adaptive-expressions.ExpressionType.SubArray
      - adaptive-expressions.ExpressionType.Substring
      - adaptive-expressions.ExpressionType.Subtract
      - adaptive-expressions.ExpressionType.SubtractFromTime
      - adaptive-expressions.ExpressionType.Sum
      - adaptive-expressions.ExpressionType.Take
      - adaptive-expressions.ExpressionType.Ticks
      - adaptive-expressions.ExpressionType.TicksToDays
      - adaptive-expressions.ExpressionType.TicksToHours
      - adaptive-expressions.ExpressionType.TicksToMinutes
      - adaptive-expressions.ExpressionType.TitleCase
      - adaptive-expressions.ExpressionType.ToLower
      - adaptive-expressions.ExpressionType.ToUpper
      - adaptive-expressions.ExpressionType.Trim
      - adaptive-expressions.ExpressionType.Union
      - adaptive-expressions.ExpressionType.Unique
      - adaptive-expressions.ExpressionType.UriComponent
      - adaptive-expressions.ExpressionType.UriComponentToString
      - adaptive-expressions.ExpressionType.UriHost
      - adaptive-expressions.ExpressionType.UriPath
      - adaptive-expressions.ExpressionType.UriPathAndQuery
      - adaptive-expressions.ExpressionType.UriPort
      - adaptive-expressions.ExpressionType.UriQuery
      - adaptive-expressions.ExpressionType.UriScheme
      - adaptive-expressions.ExpressionType.UtcNow
      - adaptive-expressions.ExpressionType.Where
      - adaptive-expressions.ExpressionType.Year
    langs:
      - typeScript
    type: class
    summary: Built-in expression types.
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Accessor
    name: Accessor
    fullName: Accessor
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Accessor: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Add
    name: Add
    fullName: Add
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Add: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddDays
    name: AddDays
    fullName: AddDays
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddDays: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddHours
    name: AddHours
    fullName: AddHours
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddHours: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddMinutes
    name: AddMinutes
    fullName: AddMinutes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddMinutes: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddOrdinal
    name: AddOrdinal
    fullName: AddOrdinal
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddOrdinal: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddProperty
    name: AddProperty
    fullName: AddProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddProperty: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddSeconds
    name: AddSeconds
    fullName: AddSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddSeconds: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.AddToTime
    name: AddToTime
    fullName: AddToTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static AddToTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.And
    name: And
    fullName: And
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static And: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Average
    name: Average
    fullName: Average
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Average: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Base64
    name: Base64
    fullName: Base64
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Base64: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Base64ToBinary
    name: Base64ToBinary
    fullName: Base64ToBinary
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Base64ToBinary: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Base64ToString
    name: Base64ToString
    fullName: Base64ToString
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Base64ToString: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Binary
    name: Binary
    fullName: Binary
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Binary: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Bool
    name: Bool
    fullName: Bool
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Bool: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Ceiling
    name: Ceiling
    fullName: Ceiling
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Ceiling: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Coalesce
    name: Coalesce
    fullName: Coalesce
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Coalesce: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Concat
    name: Concat
    fullName: Concat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Concat: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Constant
    name: Constant
    fullName: Constant
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Constant: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Contains
    name: Contains
    fullName: Contains
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Contains: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.ConvertFromUTC
    name: ConvertFromUTC
    fullName: ConvertFromUTC
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static ConvertFromUTC: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.ConvertToUTC
    name: ConvertToUTC
    fullName: ConvertToUTC
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static ConvertToUTC: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Count
    name: Count
    fullName: Count
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Count: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.CountWord
    name: CountWord
    fullName: CountWord
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static CountWord: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.CreateArray
    name: CreateArray
    fullName: CreateArray
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static CreateArray: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DataUri
    name: DataUri
    fullName: DataUri
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DataUri: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DataUriToBinary
    name: DataUriToBinary
    fullName: DataUriToBinary
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DataUriToBinary: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DataUriToString
    name: DataUriToString
    fullName: DataUriToString
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DataUriToString: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Date
    name: Date
    fullName: Date
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Date: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DateReadBack
    name: DateReadBack
    fullName: DateReadBack
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DateReadBack: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DateTimeDiff
    name: DateTimeDiff
    fullName: DateTimeDiff
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DateTimeDiff: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DayOfMonth
    name: DayOfMonth
    fullName: DayOfMonth
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DayOfMonth: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DayOfWeek
    name: DayOfWeek
    fullName: DayOfWeek
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DayOfWeek: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.DayOfYear
    name: DayOfYear
    fullName: DayOfYear
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static DayOfYear: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Divide
    name: Divide
    fullName: Divide
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Divide: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Element
    name: Element
    fullName: Element
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Element: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Empty
    name: Empty
    fullName: Empty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Empty: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.EndsWith
    name: EndsWith
    fullName: EndsWith
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static EndsWith: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Equal
    name: Equal
    fullName: Equal
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Equal: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Exists
    name: Exists
    fullName: Exists
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Exists: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.FilterNotEqual
    name: FilterNotEqual
    fullName: FilterNotEqual
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static FilterNotEqual: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.First
    name: First
    fullName: First
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static First: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Flatten
    name: Flatten
    fullName: Flatten
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Flatten: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Float
    name: Float
    fullName: Float
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Float: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Floor
    name: Floor
    fullName: Floor
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Floor: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Foreach
    name: Foreach
    fullName: Foreach
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Foreach: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.FormatDateTime
    name: FormatDateTime
    fullName: FormatDateTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static FormatDateTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.FormatEpoch
    name: FormatEpoch
    fullName: FormatEpoch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static FormatEpoch: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.FormatNumber
    name: FormatNumber
    fullName: FormatNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static FormatNumber: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.FormatTicks
    name: FormatTicks
    fullName: FormatTicks
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static FormatTicks: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetFutureTime
    name: GetFutureTime
    fullName: GetFutureTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetFutureTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetNextViableDate
    name: GetNextViableDate
    fullName: GetNextViableDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetNextViableDate: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetNextViableTime
    name: GetNextViableTime
    fullName: GetNextViableTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetNextViableTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetPastTime
    name: GetPastTime
    fullName: GetPastTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetPastTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetPreviousViableDate
    name: GetPreviousViableDate
    fullName: GetPreviousViableDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetPreviousViableDate: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetPreviousViableTime
    name: GetPreviousViableTime
    fullName: GetPreviousViableTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetPreviousViableTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetProperty
    name: GetProperty
    fullName: GetProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetProperty: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GetTimeOfDay
    name: GetTimeOfDay
    fullName: GetTimeOfDay
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GetTimeOfDay: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GreaterThan
    name: GreaterThan
    fullName: GreaterThan
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GreaterThan: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.GreaterThanOrEqual
    name: GreaterThanOrEqual
    fullName: GreaterThanOrEqual
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static GreaterThanOrEqual: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.If
    name: If
    fullName: If
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static If: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Ignore
    name: Ignore
    fullName: Ignore
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Ignore: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IndexOf
    name: IndexOf
    fullName: IndexOf
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IndexOf: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IndicesAndValues
    name: IndicesAndValues
    fullName: IndicesAndValues
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IndicesAndValues: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Int
    name: Int
    fullName: Int
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Int: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Intersection
    name: Intersection
    fullName: Intersection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Intersection: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsArray
    name: IsArray
    fullName: IsArray
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsArray: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsBoolean
    name: IsBoolean
    fullName: IsBoolean
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsBoolean: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsDate
    name: IsDate
    fullName: IsDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsDate: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsDateRange
    name: IsDateRange
    fullName: IsDateRange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsDateRange: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsDateTime
    name: IsDateTime
    fullName: IsDateTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsDateTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsDefinite
    name: IsDefinite
    fullName: IsDefinite
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsDefinite: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsDuration
    name: IsDuration
    fullName: IsDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsDuration: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsFloat
    name: IsFloat
    fullName: IsFloat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsFloat: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsInteger
    name: IsInteger
    fullName: IsInteger
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsInteger: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsMatch
    name: IsMatch
    fullName: IsMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsMatch: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsObject
    name: IsObject
    fullName: IsObject
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsObject: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsPresent
    name: IsPresent
    fullName: IsPresent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsPresent: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsString
    name: IsString
    fullName: IsString
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsString: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsTime
    name: IsTime
    fullName: IsTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.IsTimeRange
    name: IsTimeRange
    fullName: IsTimeRange
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static IsTimeRange: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Join
    name: Join
    fullName: Join
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Join: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.JPath
    name: JPath
    fullName: JPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static JPath: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Json
    name: Json
    fullName: Json
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Json: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Lambda
    name: Lambda
    fullName: Lambda
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Lambda: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Last
    name: Last
    fullName: Last
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Last: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.LastIndexOf
    name: LastIndexOf
    fullName: LastIndexOf
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static LastIndexOf: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Length
    name: Length
    fullName: Length
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Length: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.LessThan
    name: LessThan
    fullName: LessThan
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static LessThan: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.LessThanOrEqual
    name: LessThanOrEqual
    fullName: LessThanOrEqual
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static LessThanOrEqual: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Max
    name: Max
    fullName: Max
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Max: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Merge
    name: Merge
    fullName: Merge
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Merge: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Min
    name: Min
    fullName: Min
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Min: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Mod
    name: Mod
    fullName: Mod
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Mod: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Month
    name: Month
    fullName: Month
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Month: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Multiply
    name: Multiply
    fullName: Multiply
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Multiply: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.NewGuid
    name: NewGuid
    fullName: NewGuid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static NewGuid: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Not
    name: Not
    fullName: Not
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Not: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.NotEqual
    name: NotEqual
    fullName: NotEqual
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static NotEqual: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Optional
    name: Optional
    fullName: Optional
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Optional: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Or
    name: Or
    fullName: Or
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Or: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Power
    name: Power
    fullName: Power
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Power: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Rand
    name: Rand
    fullName: Rand
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Rand: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Range
    name: Range
    fullName: Range
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Range: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.RemoveProperty
    name: RemoveProperty
    fullName: RemoveProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static RemoveProperty: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Replace
    name: Replace
    fullName: Replace
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Replace: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.ReplaceIgnoreCase
    name: ReplaceIgnoreCase
    fullName: ReplaceIgnoreCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static ReplaceIgnoreCase: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Round
    name: Round
    fullName: Round
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Round: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Select
    name: Select
    fullName: Select
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Select: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SentenceCase
    name: SentenceCase
    fullName: SentenceCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SentenceCase: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SetPathToValue
    name: SetPathToValue
    fullName: SetPathToValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SetPathToValue: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SetProperty
    name: SetProperty
    fullName: SetProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SetProperty: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Skip
    name: Skip
    fullName: Skip
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Skip: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SortBy
    name: SortBy
    fullName: SortBy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SortBy: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SortByDescending
    name: SortByDescending
    fullName: SortByDescending
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SortByDescending: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Split
    name: Split
    fullName: Split
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Split: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.StartOfDay
    name: StartOfDay
    fullName: StartOfDay
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static StartOfDay: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.StartOfHour
    name: StartOfHour
    fullName: StartOfHour
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static StartOfHour: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.StartOfMonth
    name: StartOfMonth
    fullName: StartOfMonth
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static StartOfMonth: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.StartsWith
    name: StartsWith
    fullName: StartsWith
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static StartsWith: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.String
    name: String
    fullName: String
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static String: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SubArray
    name: SubArray
    fullName: SubArray
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SubArray: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Substring
    name: Substring
    fullName: Substring
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Substring: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Subtract
    name: Subtract
    fullName: Subtract
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Subtract: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.SubtractFromTime
    name: SubtractFromTime
    fullName: SubtractFromTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static SubtractFromTime: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Sum
    name: Sum
    fullName: Sum
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Sum: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Take
    name: Take
    fullName: Take
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Take: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Ticks
    name: Ticks
    fullName: Ticks
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Ticks: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.TicksToDays
    name: TicksToDays
    fullName: TicksToDays
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static TicksToDays: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.TicksToHours
    name: TicksToHours
    fullName: TicksToHours
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static TicksToHours: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.TicksToMinutes
    name: TicksToMinutes
    fullName: TicksToMinutes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static TicksToMinutes: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.TitleCase
    name: TitleCase
    fullName: TitleCase
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static TitleCase: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.ToLower
    name: ToLower
    fullName: ToLower
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static ToLower: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.ToUpper
    name: ToUpper
    fullName: ToUpper
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static ToUpper: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Trim
    name: Trim
    fullName: Trim
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Trim: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Union
    name: Union
    fullName: Union
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Union: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Unique
    name: Unique
    fullName: Unique
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Unique: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriComponent
    name: UriComponent
    fullName: UriComponent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriComponent: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriComponentToString
    name: UriComponentToString
    fullName: UriComponentToString
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriComponentToString: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriHost
    name: UriHost
    fullName: UriHost
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriHost: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriPath
    name: UriPath
    fullName: UriPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriPath: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriPathAndQuery
    name: UriPathAndQuery
    fullName: UriPathAndQuery
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriPathAndQuery: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriPort
    name: UriPort
    fullName: UriPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriPort: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriQuery
    name: UriQuery
    fullName: UriQuery
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriQuery: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UriScheme
    name: UriScheme
    fullName: UriScheme
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UriScheme: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.UtcNow
    name: UtcNow
    fullName: UtcNow
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static UtcNow: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Where
    name: Where
    fullName: Where
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Where: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
  - uid: adaptive-expressions.ExpressionType.Year
    name: Year
    fullName: Year
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Year: string'
      return:
        type:
          - string
        description: ''
    package: adaptive-expressions
