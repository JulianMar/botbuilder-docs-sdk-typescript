### YamlMime:TSType
name: InternalFunctionUtils
uid: adaptive-expressions.InternalFunctionUtils
package: adaptive-expressions
summary: Utility functions only used internal
fullName: InternalFunctionUtils
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
  - name: MillisecondToTickConstant
    uid: adaptive-expressions.InternalFunctionUtils.MillisecondToTickConstant
    package: adaptive-expressions
    summary: Constant to convert between ticks and ms.
    fullName: MillisecondToTickConstant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'public static MillisecondToTickConstant: BigInteger = bigInt(''10000'')'
      return:
        type: BigInteger
        description: ''
  - name: UnixMilliSecondToTicksConstant
    uid: adaptive-expressions.InternalFunctionUtils.UnixMilliSecondToTicksConstant
    package: adaptive-expressions
    summary: Constant for converting unix timestamp to ticks.
    fullName: UnixMilliSecondToTicksConstant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        public static UnixMilliSecondToTicksConstant: BigInteger =
        bigInt('621355968000000000')
      return:
        type: BigInteger
        description: ''
methods:
  - name: 'accessIndex(any, number)'
    uid: adaptive-expressions.InternalFunctionUtils.accessIndex
    package: adaptive-expressions
    summary: Lookup a string or number index of an Object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function accessIndex(instance: any, index: number)'
      parameters:
        - id: instance
          type: any
          description: Instance with property.
        - id: index
          type: number
          description: ''
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: Value and error information if any.
  - name: 'accessProperty(any, string)'
    uid: adaptive-expressions.InternalFunctionUtils.accessProperty
    package: adaptive-expressions
    summary: Lookup a property in Map or Object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function accessProperty(instance: any, property: string)'
      parameters:
        - id: instance
          type: any
          description: Instance with property.
        - id: property
          type: string
          description: Property to lookup.
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: Value and error information if any.
  - name: commonStringify(unknown)
    uid: adaptive-expressions.InternalFunctionUtils.commonStringify
    package: adaptive-expressions
    summary: Common Stringfy an object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function commonStringify(input: unknown)'
      parameters:
        - id: input
          type: unknown
          description: |
            input object.
      return:
        type: string
        description: ''
  - name: convertToList(unknown)
    uid: adaptive-expressions.InternalFunctionUtils.convertToList
    package: adaptive-expressions
    summary: |-
      Convert an object into array.
      If the instance is array, return itself.
      If the instance is object, return {key, value} pair list.
      Else return undefined.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function convertToList(instance: unknown)'
      parameters:
        - id: instance
          type: unknown
          description: |
            input instance.
      return:
        type: 'unknown[] | undefined'
        description: ''
  - name: 'foreach(Expression, MemoryInterface, Options)'
    uid: adaptive-expressions.InternalFunctionUtils.foreach
    package: adaptive-expressions
    summary: Evaluator for foreach and select functions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function foreach(expression: Expression, state: MemoryInterface,
        options: Options)
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: Expression.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: Memory scope.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: |
            Options.
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: ''
  - name: getTextDecoder(string)
    uid: adaptive-expressions.InternalFunctionUtils.getTextDecoder
    package: adaptive-expressions
    summary: TextDecoder helper function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function getTextDecoder(code: string)'
      parameters:
        - id: code
          type: string
          description: ''
      return:
        type: TextDecoder
        description: ''
  - name: getTextEncoder()
    uid: adaptive-expressions.InternalFunctionUtils.getTextEncoder
    package: adaptive-expressions
    summary: TextEncoder helper function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: static function getTextEncoder()
      return:
        type: TextEncoder
        description: ''
  - name: isLogicTrue(any)
    uid: adaptive-expressions.InternalFunctionUtils.isLogicTrue
    package: adaptive-expressions
    summary: Test result to see if True in logical comparison functions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function isLogicTrue(instance: any)'
      parameters:
        - id: instance
          type: any
          description: Computed value.
      return:
        type: boolean
        description: True if boolean true or non-null.
  - name: >-
      lambdaEvaluator<T>(Expression, MemoryInterface, Options, T[],
      (currentItem: T, result: U, error: string) => boolean)
    uid: adaptive-expressions.InternalFunctionUtils.lambdaEvaluator
    package: adaptive-expressions
    summary: Lambda evaluator.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function lambdaEvaluator<T>(expression: Expression, state:
        MemoryInterface, options: Options, list: T[], callback: (currentItem: T,
        result: U, error: string) => boolean)
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: expression.
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: memory state.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: options.
        - id: list
          type: 'T[]'
          description: item list.
        - id: callback
          type: '(currentItem: T, result: U, error: string) =&gt; boolean'
          description: |
            call back. return the should break flag.
  - name: parseStringOrUndefined(string | undefined)
    uid: adaptive-expressions.InternalFunctionUtils.parseStringOrUndefined
    package: adaptive-expressions
    summary: Wrap string or undefined into string. Default to empty string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function parseStringOrUndefined(input: string | undefined)'
      parameters:
        - id: input
          type: string | undefined
          description: |
            Input string
      return:
        type: string
        description: ''
  - name: parseTimexProperty(any)
    uid: adaptive-expressions.InternalFunctionUtils.parseTimexProperty
    package: adaptive-expressions
    summary: Parse timex funcition.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function parseTimexProperty(timexExpr: any)'
      parameters:
        - id: timexExpr
          type: any
          description: String or TimexProperty input.
      return:
        type: Object
        description: TimexProperty and error.
  - name: parseUri(string)
    uid: adaptive-expressions.InternalFunctionUtils.parseUri
    package: adaptive-expressions
    summary: Parse string into URL object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function parseUri(uri: string)'
      parameters:
        - id: uri
          type: string
          description: |
            Input string uri.
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: ''
  - name: sortBy(boolean)
    uid: adaptive-expressions.InternalFunctionUtils.sortBy
    package: adaptive-expressions
    summary: Sort helper function.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function sortBy(isDescending: boolean)'
      parameters:
        - id: isDescending
          type: boolean
          description: |
            Descending flag.
      return:
        type: <xref uid="adaptive-expressions.EvaluateExpressionDelegate" />
        description: ''
  - name: ticks(string)
    uid: adaptive-expressions.InternalFunctionUtils.ticks
    package: adaptive-expressions
    summary: Convert a string input to ticks number.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function ticks(timeStamp: string)'
      parameters:
        - id: timeStamp
          type: string
          description: |
            String timestamp input.
      return:
        type: <xref uid="adaptive-expressions.ValueWithError" />
        description: ''
  - name: 'timeUnitTransformer(number, string)'
    uid: adaptive-expressions.InternalFunctionUtils.timeUnitTransformer
    package: adaptive-expressions
    summary: Transform C# period and unit into js period and unit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function timeUnitTransformer(duration: number, cSharpStr: string)'
      parameters:
        - id: duration
          type: number
          description: C# duration
        - id: cSharpStr
          type: string
          description: |
            C# unit.
      return:
        type: Object
        description: ''
  - name: ValidateLambdaExpression(Expression)
    uid: adaptive-expressions.InternalFunctionUtils.ValidateLambdaExpression
    package: adaptive-expressions
    summary: 'Validator for foreach, select, and where functions.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function ValidateLambdaExpression(expression: Expression)'
      parameters:
        - id: expression
          type: <xref uid="adaptive-expressions.Expression" />
          description: |+

  - name: verifyISOTimestamp(any)
    uid: adaptive-expressions.InternalFunctionUtils.verifyISOTimestamp
    package: adaptive-expressions
    summary: Verify a timestamp string is valid ISO timestamp format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function verifyISOTimestamp(value: any)'
      parameters:
        - id: value
          type: any
          description: Timestamp string to check.
      return:
        type: string | undefined
        description: Error or undefined if invalid.
  - name: verifyTimestamp(any)
    uid: adaptive-expressions.InternalFunctionUtils.verifyTimestamp
    package: adaptive-expressions
    summary: Verify a timestamp string is valid timestamp format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static function verifyTimestamp(value: any)'
      parameters:
        - id: value
          type: any
          description: Timestamp string to check.
      return:
        type: string | undefined
        description: Error or undefined if invalid.
  - name: 'wrapGetValue(MemoryInterface, string, Options)'
    uid: adaptive-expressions.InternalFunctionUtils.wrapGetValue
    package: adaptive-expressions
    summary: Get the value of a path from a memory
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function wrapGetValue(state: MemoryInterface, path: string,
        options: Options)
      parameters:
        - id: state
          type: <xref uid="adaptive-expressions.MemoryInterface" />
          description: Memory.
        - id: path
          type: string
          description: Path string.
        - id: options
          type: <xref uid="adaptive-expressions.Options" />
          description: |
            Options.
      return:
        type: any
        description: ''
