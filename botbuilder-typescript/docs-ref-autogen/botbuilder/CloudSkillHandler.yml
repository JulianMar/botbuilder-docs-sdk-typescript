### YamlMime:TSType
name: CloudSkillHandler
uid: botbuilder.CloudSkillHandler
package: botbuilder
summary: ''
fullName: CloudSkillHandler
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      CloudSkillHandler(BotAdapter, (context: TurnContext) => Promise<void>,
      SkillConversationIdFactoryBase, BotFrameworkAuthentication)
    uid: botbuilder.CloudSkillHandler.constructor
    package: botbuilder
    summary: Initializes a new instance of the CloudSkillHandler class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CloudSkillHandler(adapter: BotAdapter, logic: (context: TurnContext)
        => Promise<void>, conversationIdFactory: SkillConversationIdFactoryBase,
        auth: BotFrameworkAuthentication)
      parameters:
        - id: adapter
          type: BotAdapter
          description: An instance of the BotAdapter that will handle the request.
        - id: logic
          type: '(context: TurnContext) =&gt; Promise&lt;void&gt;'
          description: The Bot logic function
        - id: conversationIdFactory
          type: SkillConversationIdFactoryBase
          description: >-
            A SkillConversationIdFactoryBase to unpack the conversation ID and
            map it to the calling bot.
        - id: auth
          type: BotFrameworkAuthentication
          description: |
            Bot Framework Authentication to use
properties:
  - name: SkillConversationReferenceKey
    uid: botbuilder.CloudSkillHandler.SkillConversationReferenceKey
    package: botbuilder
    summary: >-
      Used to access the CovnersationReference sent from the Skill to the
      Parent.
    fullName: SkillConversationReferenceKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'SkillConversationReferenceKey: symbol'
      return:
        type: symbol
        description: ''
methods:
  - name: 'handleCreateConversation(string, ConversationParameters)'
    uid: botbuilder.CloudSkillHandler.handleCreateConversation
    package: botbuilder
    summary: Creates a new Conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleCreateConversation(authHeader: string, parameters:
        ConversationParameters)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: parameters
          type: ConversationParameters
          description: >-
            (xref:botbuilder-core.ConversationParameters) to create the
            conversation from.
      return:
        type: Promise&lt;ConversationResourceResponse&gt;
        description: A `Promise` representation for the operation.
  - name: 'handleDeleteActivity(string, string, string)'
    uid: botbuilder.CloudSkillHandler.handleDeleteActivity
    package: botbuilder
    summary: 'Deletes an existing [Activity](xref:botframework-schema.Activity).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleDeleteActivity(authHeader: string, conversationId:
        string, activityId: string)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: |
            The activity Id to delete.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'handleDeleteConversationMember(string, string, string)'
    uid: botbuilder.CloudSkillHandler.handleDeleteConversationMember
    package: botbuilder
    summary: Deletes a member from a conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleDeleteConversationMember(authHeader: string,
        conversationId: string, memberId: string)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: memberId
          type: string
          description: |
            Id of the member to delete from this conversation.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'handleGetActivityMembers(string, string, string)'
    uid: botbuilder.CloudSkillHandler.handleGetActivityMembers
    package: botbuilder
    summary: >-
      Enumerates the members of an
      [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleGetActivityMembers(authHeader: string, conversationId:
        string, activityId: string)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id.
      return:
        type: 'Promise&lt;ChannelAccount[]&gt;'
        description: >-
          The enumerated
          [ChannelAccount](xref:botframework-schema.ChannelAccount) list.
  - name: 'handleGetConversationMembers(string, string)'
    uid: botbuilder.CloudSkillHandler.handleGetConversationMembers
    package: botbuilder
    summary: Enumerates the members of a conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversationMembers(authHeader: string,
        conversationId: string)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
      return:
        type: 'Promise&lt;ChannelAccount[]&gt;'
        description: >-
          The enumerated
          [ChannelAccount](xref:botframework-schema.ChannelAccount) list.
  - name: 'handleGetConversationPagedMembers(string, string, number, string)'
    uid: botbuilder.CloudSkillHandler.handleGetConversationPagedMembers
    package: botbuilder
    summary: Enumerates the members of a conversation one page at a time.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversationPagedMembers(authHeader: string,
        conversationId: string, pageSize?: number, continuationToken?: string)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: pageSize
          type: number
          description: Suggested page size.
        - id: continuationToken
          type: string
          description: A continuation token.
      return:
        type: Promise&lt;PagedMembersResult&gt;
        description: >-
          A `Promise` representing the
          [PagedMembersResult](xref:botframework-schema.PagedMembersResult) for
          the operation.
  - name: 'handleGetConversations(string, string, string)'
    uid: botbuilder.CloudSkillHandler.handleGetConversations
    package: botbuilder
    summary: Lists the Conversations in which the bot has participated.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleGetConversations(authHeader: string, conversationId:
        string, continuationToken?: string)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: continuationToken
          type: string
          description: A skip or continuation token.
      return:
        type: Promise&lt;ConversationsResult&gt;
        description: A `Promise` representation for the operation.
  - name: 'handleReplyToActivity(string, string, string, Activity)'
    uid: botbuilder.CloudSkillHandler.handleReplyToActivity
    package: botbuilder
    summary: 'Sends a reply to an [Activity](xref:botframework-schema.Activity).'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleReplyToActivity(authHeader: string, conversationId:
        string, activityId: string, activity: Activity)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id the reply is to.
        - id: activity
          type: Activity
          description: 'The [Activity](xref:botframework-schema.Activity) to send.'
      return:
        type: Promise&lt;ResourceResponse&gt;
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
  - name: 'handleSendConversationHistory(string, string, Transcript)'
    uid: botbuilder.CloudSkillHandler.handleSendConversationHistory
    package: botbuilder
    summary: Uploads the historic activities of the conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleSendConversationHistory(authHeader: string,
        conversationId: string, transcript: Transcript)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: transcript
          type: Transcript
          description: '(xref:botframework-schema.Transcript) of activities.'
      return:
        type: Promise&lt;ResourceResponse&gt;
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
  - name: 'handleSendToConversation(string, string, Activity)'
    uid: botbuilder.CloudSkillHandler.handleSendToConversation
    package: botbuilder
    summary: >-
      Sends an [Activity](xref:botframework-schema.Activity) to the end of a
      conversation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleSendToConversation(authHeader: string, conversationId:
        string, activity: Activity)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activity
          type: Activity
          description: 'The [Activity](xref:botframework-schema.Activity) to send.'
      return:
        type: Promise&lt;ResourceResponse&gt;
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
  - name: 'handleUpdateActivity(string, string, string, Activity)'
    uid: botbuilder.CloudSkillHandler.handleUpdateActivity
    package: botbuilder
    summary: >-
      Edits a previously sent existing
      [Activity](xref:botframework-schema.Activity).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleUpdateActivity(authHeader: string, conversationId:
        string, activityId: string, activity: Activity)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: activityId
          type: string
          description: The activity Id to update.
        - id: activity
          type: Activity
          description: 'The replacement [Activity](xref:botframework-schema.Activity).'
      return:
        type: Promise&lt;ResourceResponse&gt;
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
  - name: 'handleUploadAttachment(string, string, AttachmentData)'
    uid: botbuilder.CloudSkillHandler.handleUploadAttachment
    package: botbuilder
    summary: Stores data in a compliant store when dealing with enterprises.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function handleUploadAttachment(authHeader: string, conversationId:
        string, attachmentUpload: AttachmentData)
      parameters:
        - id: authHeader
          type: string
          description: The authentication header.
        - id: conversationId
          type: string
          description: The conversation Id.
        - id: attachmentUpload
          type: AttachmentData
          description: '(xref:botframework-schema.AttachmentData).'
      return:
        type: Promise&lt;ResourceResponse&gt;
        description: >-
          A `Promise` representing the
          [ResourceResponse](xref:botframework-schema.ResourceResponse) for the
          operation.
extends: <xref uid="botbuilder.CloudChannelServiceHandler" />
