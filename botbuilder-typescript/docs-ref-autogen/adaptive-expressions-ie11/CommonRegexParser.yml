### YamlMime:TSType
name: CommonRegexParser
uid: adaptive-expressions-ie11.CommonRegexParser
package: adaptive-expressions-ie11
summary: ''
fullName: CommonRegexParser
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: CommonRegexParser(TokenStream)
    uid: adaptive-expressions-ie11.CommonRegexParser.constructor
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new CommonRegexParser(input: TokenStream)'
      parameters:
        - id: input
          type: TokenStream
          description: ''
properties:
  - name: ALC
    uid: adaptive-expressions-ie11.CommonRegexParser.ALC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ALC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ALC: 44 = 44'
      return:
        type: '44'
        description: ''
  - name: Ampersand
    uid: adaptive-expressions-ie11.CommonRegexParser.Ampersand
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Ampersand
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Ampersand: 43 = 43'
      return:
        type: '43'
        description: ''
  - name: atn
    uid: adaptive-expressions-ie11.CommonRegexParser.atn
    package: adaptive-expressions-ie11
    summary: 'Get the <xref:ATN> used by the recognizer for prediction.'
    fullName: atn
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'atn: ATN'
      return:
        type: ATN
        description: ''
  - name: AUC
    uid: adaptive-expressions-ie11.CommonRegexParser.AUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: AUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static AUC: 70 = 70'
      return:
        type: '70'
        description: ''
  - name: Backslash
    uid: adaptive-expressions-ie11.CommonRegexParser.Backslash
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Backslash
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Backslash: 10 = 10'
      return:
        type: '10'
        description: ''
  - name: BellChar
    uid: adaptive-expressions-ie11.CommonRegexParser.BellChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BellChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static BellChar: 3 = 3'
      return:
        type: '3'
        description: ''
  - name: BLC
    uid: adaptive-expressions-ie11.CommonRegexParser.BLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static BLC: 45 = 45'
      return:
        type: '45'
        description: ''
  - name: BlockQuoted
    uid: adaptive-expressions-ie11.CommonRegexParser.BlockQuoted
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BlockQuoted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static BlockQuoted: 2 = 2'
      return:
        type: '2'
        description: ''
  - name: BUC
    uid: adaptive-expressions-ie11.CommonRegexParser.BUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: BUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static BUC: 71 = 71'
      return:
        type: '71'
        description: ''
  - name: buildParseTree
    uid: adaptive-expressions-ie11.CommonRegexParser.buildParseTree
    package: adaptive-expressions-ie11
    summary: |
      Track the <xref:ParserRuleContext> objects during the parse and hook
      them up using the <xref:ParserRuleContext%23children> list so that it
      forms a parse tree. The <xref:ParserRuleContext> returned from the start
      rule represents the root of the parse tree.
      Note that if we are not building parse trees, rule contexts only point
      upwards. When a rule exits, it returns the context but that gets garbage
      collected if nobody holds a reference. It points upwards but nobody
      points at it.

      When we build parse trees, we are adding all of these contexts to
      <xref:ParserRuleContext%23children> list. Contexts are then not candidates
      for garbage collection.
    fullName: buildParseTree
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'buildParseTree: boolean'
      return:
        type: boolean
        description: ''
  - name: Caret
    uid: adaptive-expressions-ie11.CommonRegexParser.Caret
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Caret
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Caret: 23 = 23'
      return:
        type: '23'
        description: ''
  - name: CarriageReturn
    uid: adaptive-expressions-ie11.CommonRegexParser.CarriageReturn
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CarriageReturn
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CarriageReturn: 8 = 8'
      return:
        type: '8'
        description: ''
  - name: CharacterClassEnd
    uid: adaptive-expressions-ie11.CommonRegexParser.CharacterClassEnd
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharacterClassEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CharacterClassEnd: 22 = 22'
      return:
        type: '22'
        description: ''
  - name: CharacterClassStart
    uid: adaptive-expressions-ie11.CommonRegexParser.CharacterClassStart
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharacterClassStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CharacterClassStart: 21 = 21'
      return:
        type: '21'
        description: ''
  - name: CharWithoutProperty
    uid: adaptive-expressions-ie11.CommonRegexParser.CharWithoutProperty
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharWithoutProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CharWithoutProperty: 16 = 16'
      return:
        type: '16'
        description: ''
  - name: CharWithProperty
    uid: adaptive-expressions-ie11.CommonRegexParser.CharWithProperty
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CharWithProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CharWithProperty: 15 = 15'
      return:
        type: '15'
        description: ''
  - name: CLC
    uid: adaptive-expressions-ie11.CommonRegexParser.CLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CLC: 46 = 46'
      return:
        type: '46'
        description: ''
  - name: CloseBrace
    uid: adaptive-expressions-ie11.CommonRegexParser.CloseBrace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CloseBrace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CloseBrace: 29 = 29'
      return:
        type: '29'
        description: ''
  - name: CloseParen
    uid: adaptive-expressions-ie11.CommonRegexParser.CloseParen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CloseParen
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CloseParen: 34 = 34'
      return:
        type: '34'
        description: ''
  - name: Colon
    uid: adaptive-expressions-ie11.CommonRegexParser.Colon
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Colon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Colon: 39 = 39'
      return:
        type: '39'
        description: ''
  - name: Comma
    uid: adaptive-expressions-ie11.CommonRegexParser.Comma
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Comma
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Comma: 30 = 30'
      return:
        type: '30'
        description: ''
  - name: context
    uid: adaptive-expressions-ie11.CommonRegexParser.context
    package: adaptive-expressions-ie11
    summary: ''
    fullName: context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: ParserRuleContext'
      return:
        type: ParserRuleContext
        description: ''
  - name: ControlChar
    uid: adaptive-expressions-ie11.CommonRegexParser.ControlChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ControlChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ControlChar: 4 = 4'
      return:
        type: '4'
        description: ''
  - name: CUC
    uid: adaptive-expressions-ie11.CommonRegexParser.CUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: CUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static CUC: 72 = 72'
      return:
        type: '72'
        description: ''
  - name: currentToken
    uid: adaptive-expressions-ie11.CommonRegexParser.currentToken
    package: adaptive-expressions-ie11
    summary: |-
      Match needs to return the current input symbol, which gets put
       into the label for the associated token ref; e.g., x=ID.
    fullName: currentToken
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'currentToken: Token'
      return:
        type: Token
        description: ''
  - name: D0
    uid: adaptive-expressions-ie11.CommonRegexParser.D0
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D0
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D0: 105 = 105'
      return:
        type: '105'
        description: ''
  - name: D1
    uid: adaptive-expressions-ie11.CommonRegexParser.D1
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D1
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D1: 96 = 96'
      return:
        type: '96'
        description: ''
  - name: D2
    uid: adaptive-expressions-ie11.CommonRegexParser.D2
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D2
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D2: 97 = 97'
      return:
        type: '97'
        description: ''
  - name: D3
    uid: adaptive-expressions-ie11.CommonRegexParser.D3
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D3
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D3: 98 = 98'
      return:
        type: '98'
        description: ''
  - name: D4
    uid: adaptive-expressions-ie11.CommonRegexParser.D4
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D4
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D4: 99 = 99'
      return:
        type: '99'
        description: ''
  - name: D5
    uid: adaptive-expressions-ie11.CommonRegexParser.D5
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D5
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D5: 100 = 100'
      return:
        type: '100'
        description: ''
  - name: D6
    uid: adaptive-expressions-ie11.CommonRegexParser.D6
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D6
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D6: 101 = 101'
      return:
        type: '101'
        description: ''
  - name: D7
    uid: adaptive-expressions-ie11.CommonRegexParser.D7
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D7
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D7: 102 = 102'
      return:
        type: '102'
        description: ''
  - name: D8
    uid: adaptive-expressions-ie11.CommonRegexParser.D8
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D8
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D8: 103 = 103'
      return:
        type: '103'
        description: ''
  - name: D9
    uid: adaptive-expressions-ie11.CommonRegexParser.D9
    package: adaptive-expressions-ie11
    summary: ''
    fullName: D9
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static D9: 104 = 104'
      return:
        type: '104'
        description: ''
  - name: DecimalDigit
    uid: adaptive-expressions-ie11.CommonRegexParser.DecimalDigit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DecimalDigit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static DecimalDigit: 13 = 13'
      return:
        type: '13'
        description: ''
  - name: DLC
    uid: adaptive-expressions-ie11.CommonRegexParser.DLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static DLC: 47 = 47'
      return:
        type: '47'
        description: ''
  - name: Dot
    uid: adaptive-expressions-ie11.CommonRegexParser.Dot
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Dot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Dot: 12 = 12'
      return:
        type: '12'
        description: ''
  - name: DUC
    uid: adaptive-expressions-ie11.CommonRegexParser.DUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: DUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static DUC: 73 = 73'
      return:
        type: '73'
        description: ''
  - name: ELC
    uid: adaptive-expressions-ie11.CommonRegexParser.ELC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ELC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ELC: 48 = 48'
      return:
        type: '48'
        description: ''
  - name: EndOfSubject
    uid: adaptive-expressions-ie11.CommonRegexParser.EndOfSubject
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EndOfSubject
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EndOfSubject: 31 = 31'
      return:
        type: '31'
        description: ''
  - name: EOF
    uid: adaptive-expressions-ie11.CommonRegexParser.EOF
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EOF
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EOF: number'
      return:
        type: number
        description: ''
  - name: Equals
    uid: adaptive-expressions-ie11.CommonRegexParser.Equals
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Equals
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Equals: 41 = 41'
      return:
        type: '41'
        description: ''
  - name: errorHandler
    uid: adaptive-expressions-ie11.CommonRegexParser.errorHandler
    package: adaptive-expressions-ie11
    summary: ''
    fullName: errorHandler
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'errorHandler: ANTLRErrorStrategy'
      return:
        type: ANTLRErrorStrategy
        description: ''
  - name: EscapeChar
    uid: adaptive-expressions-ie11.CommonRegexParser.EscapeChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EscapeChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EscapeChar: 5 = 5'
      return:
        type: '5'
        description: ''
  - name: EUC
    uid: adaptive-expressions-ie11.CommonRegexParser.EUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: EUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static EUC: 74 = 74'
      return:
        type: '74'
        description: ''
  - name: Exclamation
    uid: adaptive-expressions-ie11.CommonRegexParser.Exclamation
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Exclamation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Exclamation: 42 = 42'
      return:
        type: '42'
        description: ''
  - name: FLC
    uid: adaptive-expressions-ie11.CommonRegexParser.FLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static FLC: 49 = 49'
      return:
        type: '49'
        description: ''
  - name: FormFeed
    uid: adaptive-expressions-ie11.CommonRegexParser.FormFeed
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FormFeed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static FormFeed: 6 = 6'
      return:
        type: '6'
        description: ''
  - name: FUC
    uid: adaptive-expressions-ie11.CommonRegexParser.FUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: FUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static FUC: 75 = 75'
      return:
        type: '75'
        description: ''
  - name: GLC
    uid: adaptive-expressions-ie11.CommonRegexParser.GLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static GLC: 50 = 50'
      return:
        type: '50'
        description: ''
  - name: grammarFileName
    uid: adaptive-expressions-ie11.CommonRegexParser.grammarFileName
    package: adaptive-expressions-ie11
    summary: ''
    fullName: grammarFileName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'grammarFileName: string'
      return:
        type: string
        description: ''
  - name: GreaterThan
    uid: adaptive-expressions-ie11.CommonRegexParser.GreaterThan
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GreaterThan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static GreaterThan: 36 = 36'
      return:
        type: '36'
        description: ''
  - name: GUC
    uid: adaptive-expressions-ie11.CommonRegexParser.GUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: GUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static GUC: 76 = 76'
      return:
        type: '76'
        description: ''
  - name: Hash
    uid: adaptive-expressions-ie11.CommonRegexParser.Hash
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Hash
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Hash: 40 = 40'
      return:
        type: '40'
        description: ''
  - name: HexChar
    uid: adaptive-expressions-ie11.CommonRegexParser.HexChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HexChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static HexChar: 11 = 11'
      return:
        type: '11'
        description: ''
  - name: HLC
    uid: adaptive-expressions-ie11.CommonRegexParser.HLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static HLC: 51 = 51'
      return:
        type: '51'
        description: ''
  - name: HUC
    uid: adaptive-expressions-ie11.CommonRegexParser.HUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: HUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static HUC: 77 = 77'
      return:
        type: '77'
        description: ''
  - name: Hyphen
    uid: adaptive-expressions-ie11.CommonRegexParser.Hyphen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Hyphen
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Hyphen: 24 = 24'
      return:
        type: '24'
        description: ''
  - name: ILC
    uid: adaptive-expressions-ie11.CommonRegexParser.ILC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ILC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ILC: 52 = 52'
      return:
        type: '52'
        description: ''
  - name: inputStream
    uid: adaptive-expressions-ie11.CommonRegexParser.inputStream
    package: adaptive-expressions-ie11
    summary: Set the token stream and reset the parser.
    fullName: inputStream
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inputStream: TokenStream'
      return:
        type: TokenStream
        description: ''
  - name: interpreter
    uid: adaptive-expressions-ie11.CommonRegexParser.interpreter
    package: adaptive-expressions-ie11
    summary: Set the ATN interpreter used by the recognizer for prediction.
    fullName: interpreter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'interpreter: ParserATNSimulator'
      return:
        type: ParserATNSimulator
        description: ''
  - name: isMatchedEOF
    uid: adaptive-expressions-ie11.CommonRegexParser.isMatchedEOF
    package: adaptive-expressions-ie11
    summary: ''
    fullName: isMatchedEOF
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isMatchedEOF: boolean'
      return:
        type: boolean
        description: ''
  - name: isTrace
    uid: adaptive-expressions-ie11.CommonRegexParser.isTrace
    package: adaptive-expressions-ie11
    summary: |-
      During a parse is sometimes useful to listen in on the rule entry and exit
       events as well as token matches. This is for quick and dirty debugging.
    fullName: isTrace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isTrace: boolean'
      return:
        type: boolean
        description: ''
  - name: IUC
    uid: adaptive-expressions-ie11.CommonRegexParser.IUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: IUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static IUC: 78 = 78'
      return:
        type: '78'
        description: ''
  - name: JLC
    uid: adaptive-expressions-ie11.CommonRegexParser.JLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: JLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static JLC: 53 = 53'
      return:
        type: '53'
        description: ''
  - name: JUC
    uid: adaptive-expressions-ie11.CommonRegexParser.JUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: JUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static JUC: 79 = 79'
      return:
        type: '79'
        description: ''
  - name: KLC
    uid: adaptive-expressions-ie11.CommonRegexParser.KLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: KLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static KLC: 54 = 54'
      return:
        type: '54'
        description: ''
  - name: KUC
    uid: adaptive-expressions-ie11.CommonRegexParser.KUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: KUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static KUC: 80 = 80'
      return:
        type: '80'
        description: ''
  - name: LessThan
    uid: adaptive-expressions-ie11.CommonRegexParser.LessThan
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LessThan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static LessThan: 35 = 35'
      return:
        type: '35'
        description: ''
  - name: LLC
    uid: adaptive-expressions-ie11.CommonRegexParser.LLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static LLC: 55 = 55'
      return:
        type: '55'
        description: ''
  - name: LUC
    uid: adaptive-expressions-ie11.CommonRegexParser.LUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: LUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static LUC: 81 = 81'
      return:
        type: '81'
        description: ''
  - name: MLC
    uid: adaptive-expressions-ie11.CommonRegexParser.MLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static MLC: 56 = 56'
      return:
        type: '56'
        description: ''
  - name: MUC
    uid: adaptive-expressions-ie11.CommonRegexParser.MUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: MUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static MUC: 82 = 82'
      return:
        type: '82'
        description: ''
  - name: NewLine
    uid: adaptive-expressions-ie11.CommonRegexParser.NewLine
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NewLine
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static NewLine: 7 = 7'
      return:
        type: '7'
        description: ''
  - name: NLC
    uid: adaptive-expressions-ie11.CommonRegexParser.NLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static NLC: 57 = 57'
      return:
        type: '57'
        description: ''
  - name: NotDecimalDigit
    uid: adaptive-expressions-ie11.CommonRegexParser.NotDecimalDigit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotDecimalDigit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static NotDecimalDigit: 14 = 14'
      return:
        type: '14'
        description: ''
  - name: NotWhiteSpace
    uid: adaptive-expressions-ie11.CommonRegexParser.NotWhiteSpace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotWhiteSpace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static NotWhiteSpace: 18 = 18'
      return:
        type: '18'
        description: ''
  - name: NotWordChar
    uid: adaptive-expressions-ie11.CommonRegexParser.NotWordChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NotWordChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static NotWordChar: 20 = 20'
      return:
        type: '20'
        description: ''
  - name: NUC
    uid: adaptive-expressions-ie11.CommonRegexParser.NUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: NUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static NUC: 83 = 83'
      return:
        type: '83'
        description: ''
  - name: numberOfSyntaxErrors
    uid: adaptive-expressions-ie11.CommonRegexParser.numberOfSyntaxErrors
    package: adaptive-expressions-ie11
    summary: |-
      Gets the number of syntax errors reported during parsing. This value is
      incremented each time <xref:%23notifyErrorListeners> is called.
    fullName: numberOfSyntaxErrors
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'numberOfSyntaxErrors: number'
      return:
        type: number
        description: ''
  - name: OLC
    uid: adaptive-expressions-ie11.CommonRegexParser.OLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static OLC: 58 = 58'
      return:
        type: '58'
        description: ''
  - name: OpenBrace
    uid: adaptive-expressions-ie11.CommonRegexParser.OpenBrace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OpenBrace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static OpenBrace: 28 = 28'
      return:
        type: '28'
        description: ''
  - name: OpenParen
    uid: adaptive-expressions-ie11.CommonRegexParser.OpenParen
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OpenParen
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static OpenParen: 33 = 33'
      return:
        type: '33'
        description: ''
  - name: OtherChar
    uid: adaptive-expressions-ie11.CommonRegexParser.OtherChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OtherChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static OtherChar: 106 = 106'
      return:
        type: '106'
        description: ''
  - name: OUC
    uid: adaptive-expressions-ie11.CommonRegexParser.OUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: OUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static OUC: 84 = 84'
      return:
        type: '84'
        description: ''
  - name: parseInfo
    uid: adaptive-expressions-ie11.CommonRegexParser.parseInfo
    package: adaptive-expressions-ie11
    summary: ''
    fullName: parseInfo
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'parseInfo: Promise<ParseInfo | undefined>'
      return:
        type: Promise&lt;ParseInfo | undefined&gt;
        description: ''
  - name: Pipe
    uid: adaptive-expressions-ie11.CommonRegexParser.Pipe
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Pipe
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Pipe: 32 = 32'
      return:
        type: '32'
        description: ''
  - name: PLC
    uid: adaptive-expressions-ie11.CommonRegexParser.PLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: PLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static PLC: 59 = 59'
      return:
        type: '59'
        description: ''
  - name: Plus
    uid: adaptive-expressions-ie11.CommonRegexParser.Plus
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Plus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Plus: 26 = 26'
      return:
        type: '26'
        description: ''
  - name: precedence
    uid: adaptive-expressions-ie11.CommonRegexParser.precedence
    package: adaptive-expressions-ie11
    summary: Get the precedence level for the top-most precedence rule.
    fullName: precedence
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'precedence: number'
      return:
        type: number
        description: ''
  - name: PUC
    uid: adaptive-expressions-ie11.CommonRegexParser.PUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: PUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static PUC: 85 = 85'
      return:
        type: '85'
        description: ''
  - name: QLC
    uid: adaptive-expressions-ie11.CommonRegexParser.QLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static QLC: 60 = 60'
      return:
        type: '60'
        description: ''
  - name: QUC
    uid: adaptive-expressions-ie11.CommonRegexParser.QUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static QUC: 86 = 86'
      return:
        type: '86'
        description: ''
  - name: QuestionMark
    uid: adaptive-expressions-ie11.CommonRegexParser.QuestionMark
    package: adaptive-expressions-ie11
    summary: ''
    fullName: QuestionMark
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static QuestionMark: 25 = 25'
      return:
        type: '25'
        description: ''
  - name: Quoted
    uid: adaptive-expressions-ie11.CommonRegexParser.Quoted
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Quoted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Quoted: 1 = 1'
      return:
        type: '1'
        description: ''
  - name: RLC
    uid: adaptive-expressions-ie11.CommonRegexParser.RLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RLC: 61 = 61'
      return:
        type: '61'
        description: ''
  - name: RUC
    uid: adaptive-expressions-ie11.CommonRegexParser.RUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RUC: 87 = 87'
      return:
        type: '87'
        description: ''
  - name: ruleContext
    uid: adaptive-expressions-ie11.CommonRegexParser.ruleContext
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleContext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ruleContext: ParserRuleContext'
      return:
        type: ParserRuleContext
        description: ''
  - name: ruleNames
    uid: adaptive-expressions-ie11.CommonRegexParser.ruleNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ruleNames: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: ruleNames
    uid: adaptive-expressions-ie11.CommonRegexParser.ruleNames
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ruleNames
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ruleNames: string[]'
      return:
        type: 'string[]'
        description: ''
  - name: RULE_alpha_nums
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_alpha_nums
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_alpha_nums
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_alpha_nums: 23 = 23'
      return:
        type: '23'
        description: ''
  - name: RULE_alternation
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_alternation
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_alternation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_alternation: 1 = 1'
      return:
        type: '1'
        description: ''
  - name: RULE_atom
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_atom
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_atom: 11 = 11'
      return:
        type: '11'
        description: ''
  - name: RULE_capture
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_capture
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_capture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_capture: 7 = 7'
      return:
        type: '7'
        description: ''
  - name: RULE_cc_atom
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_cc_atom
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_cc_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_cc_atom: 12 = 12'
      return:
        type: '12'
        description: ''
  - name: RULE_cc_literal
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_cc_literal
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_cc_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_cc_literal: 15 = 15'
      return:
        type: '15'
        description: ''
  - name: RULE_character_class
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_character_class
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_character_class
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_character_class: 6 = 6'
      return:
        type: '6'
        description: ''
  - name: RULE_digit
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_digit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_digit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_digit: 21 = 21'
      return:
        type: '21'
        description: ''
  - name: RULE_digits
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_digits
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_digits
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_digits: 20 = 20'
      return:
        type: '20'
        description: ''
  - name: RULE_element
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_element
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_element
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_element: 3 = 3'
      return:
        type: '3'
        description: ''
  - name: RULE_expr
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_expr
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_expr
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_expr: 2 = 2'
      return:
        type: '2'
        description: ''
  - name: RULE_letter
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_letter
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_letter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_letter: 26 = 26'
      return:
        type: '26'
        description: ''
  - name: RULE_literal
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_literal
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_literal: 14 = 14'
      return:
        type: '14'
        description: ''
  - name: RULE_name
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_name
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_name: 22 = 22'
      return:
        type: '22'
        description: ''
  - name: RULE_non_capture
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_non_capture
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_non_capture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_non_capture: 8 = 8'
      return:
        type: '8'
        description: ''
  - name: RULE_non_close_paren
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_non_close_paren
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_non_close_paren
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_non_close_paren: 25 = 25'
      return:
        type: '25'
        description: ''
  - name: RULE_non_close_parens
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_non_close_parens
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_non_close_parens
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_non_close_parens: 24 = 24'
      return:
        type: '24'
        description: ''
  - name: RULE_number
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_number
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_number
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_number: 17 = 17'
      return:
        type: '17'
        description: ''
  - name: RULE_octal_char
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_octal_char
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_octal_char
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_octal_char: 18 = 18'
      return:
        type: '18'
        description: ''
  - name: RULE_octal_digit
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_octal_digit
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_octal_digit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_octal_digit: 19 = 19'
      return:
        type: '19'
        description: ''
  - name: RULE_option
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_option
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_option
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_option: 9 = 9'
      return:
        type: '9'
        description: ''
  - name: RULE_option_flag
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_option_flag
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_option_flag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_option_flag: 10 = 10'
      return:
        type: '10'
        description: ''
  - name: RULE_parse
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_parse
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_parse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_parse: 0 = 0'
      return:
        type: '0'
        description: ''
  - name: RULE_quantifier
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_quantifier
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_quantifier
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_quantifier: 4 = 4'
      return:
        type: '4'
        description: ''
  - name: RULE_quantifier_type
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_quantifier_type
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_quantifier_type
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_quantifier_type: 5 = 5'
      return:
        type: '5'
        description: ''
  - name: RULE_shared_atom
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_shared_atom
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_shared_atom
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_shared_atom: 13 = 13'
      return:
        type: '13'
        description: ''
  - name: RULE_shared_literal
    uid: adaptive-expressions-ie11.CommonRegexParser.RULE_shared_literal
    package: adaptive-expressions-ie11
    summary: ''
    fullName: RULE_shared_literal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static RULE_shared_literal: 16 = 16'
      return:
        type: '16'
        description: ''
  - name: serializedATN
    uid: adaptive-expressions-ie11.CommonRegexParser.serializedATN
    package: adaptive-expressions-ie11
    summary: ''
    fullName: serializedATN
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'serializedATN: string'
      return:
        type: string
        description: ''
  - name: SingleQuote
    uid: adaptive-expressions-ie11.CommonRegexParser.SingleQuote
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SingleQuote
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static SingleQuote: 37 = 37'
      return:
        type: '37'
        description: ''
  - name: SLC
    uid: adaptive-expressions-ie11.CommonRegexParser.SLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static SLC: 62 = 62'
      return:
        type: '62'
        description: ''
  - name: sourceName
    uid: adaptive-expressions-ie11.CommonRegexParser.sourceName
    package: adaptive-expressions-ie11
    summary: ''
    fullName: sourceName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sourceName: string'
      return:
        type: string
        description: ''
  - name: Star
    uid: adaptive-expressions-ie11.CommonRegexParser.Star
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Star
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Star: 27 = 27'
      return:
        type: '27'
        description: ''
  - name: state
    uid: adaptive-expressions-ie11.CommonRegexParser.state
    package: adaptive-expressions-ie11
    summary: |-
      Indicate that the recognizer has changed internal state that is
       consistent with the ATN state passed in.  This way we always know
       where we are in the ATN as the parser goes along. The rule
       context objects form a stack that lets us see the stack of
       invoking rules. Combine this and we have complete ATN
       configuration information.
    fullName: state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'state: number'
      return:
        type: number
        description: ''
  - name: SUC
    uid: adaptive-expressions-ie11.CommonRegexParser.SUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: SUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static SUC: 88 = 88'
      return:
        type: '88'
        description: ''
  - name: Tab
    uid: adaptive-expressions-ie11.CommonRegexParser.Tab
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Tab
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Tab: 9 = 9'
      return:
        type: '9'
        description: ''
  - name: TLC
    uid: adaptive-expressions-ie11.CommonRegexParser.TLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: TLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static TLC: 63 = 63'
      return:
        type: '63'
        description: ''
  - name: tokenFactory
    uid: adaptive-expressions-ie11.CommonRegexParser.tokenFactory
    package: adaptive-expressions-ie11
    summary: ''
    fullName: tokenFactory
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tokenFactory: TokenFactory'
      return:
        type: TokenFactory
        description: ''
  - name: TUC
    uid: adaptive-expressions-ie11.CommonRegexParser.TUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: TUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static TUC: 89 = 89'
      return:
        type: '89'
        description: ''
  - name: ULC
    uid: adaptive-expressions-ie11.CommonRegexParser.ULC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ULC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ULC: 64 = 64'
      return:
        type: '64'
        description: ''
  - name: Underscore
    uid: adaptive-expressions-ie11.CommonRegexParser.Underscore
    package: adaptive-expressions-ie11
    summary: ''
    fullName: Underscore
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static Underscore: 38 = 38'
      return:
        type: '38'
        description: ''
  - name: UUC
    uid: adaptive-expressions-ie11.CommonRegexParser.UUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: UUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static UUC: 90 = 90'
      return:
        type: '90'
        description: ''
  - name: VLC
    uid: adaptive-expressions-ie11.CommonRegexParser.VLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static VLC: 65 = 65'
      return:
        type: '65'
        description: ''
  - name: vocabulary
    uid: adaptive-expressions-ie11.CommonRegexParser.vocabulary
    package: adaptive-expressions-ie11
    summary: ''
    fullName: vocabulary
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vocabulary: Vocabulary'
      return:
        type: Vocabulary
        description: ''
  - name: VOCABULARY
    uid: adaptive-expressions-ie11.CommonRegexParser.VOCABULARY
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VOCABULARY
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static VOCABULARY: Vocabulary'
      return:
        type: Vocabulary
        description: ''
  - name: VUC
    uid: adaptive-expressions-ie11.CommonRegexParser.VUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: VUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static VUC: 91 = 91'
      return:
        type: '91'
        description: ''
  - name: WhiteSpace
    uid: adaptive-expressions-ie11.CommonRegexParser.WhiteSpace
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WhiteSpace
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static WhiteSpace: 17 = 17'
      return:
        type: '17'
        description: ''
  - name: WLC
    uid: adaptive-expressions-ie11.CommonRegexParser.WLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static WLC: 66 = 66'
      return:
        type: '66'
        description: ''
  - name: WordChar
    uid: adaptive-expressions-ie11.CommonRegexParser.WordChar
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WordChar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static WordChar: 19 = 19'
      return:
        type: '19'
        description: ''
  - name: WUC
    uid: adaptive-expressions-ie11.CommonRegexParser.WUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: WUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static WUC: 92 = 92'
      return:
        type: '92'
        description: ''
  - name: XLC
    uid: adaptive-expressions-ie11.CommonRegexParser.XLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: XLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static XLC: 67 = 67'
      return:
        type: '67'
        description: ''
  - name: XUC
    uid: adaptive-expressions-ie11.CommonRegexParser.XUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: XUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static XUC: 93 = 93'
      return:
        type: '93'
        description: ''
  - name: YLC
    uid: adaptive-expressions-ie11.CommonRegexParser.YLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: YLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static YLC: 68 = 68'
      return:
        type: '68'
        description: ''
  - name: YUC
    uid: adaptive-expressions-ie11.CommonRegexParser.YUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: YUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static YUC: 94 = 94'
      return:
        type: '94'
        description: ''
  - name: ZLC
    uid: adaptive-expressions-ie11.CommonRegexParser.ZLC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ZLC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ZLC: 69 = 69'
      return:
        type: '69'
        description: ''
  - name: ZUC
    uid: adaptive-expressions-ie11.CommonRegexParser.ZUC
    package: adaptive-expressions-ie11
    summary: ''
    fullName: ZUC
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static ZUC: 95 = 95'
      return:
        type: '95'
        description: ''
methods:
  - name: 'action(RuleContext | undefined, number, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.action
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function action(_localctx: RuleContext | undefined, ruleIndex: number,
        actionIndex: number)
      parameters:
        - id: _localctx
          type: RuleContext | undefined
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: actionIndex
          type: number
          description: ''
  - name: addErrorListener(ANTLRErrorListener<Token>)
    uid: adaptive-expressions-ie11.CommonRegexParser.addErrorListener
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addErrorListener(listener: ANTLRErrorListener<Token>)'
      parameters:
        - id: listener
          type: ANTLRErrorListener&lt;Token&gt;
          description: ''
  - name: addParseListener(ParseTreeListener)
    uid: adaptive-expressions-ie11.CommonRegexParser.addParseListener
    package: adaptive-expressions-ie11
    summary: |
      Registers `listener` to receive events during the parsing process.
      To support output-preserving grammar transformations (including but not
      limited to left-recursion removal, automated left-factoring, and
      optimized code generation), calls to listener methods during the parse
      may differ substantially from calls made by
      <xref:ParseTreeWalker%23DEFAULT> used after the parse is complete. In
      particular, rule entry and exit events may occur in a different order
      during the parse than after the parser. In addition, calls to certain
      rule entry methods may be omitted.

      With the following specific exceptions, calls to listener events are
      *deterministic*, i.e. for identical input the calls to listener
      methods will be the same.

      * Alterations to the grammar used to generate code may change the
        behavior of the listener calls.
      * Alterations to the command line options passed to ANTLR 4 when
        generating the parser may change the behavior of the listener calls.
      * Changing the version of the ANTLR Tool used to generate the parser
        may change the behavior of the listener calls.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addParseListener(listener: ParseTreeListener)'
      parameters:
        - id: listener
          type: ParseTreeListener
          description: |
            the listener to add
  - name: alpha_nums()
    uid: adaptive-expressions-ie11.CommonRegexParser.alpha_nums
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function alpha_nums()
      return:
        type: <xref uid="adaptive-expressions-ie11.Alpha_numsContext" />
        description: ''
  - name: alternation()
    uid: adaptive-expressions-ie11.CommonRegexParser.alternation
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function alternation()
      return:
        type: <xref uid="adaptive-expressions-ie11.AlternationContext" />
        description: ''
  - name: atom()
    uid: adaptive-expressions-ie11.CommonRegexParser.atom
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function atom()
      return:
        type: <xref uid="adaptive-expressions-ie11.AtomContext" />
        description: ''
  - name: capture()
    uid: adaptive-expressions-ie11.CommonRegexParser.capture
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function capture()
      return:
        type: <xref uid="adaptive-expressions-ie11.CaptureContext" />
        description: ''
  - name: cc_atom()
    uid: adaptive-expressions-ie11.CommonRegexParser.cc_atom
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function cc_atom()
      return:
        type: <xref uid="adaptive-expressions-ie11.Cc_atomContext" />
        description: ''
  - name: cc_literal()
    uid: adaptive-expressions-ie11.CommonRegexParser.cc_literal
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function cc_literal()
      return:
        type: <xref uid="adaptive-expressions-ie11.Cc_literalContext" />
        description: ''
  - name: character_class()
    uid: adaptive-expressions-ie11.CommonRegexParser.character_class
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function character_class()
      return:
        type: <xref uid="adaptive-expressions-ie11.Character_classContext" />
        description: ''
  - name: 'compileParseTreePattern(string, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.compileParseTreePattern
    package: adaptive-expressions-ie11
    summary: >
      The preferred method of getting a tree pattern. For example, here's a

      sample use:

      ```

      let t: ParseTree = parser.expr();

      let p: ParseTreePattern = await parser.compileParseTreePattern("<ID>+0",
      MyParser.RULE_expr);

      let m: ParseTreeMatch = p.match(t);

      let id: string = m.get("ID");

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function compileParseTreePattern(pattern: string, patternRuleIndex:
        number)
      parameters:
        - id: pattern
          type: string
          description: ''
        - id: patternRuleIndex
          type: number
          description: ''
      return:
        type: Promise&lt;ParseTreePattern&gt;
        description: ''
  - name: 'compileParseTreePattern(string, number, Lexer)'
    uid: adaptive-expressions-ie11.CommonRegexParser.compileParseTreePattern_1
    package: adaptive-expressions-ie11
    summary: >-
      The same as [int)](xref:%23compileParseTreePattern(String%2C) but specify
      a

      <xref:Lexer> rather than trying to deduce it from this parser.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function compileParseTreePattern(pattern: string, patternRuleIndex:
        number, lexer?: Lexer)
      parameters:
        - id: pattern
          type: string
          description: ''
        - id: patternRuleIndex
          type: number
          description: ''
        - id: lexer
          type: Lexer
          description: ''
      return:
        type: Promise&lt;ParseTreePattern&gt;
        description: ''
  - name: consume()
    uid: adaptive-expressions-ie11.CommonRegexParser.consume
    package: adaptive-expressions-ie11
    summary: >
      Consume and return the [current symbol](`currentToken`).

      E.g., given the following input with `A` being the current

      lookahead symbol, this function moves the cursor to `B` and returns

      `A`.


      ```

      A B

      ^

      ```


      If the parser is not in error recovery mode, the consumed symbol is added

      to the parse tree using <xref:ParserRuleContext%23addChild(TerminalNode)>,
      and

      <xref:ParseTreeListener%23visitTerminal> is called on any parse listeners.

      If the parser *is* in error recovery mode, the consumed symbol is

      added to the parse tree using
      [Token)](xref:%23createErrorNode(ParserRuleContext%2C) then

      <xref:ParserRuleContext%23addErrorNode(ErrorNode)> and

      <xref:ParseTreeListener%23visitErrorNode> is called on any parse

      listeners.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function consume()
      return:
        type: Token
        description: ''
  - name: 'createErrorNode(ParserRuleContext, Token)'
    uid: adaptive-expressions-ie11.CommonRegexParser.createErrorNode
    package: adaptive-expressions-ie11
    summary: |-
      How to create an error node, given a token, associated with a parent.
      Typically, the error node to create is not a function of the parent.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createErrorNode(parent: ParserRuleContext, t: Token)'
      parameters:
        - id: parent
          type: ParserRuleContext
          description: ''
        - id: t
          type: Token
          description: ''
      return:
        type: ErrorNode
        description: ''
  - name: 'createTerminalNode(ParserRuleContext, Token)'
    uid: adaptive-expressions-ie11.CommonRegexParser.createTerminalNode
    package: adaptive-expressions-ie11
    summary: |-
      How to create a token leaf node associated with a parent.
      Typically, the terminal node to create is not a function of the parent.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createTerminalNode(parent: ParserRuleContext, t: Token)'
      parameters:
        - id: parent
          type: ParserRuleContext
          description: ''
        - id: t
          type: Token
          description: ''
      return:
        type: TerminalNode
        description: ''
  - name: digit()
    uid: adaptive-expressions-ie11.CommonRegexParser.digit
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function digit()
      return:
        type: <xref uid="adaptive-expressions-ie11.DigitContext" />
        description: ''
  - name: digits()
    uid: adaptive-expressions-ie11.CommonRegexParser.digits
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function digits()
      return:
        type: <xref uid="adaptive-expressions-ie11.DigitsContext" />
        description: ''
  - name: dumpDFA()
    uid: adaptive-expressions-ie11.CommonRegexParser.dumpDFA
    package: adaptive-expressions-ie11
    summary: For debugging and other purposes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function dumpDFA()
  - name: element()
    uid: adaptive-expressions-ie11.CommonRegexParser.element
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function element()
      return:
        type: <xref uid="adaptive-expressions-ie11.ElementContext" />
        description: ''
  - name: 'enterLeftFactoredRule(ParserRuleContext, number, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.enterLeftFactoredRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enterLeftFactoredRule(localctx: ParserRuleContext, state:
        number, ruleIndex: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
  - name: 'enterOuterAlt(ParserRuleContext, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.enterOuterAlt
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function enterOuterAlt(localctx: ParserRuleContext, altNum: number)'
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: altNum
          type: number
          description: ''
  - name: 'enterRecursionRule(ParserRuleContext, number, number, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.enterRecursionRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enterRecursionRule(localctx: ParserRuleContext, state: number,
        ruleIndex: number, precedence: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: precedence
          type: number
          description: ''
  - name: 'enterRule(ParserRuleContext, number, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.enterRule
    package: adaptive-expressions-ie11
    summary: |-
      Always called by generated parsers upon entry to a rule. Access field
      <xref:%23_ctx> get the current context.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enterRule(localctx: ParserRuleContext, state: number,
        ruleIndex: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
  - name: exitRule()
    uid: adaptive-expressions-ie11.CommonRegexParser.exitRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function exitRule()
  - name: expr()
    uid: adaptive-expressions-ie11.CommonRegexParser.expr
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function expr()
      return:
        type: <xref uid="adaptive-expressions-ie11.ExprContext" />
        description: ''
  - name: getATNWithBypassAlts()
    uid: adaptive-expressions-ie11.CommonRegexParser.getATNWithBypassAlts
    package: adaptive-expressions-ie11
    summary: |
      The ATN with bypass alternatives is expensive to create so we create it
      lazily.
      @ if the current parser does not
      implement the `serializedATN` property.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getATNWithBypassAlts()
      return:
        type: ATN
        description: ''
  - name: getDFAStrings()
    uid: adaptive-expressions-ie11.CommonRegexParser.getDFAStrings
    package: adaptive-expressions-ie11
    summary: For debugging and other purposes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDFAStrings()
      return:
        type: 'string[]'
        description: ''
  - name: getErrorHeader(RecognitionException)
    uid: adaptive-expressions-ie11.CommonRegexParser.getErrorHeader
    package: adaptive-expressions-ie11
    summary: 'What is the error header, normally line/character position information?'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getErrorHeader(e: RecognitionException)'
      parameters:
        - id: e
          type: RecognitionException
          description: ''
      return:
        type: string
        description: ''
  - name: getErrorListenerDispatch()
    uid: adaptive-expressions-ie11.CommonRegexParser.getErrorListenerDispatch
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getErrorListenerDispatch()
      return:
        type: ParserErrorListener
        description: ''
  - name: getErrorListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.getErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getErrorListeners()
      return:
        type: Array&lt;ANTLRErrorListener&lt;Token&gt;&gt;
        description: ''
  - name: getExpectedTokens()
    uid: adaptive-expressions-ie11.CommonRegexParser.getExpectedTokens
    package: adaptive-expressions-ie11
    summary: >-
      Computes the set of input symbols which could follow the current parser

      state and context, as given by <xref:%23getState> and
      <xref:%23getContext>,

      respectively.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getExpectedTokens()
      return:
        type: IntervalSet
        description: ''
  - name: getExpectedTokensWithinCurrentRule()
    uid: >-
      adaptive-expressions-ie11.CommonRegexParser.getExpectedTokensWithinCurrentRule
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getExpectedTokensWithinCurrentRule()
      return:
        type: IntervalSet
        description: ''
  - name: getInvokingContext(number)
    uid: adaptive-expressions-ie11.CommonRegexParser.getInvokingContext
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getInvokingContext(ruleIndex: number)'
      parameters:
        - id: ruleIndex
          type: number
          description: ''
      return:
        type: ParserRuleContext | undefined
        description: ''
  - name: getParseListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.getParseListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getParseListeners()
      return:
        type: 'ParseTreeListener[]'
        description: ''
  - name: getRuleIndex(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.getRuleIndex
    package: adaptive-expressions-ie11
    summary: 'Get a rule''s index (i.e., `RULE_ruleName` field) or -1 if not found.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getRuleIndex(ruleName: string)'
      parameters:
        - id: ruleName
          type: string
          description: ''
      return:
        type: number
        description: ''
  - name: getRuleIndexMap()
    uid: adaptive-expressions-ie11.CommonRegexParser.getRuleIndexMap
    package: adaptive-expressions-ie11
    summary: |
      Get a map from rule names to rule indexes.
      Used for XPath and tree pattern compilation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getRuleIndexMap()
      return:
        type: 'ReadonlyMap&lt;string, number&gt;'
        description: ''
  - name: getRuleInvocationStack(RuleContext)
    uid: adaptive-expressions-ie11.CommonRegexParser.getRuleInvocationStack
    package: adaptive-expressions-ie11
    summary: |
      Return List&lt;String&gt; of the rule names in your parser instance
       leading up to a call to the current rule.  You could override if
       you want more details such as the file/line info of where
       in the ATN a rule is invoked.
       This is very useful for error messages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getRuleInvocationStack(ctx?: RuleContext)'
      parameters:
        - id: ctx
          type: RuleContext
          description: ''
      return:
        type: 'string[]'
        description: ''
  - name: getTokenType(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.getTokenType
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTokenType(tokenName: string)'
      parameters:
        - id: tokenName
          type: string
          description: ''
      return:
        type: number
        description: ''
  - name: getTokenTypeMap()
    uid: adaptive-expressions-ie11.CommonRegexParser.getTokenTypeMap
    package: adaptive-expressions-ie11
    summary: |
      Get a map from token names to token types.
      Used for XPath and tree pattern compilation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getTokenTypeMap()
      return:
        type: 'ReadonlyMap&lt;string, number&gt;'
        description: ''
  - name: inContext(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.inContext
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function inContext(context: string)'
      parameters:
        - id: context
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: isExpectedToken(number)
    uid: adaptive-expressions-ie11.CommonRegexParser.isExpectedToken
    package: adaptive-expressions-ie11
    summary: |
      Checks whether or not `symbol` can follow the current state in the
      ATN. The behavior of this method is equivalent to the following, but is
      implemented such that the complete context-sensitive follow set does not
      need to be explicitly constructed.
      ```
      return getExpectedTokens().contains(symbol);
      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isExpectedToken(symbol: number)'
      parameters:
        - id: symbol
          type: number
          description: the symbol type to check
      return:
        type: boolean
        description: |-
          `true` if `symbol` can follow the current state in
          the ATN, otherwise `false`.
  - name: letter()
    uid: adaptive-expressions-ie11.CommonRegexParser.letter
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function letter()
      return:
        type: <xref uid="adaptive-expressions-ie11.LetterContext" />
        description: ''
  - name: literal()
    uid: adaptive-expressions-ie11.CommonRegexParser.literal
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function literal()
      return:
        type: <xref uid="adaptive-expressions-ie11.LiteralContext" />
        description: ''
  - name: match(number)
    uid: adaptive-expressions-ie11.CommonRegexParser.match
    package: adaptive-expressions-ie11
    summary: >
      Match current input symbol against `ttype`. If the symbol type

      matches, <xref:ANTLRErrorStrategy%23reportMatch> and <xref:%23consume> are

      called to complete the match process.

      If the symbol type does not match,

      <xref:ANTLRErrorStrategy%23recoverInline> is called on the current error

      strategy to attempt recovery. If <xref:%23getBuildParseTree> is

      `true` and the token index of the symbol returned by

      <xref:ANTLRErrorStrategy%23recoverInline> is -1, the symbol is added to

      the parse tree by calling
      [Token)](xref:%23createErrorNode(ParserRuleContext%2C) then

      <xref:ParserRuleContext%23addErrorNode(ErrorNode)>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function match(ttype: number)'
      parameters:
        - id: ttype
          type: number
          description: the token type to match
      return:
        type: Token
        description: |-
          the matched symbol
          @ if the current input symbol did not match
          `ttype` and the error strategy could not recover from the
          mismatched symbol
  - name: matchWildcard()
    uid: adaptive-expressions-ie11.CommonRegexParser.matchWildcard
    package: adaptive-expressions-ie11
    summary: >
      Match current input symbol as a wildcard. If the symbol type matches

      (i.e. has a value greater than 0), <xref:ANTLRErrorStrategy%23reportMatch>

      and <xref:%23consume> are called to complete the match process.

      If the symbol type does not match,

      <xref:ANTLRErrorStrategy%23recoverInline> is called on the current error

      strategy to attempt recovery. If <xref:%23getBuildParseTree> is

      `true` and the token index of the symbol returned by

      <xref:ANTLRErrorStrategy%23recoverInline> is -1, the symbol is added to

      the parse tree by calling
      [Token)](xref:Parser%23createErrorNode(ParserRuleContext%2C) then

      <xref:ParserRuleContext%23addErrorNode(ErrorNode)>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function matchWildcard()
      return:
        type: Token
        description: >-
          the matched symbol

          @ if the current input symbol did not match

          a wildcard and the error strategy could not recover from the
          mismatched

          symbol
  - name: name()
    uid: adaptive-expressions-ie11.CommonRegexParser.name
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function name()
      return:
        type: <xref uid="adaptive-expressions-ie11.NameContext" />
        description: ''
  - name: non_capture()
    uid: adaptive-expressions-ie11.CommonRegexParser.non_capture
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function non_capture()
      return:
        type: <xref uid="adaptive-expressions-ie11.Non_captureContext" />
        description: ''
  - name: non_close_paren()
    uid: adaptive-expressions-ie11.CommonRegexParser.non_close_paren
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function non_close_paren()
      return:
        type: <xref uid="adaptive-expressions-ie11.Non_close_parenContext" />
        description: ''
  - name: non_close_parens()
    uid: adaptive-expressions-ie11.CommonRegexParser.non_close_parens
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function non_close_parens()
      return:
        type: <xref uid="adaptive-expressions-ie11.Non_close_parensContext" />
        description: ''
  - name: notifyErrorListeners(string)
    uid: adaptive-expressions-ie11.CommonRegexParser.notifyErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function notifyErrorListeners(msg: string)'
      parameters:
        - id: msg
          type: string
          description: ''
  - name: >-
      notifyErrorListeners(string, Token | null, RecognitionException |
      undefined)
    uid: adaptive-expressions-ie11.CommonRegexParser.notifyErrorListeners_1
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function notifyErrorListeners(msg: string, offendingToken: Token | null,
        e: RecognitionException | undefined)
      parameters:
        - id: msg
          type: string
          description: ''
        - id: offendingToken
          type: Token | null
          description: ''
        - id: e
          type: RecognitionException | undefined
          description: ''
  - name: number()
    uid: adaptive-expressions-ie11.CommonRegexParser.number
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function number()
      return:
        type: <xref uid="adaptive-expressions-ie11.NumberContext" />
        description: ''
  - name: octal_char()
    uid: adaptive-expressions-ie11.CommonRegexParser.octal_char
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function octal_char()
      return:
        type: <xref uid="adaptive-expressions-ie11.Octal_charContext" />
        description: ''
  - name: octal_digit()
    uid: adaptive-expressions-ie11.CommonRegexParser.octal_digit
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function octal_digit()
      return:
        type: <xref uid="adaptive-expressions-ie11.Octal_digitContext" />
        description: ''
  - name: option()
    uid: adaptive-expressions-ie11.CommonRegexParser.option
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function option()
      return:
        type: <xref uid="adaptive-expressions-ie11.OptionContext" />
        description: ''
  - name: option_flag()
    uid: adaptive-expressions-ie11.CommonRegexParser.option_flag
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function option_flag()
      return:
        type: <xref uid="adaptive-expressions-ie11.Option_flagContext" />
        description: ''
  - name: parse()
    uid: adaptive-expressions-ie11.CommonRegexParser.parse
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function parse()
      return:
        type: <xref uid="adaptive-expressions-ie11.ParseContext" />
        description: ''
  - name: 'precpred(RuleContext, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.precpred
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function precpred(localctx: RuleContext, precedence: number)'
      parameters:
        - id: localctx
          type: RuleContext
          description: ''
        - id: precedence
          type: number
          description: ''
      return:
        type: boolean
        description: ''
  - name: 'pushNewRecursionContext(ParserRuleContext, number, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.pushNewRecursionContext
    package: adaptive-expressions-ie11
    summary: |-
      Like <xref:%23enterRule> but for recursive rules.
       Make the current context the child of the incoming localctx.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function pushNewRecursionContext(localctx: ParserRuleContext, state:
        number, ruleIndex: number)
      parameters:
        - id: localctx
          type: ParserRuleContext
          description: ''
        - id: state
          type: number
          description: ''
        - id: ruleIndex
          type: number
          description: ''
  - name: quantifier()
    uid: adaptive-expressions-ie11.CommonRegexParser.quantifier
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function quantifier()
      return:
        type: <xref uid="adaptive-expressions-ie11.QuantifierContext" />
        description: ''
  - name: quantifier_type()
    uid: adaptive-expressions-ie11.CommonRegexParser.quantifier_type
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function quantifier_type()
      return:
        type: <xref uid="adaptive-expressions-ie11.Quantifier_typeContext" />
        description: ''
  - name: removeErrorListener(ANTLRErrorListener<Token>)
    uid: adaptive-expressions-ie11.CommonRegexParser.removeErrorListener
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeErrorListener(listener: ANTLRErrorListener<Token>)'
      parameters:
        - id: listener
          type: ANTLRErrorListener&lt;Token&gt;
          description: ''
  - name: removeErrorListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.removeErrorListeners
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function removeErrorListeners()
  - name: removeParseListener(ParseTreeListener)
    uid: adaptive-expressions-ie11.CommonRegexParser.removeParseListener
    package: adaptive-expressions-ie11
    summary: |
      Remove `listener` from the list of parse listeners.
      If `listener` is `undefined` or has not been added as a parse
      listener, this method does nothing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeParseListener(listener: ParseTreeListener)'
      parameters:
        - id: listener
          type: ParseTreeListener
          description: |
            the listener to remove
  - name: removeParseListeners()
    uid: adaptive-expressions-ie11.CommonRegexParser.removeParseListeners
    package: adaptive-expressions-ie11
    summary: Remove all parse listeners.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function removeParseListeners()
  - name: reset()
    uid: adaptive-expressions-ie11.CommonRegexParser.reset
    package: adaptive-expressions-ie11
    summary: reset the parser's state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function reset()
  - name: reset(boolean)
    uid: adaptive-expressions-ie11.CommonRegexParser.reset_1
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function reset(resetInput: boolean)'
      parameters:
        - id: resetInput
          type: boolean
          description: ''
  - name: 'sempred(RuleContext | undefined, number, number)'
    uid: adaptive-expressions-ie11.CommonRegexParser.sempred
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sempred(_localctx: RuleContext | undefined, ruleIndex: number,
        actionIndex: number)
      parameters:
        - id: _localctx
          type: RuleContext | undefined
          description: ''
        - id: ruleIndex
          type: number
          description: ''
        - id: actionIndex
          type: number
          description: ''
      return:
        type: boolean
        description: ''
  - name: setProfile(boolean)
    uid: adaptive-expressions-ie11.CommonRegexParser.setProfile
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setProfile(profile: boolean)'
      parameters:
        - id: profile
          type: boolean
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: shared_atom()
    uid: adaptive-expressions-ie11.CommonRegexParser.shared_atom
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function shared_atom()
      return:
        type: <xref uid="adaptive-expressions-ie11.Shared_atomContext" />
        description: ''
  - name: shared_literal()
    uid: adaptive-expressions-ie11.CommonRegexParser.shared_literal
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function shared_literal()
      return:
        type: <xref uid="adaptive-expressions-ie11.Shared_literalContext" />
        description: ''
  - name: unrollRecursionContexts(ParserRuleContext)
    uid: adaptive-expressions-ie11.CommonRegexParser.unrollRecursionContexts
    package: adaptive-expressions-ie11
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function unrollRecursionContexts(_parentctx: ParserRuleContext)'
      parameters:
        - id: _parentctx
          type: ParserRuleContext
          description: ''
extends: Parser
