### YamlMime:TSType
name: Clause
uid: adaptive-expressions-ie11.Clause
package: adaptive-expressions-ie11
summary: A canonical normal form expression.
fullName: Clause
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'Clause(Clause | Expression | Expression[])'
    uid: adaptive-expressions-ie11.Clause.constructor
    package: adaptive-expressions-ie11
    summary: Initializes a new instance of the `Clause` class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Clause(clauseOrExpression?: Clause | Expression | Expression[])'
      parameters:
        - id: clauseOrExpression
          type: >-
            <xref uid="adaptive-expressions-ie11.Clause" /> | Expression |
            Expression[]
          description: >
            A clause, expression or an array of expressions to initialize a
            `Clause`.
properties:
  - name: anyBindings
    uid: adaptive-expressions-ie11.Clause.anyBindings
    package: adaptive-expressions-ie11
    summary: Gets or sets the anyBinding dictionary.
    fullName: anyBindings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'anyBindings: Map<string, string>'
      return:
        type: 'Map&lt;string, string&gt;'
        description: ''
  - name: subsumed
    uid: adaptive-expressions-ie11.Clause.subsumed
    package: adaptive-expressions-ie11
    summary: Gets or sets whether the clause is subsumed.
    fullName: subsumed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subsumed: boolean'
      return:
        type: boolean
        description: ''
methods:
  - name: 'matches(Clause, MemoryInterface | any)'
    uid: adaptive-expressions-ie11.Clause.matches
    package: adaptive-expressions-ie11
    summary: Determines whether the current `Clause` matches with another `Clause`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function matches(clause: Clause, memory: MemoryInterface | any)'
      parameters:
        - id: clause
          type: <xref uid="adaptive-expressions-ie11.Clause" />
          description: The other `Clause` instance to compare with.
        - id: memory
          type: <xref uid="adaptive-expressions-ie11.MemoryInterface" /> | any
          description: The scope for looking up variables.
      return:
        type: boolean
        description: A boolean value indicating whether the two clauses are matches.
  - name: 'relationship(Clause, PredicateComparers)'
    uid: adaptive-expressions-ie11.Clause.relationship
    package: adaptive-expressions-ie11
    summary: Compares the current `Clause` with another `Clause`.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function relationship(other: Clause, comparers: PredicateComparers)'
      parameters:
        - id: other
          type: <xref uid="adaptive-expressions-ie11.Clause" />
          description: The other `Clause` to compare.
        - id: comparers
          type: <xref uid="adaptive-expressions-ie11.PredicateComparers" />
          description: >-
            A comparer, which is a dictionary of `PredicateComparer` with string
            keys.
      return:
        type: <xref uid="adaptive-expressions-ie11.RelationshipType" />
        description: A `RelationshipType` value between two `Clause` instances.
  - name: splitIgnores()
    uid: adaptive-expressions-ie11.Clause.splitIgnores
    package: adaptive-expressions-ie11
    summary: Splits ignored child expressions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function splitIgnores()
  - name: 'toString(string[], number)'
    uid: adaptive-expressions-ie11.Clause.toString
    package: adaptive-expressions-ie11
    summary: Gets a string that represents the current clause.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function toString(builder?: string[], indent?: number)'
      parameters:
        - id: builder
          type: 'string[]'
          description: An array of string to build the string of clause.
        - id: indent
          type: number
          description: |
            An integer represents the number of spaces at the start of a line.
      return:
        type: string
        description: ''
extends: any
